{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AWS Controllers for Kubernetes \u00b6 AWS Controllers for Kubernetes (ACK) lets you define and use AWS service resources directly from Kubernetes. With ACK, you can take advantage of AWS managed services for your Kubernetes applications without needing to define resources outside of the cluster or run services that provide supporting capabilities like databases or message queues within the cluster. This is a fully open source project built with \u2764\ufe0f by AWS. The project is structured as a set of source code repositories containing a common runtime , a code generator , some common testing infrastructure and a series of individual service controllers that correspond to AWS services (e.g. the RDS service controller for ACK ). Individual ACK service controllers are installable as separate binaries either manually via raw manifests or via a Helm chart that corresponds to the individual service controller. !!! note IMPORTANT Individual ACK service controllers may be in different maintenance phases and follow separate release cadences. Please read our documentation about project stages and maintenance phases fully, including how we release and version our controllers. Controllers in a PREVIEW maintenance phase have at least one container image and Helm chart released to an ECR Public repository. However, be aware that controllers in a PREVIEW maintenance phase may have significant and breaking changes introduced in a future release. Background \u00b6 Kubernetes applications often require a number of supporting resources like databases, message queues, and object stores to operate. AWS provides a set of managed services that you can use to provide these resources for your applications, but provisioning and integrating them with Kubernetes was complex and time consuming. ACK lets you define and consume many AWS services and resources directly within a Kubernetes cluster. ACK gives you a unified, operationally seamless way to manage your application and its dependencies. Connecting Kubernetes and AWS APIs \u00b6 ACK is a collection of Kubernetes Custom Resource Definitions (CRDs) and controllers which work together to extend the Kubernetes API and create AWS resources on your cluster\u2019s behalf. ACK comprises a set of Kubernetes custom controllers . Each controller manages custom resources representing API resources of a single AWS service API. For example, the ACK service controller for AWS Simple Storage Service (S3) manages custom resources that represent AWS S3 buckets. Instead of logging into the AWS console or using the aws CLI tool to interact with the AWS service API, Kubernetes users can install a controller for an AWS service and then create, update, read and delete AWS resources using the Kubernetes API. This means they can use the Kubernetes API and configuration language to fully describe both their containerized applications, using Kubernetes resources like Deployment and Service , as well as any AWS service resources upon which those applications depend. Read more about how ACK works . Getting started \u00b6 Please see the list of ACK service controllers currently in one of our project stages . You can install any of the controllers in the RELEASED project stage using Helm (recommended) or manually using the raw Kubernetes manifests contained in the individual ACK service controller's source repository. Once installed, Kubernetes users may apply a custom resource (CR) corresponding to one of the resources exposed by the ACK service controller for the service. To view the list of custom resources and each CR's schema, visit our reference documentation . Getting help \u00b6 For help, please consider the following venues (in order): Search open issues File an issue Chat with us on the #provider-aws channel in the Kubernetes Slack community.","title":"Overview"},{"location":"#aws-controllers-for-kubernetes","text":"AWS Controllers for Kubernetes (ACK) lets you define and use AWS service resources directly from Kubernetes. With ACK, you can take advantage of AWS managed services for your Kubernetes applications without needing to define resources outside of the cluster or run services that provide supporting capabilities like databases or message queues within the cluster. This is a fully open source project built with \u2764\ufe0f by AWS. The project is structured as a set of source code repositories containing a common runtime , a code generator , some common testing infrastructure and a series of individual service controllers that correspond to AWS services (e.g. the RDS service controller for ACK ). Individual ACK service controllers are installable as separate binaries either manually via raw manifests or via a Helm chart that corresponds to the individual service controller. !!! note IMPORTANT Individual ACK service controllers may be in different maintenance phases and follow separate release cadences. Please read our documentation about project stages and maintenance phases fully, including how we release and version our controllers. Controllers in a PREVIEW maintenance phase have at least one container image and Helm chart released to an ECR Public repository. However, be aware that controllers in a PREVIEW maintenance phase may have significant and breaking changes introduced in a future release.","title":"AWS Controllers for Kubernetes"},{"location":"#background","text":"Kubernetes applications often require a number of supporting resources like databases, message queues, and object stores to operate. AWS provides a set of managed services that you can use to provide these resources for your applications, but provisioning and integrating them with Kubernetes was complex and time consuming. ACK lets you define and consume many AWS services and resources directly within a Kubernetes cluster. ACK gives you a unified, operationally seamless way to manage your application and its dependencies.","title":"Background"},{"location":"#connecting-kubernetes-and-aws-apis","text":"ACK is a collection of Kubernetes Custom Resource Definitions (CRDs) and controllers which work together to extend the Kubernetes API and create AWS resources on your cluster\u2019s behalf. ACK comprises a set of Kubernetes custom controllers . Each controller manages custom resources representing API resources of a single AWS service API. For example, the ACK service controller for AWS Simple Storage Service (S3) manages custom resources that represent AWS S3 buckets. Instead of logging into the AWS console or using the aws CLI tool to interact with the AWS service API, Kubernetes users can install a controller for an AWS service and then create, update, read and delete AWS resources using the Kubernetes API. This means they can use the Kubernetes API and configuration language to fully describe both their containerized applications, using Kubernetes resources like Deployment and Service , as well as any AWS service resources upon which those applications depend. Read more about how ACK works .","title":"Connecting Kubernetes and AWS APIs"},{"location":"#getting-started","text":"Please see the list of ACK service controllers currently in one of our project stages . You can install any of the controllers in the RELEASED project stage using Helm (recommended) or manually using the raw Kubernetes manifests contained in the individual ACK service controller's source repository. Once installed, Kubernetes users may apply a custom resource (CR) corresponding to one of the resources exposed by the ACK service controller for the service. To view the list of custom resources and each CR's schema, visit our reference documentation .","title":"Getting started"},{"location":"#getting-help","text":"For help, please consider the following venues (in order): Search open issues File an issue Chat with us on the #provider-aws channel in the Kubernetes Slack community.","title":"Getting help"},{"location":"how-it-works/","text":"How it works \u00b6 The idea behind AWS Controllers for Kubernetes (ACK) is to enable Kubernetes users to describe the desired state of AWS resources using the Kubernetes API and configuration language. In order to make this happen, let's take a look under the covers and walk through how different components in the system interact. In the diagram above, Alice is our Kubernetes user. Her application depends on the existence of an Amazon S3 Bucket named my-bucket . Instead of creating the S3 Bucket via the AWS web console, Alice wants to only use the Kubernetes API. After all, Alice uses the Kubernetes API to describe all her application resources -- a Deployment , a Service , an Ingress , etc. She'd like to use the Kubernetes API to describe all the resources her application requires, including this S3 Bucket. So, Alice issues a call to kubectl apply , passing in a file that describes a Kubernetes custom resource describing her S3 Bucket. kubectl apply passes this file, called a Manifest , to the Kubernetes API server running in the Kubernetes controller node. (1) The Kubernetes API server receives the Manifest describing the S3 Bucket and determines if Alice has permissions to create a custom resource (CR) of Kind s3.services.k8s.aws/Bucket , and that the custom resource is properly formatted (2) . If Alice is authorized and the CR is valid, the Kubernetes API server writes (3) the CR to its etcd data store and then responds back (4) to Alice that the CR has been created. At this point, the ACK service controller for S3, which is running on a Kubernetes worker node within the context of a normal Kubernetes Pod , is notified (5) that a new CR of Kind s3.services.k8s.aws/Bucket has been created. The ACK service controller for S3 then communicates (6) with the AWS S3 API, calling the S3 CreateBucket API call to create the bucket in AWS. After communicating with the S3 API, the ACK service controller then calls the Kubernetes API server to update (7) the CR's Status with information it received from S3.","title":"How it works"},{"location":"how-it-works/#how-it-works","text":"The idea behind AWS Controllers for Kubernetes (ACK) is to enable Kubernetes users to describe the desired state of AWS resources using the Kubernetes API and configuration language. In order to make this happen, let's take a look under the covers and walk through how different components in the system interact. In the diagram above, Alice is our Kubernetes user. Her application depends on the existence of an Amazon S3 Bucket named my-bucket . Instead of creating the S3 Bucket via the AWS web console, Alice wants to only use the Kubernetes API. After all, Alice uses the Kubernetes API to describe all her application resources -- a Deployment , a Service , an Ingress , etc. She'd like to use the Kubernetes API to describe all the resources her application requires, including this S3 Bucket. So, Alice issues a call to kubectl apply , passing in a file that describes a Kubernetes custom resource describing her S3 Bucket. kubectl apply passes this file, called a Manifest , to the Kubernetes API server running in the Kubernetes controller node. (1) The Kubernetes API server receives the Manifest describing the S3 Bucket and determines if Alice has permissions to create a custom resource (CR) of Kind s3.services.k8s.aws/Bucket , and that the custom resource is properly formatted (2) . If Alice is authorized and the CR is valid, the Kubernetes API server writes (3) the CR to its etcd data store and then responds back (4) to Alice that the CR has been created. At this point, the ACK service controller for S3, which is running on a Kubernetes worker node within the context of a normal Kubernetes Pod , is notified (5) that a new CR of Kind s3.services.k8s.aws/Bucket has been created. The ACK service controller for S3 then communicates (6) with the AWS S3 API, calling the S3 CreateBucket API call to create the bucket in AWS. After communicating with the S3 API, the ACK service controller then calls the Kubernetes API server to update (7) the CR's Status with information it received from S3.","title":"How it works"},{"location":"releases/","text":"Releases, Versioning and Maintenance Phases \u00b6 Service controllers are built in separate source code repositories. Below, you will find a description of the Project Stages that a service controller repository goes through on its way to being released. A controller that has reached the RELEASED project stage will have a set of release artifacts, including binary Docker images for the controller and a Helm Chart that installs the controller into a target Kubernetes cluster. Read more below about our Releases and Versioning policy . Finally, we have a set of documented Maintenance Phases that clearly outline our support stance for service controllers that have been released. Project Stages \u00b6 The controller's \"project stage\" describes how far along the controller is towards being released: PROPOSED -> PLANNED -> IN PROGRESS -> RELEASED PROPOSED \u00b6 The PROPOSED stage indicates that there is expressed interest in supporting an AWS service in ACK. At this stage, there will be a Github Issue and/or a Github Project for tracking the creation of the ACK service controller for the service. The GitHub Issue WILL NOT be associated with a GitHub Milestone. PLANNED \u00b6 The PLANNED stage indicates that we plan to make a controller for this service available in ACK. At this stage, there WILL BE a GitHub Milestone that tracks progress towards the release of the controller. IN PROGRESS \u00b6 The IN PROGRESS stage indicates that the ACK service controller for the AWS service is actively being built in preparation for a release of that ACK service controller. In the IN PROGRESS stage we identify those AWS service API resources that will be supported by the controller and generate the code that manages the lifecycle of these resources. !!! note \"what do we mean by 'AWS service API resources'? An AWS service API resource is a top-level object that can be created by a particular AWS service API. For example, an SNS Topic or an S3 Bucket. Some service APIs have multiple top-level resources; SNS, for instance, has Topic, PlatformApplication and PlatformEndpoint top-level resources that may be created. RELEASED \u00b6 The RELEASED project stage indicates that the ACK service controller source repository has had a Semantic Versioning Git tag applied and that both a Docker image and Helm Chart have been built and published to the ECR Public repositories for ACK. Once a service controller reaches the RELEASED project stage, that does not mean that there can never be any changes or additions to the Custom Resource Definitions (CRDs) or public interfaces exposed by that service controller. The RELEASED project stage is simply an indication that there is at least one SemVer-tagged binary release of the controller. Consumers should look to the SemVer release tag as an indication of whether code included in that release introduces new breaking (major version increment) or non-breaking features (minor version increment) or simply bug fixes (patch version increment). Consumers should see release notes for a release tag for a full description of changes included in that release. Releases and Versioning \u00b6 Important ACK does not have a single release status or version. Different components within the ACK project have different release cadences, versions and statuses. Please read the information below before installing any ACK component. Service controllers in ACK use Semantic Versioning to indicate whether changes included in a particular binary release introduce features or bug fixes and whether or not features break backwards compatibility for public APIs and interfaces. There are two release artifacts produced when an ACK service controller is released: a binary Docker image with the controller and a Helm Chart that installs the controller into a target Kubernetes cluster. Both these artifacts will have tags that correspond to the Semantic Version Git tag applied against the source code repository for the controller. Service controllers may have a Stable Helm Chart that will install a version of the service controller binary that the maintainer team is confident will hold up to production use. Semantic Versioning \u00b6 ACK is a collection of custom Kubernetes controllers, one for each supported AWS API. Each ACK controller is composed of an ACK common runtime and Go code that links the Kubernetes API and the AWS API. Much of this Go code is generated by the ack-generate tool; some of the Go code is hand-crafted. All code components in ACK use Semantic Versioning (SemVer) as a signal to consumers whether public interfaces or APIs have breaking changes. When an ACK component is released , a Git tag containing a SemVer (X.Y.Z) is created on the component's source repository. If the commits to the source repository in between the last Git tag and the commit being tagged have introduced changes that break public-facing APIs or interfaces, the SemVer will have its major version (\"X\") incremented. If the commits introduce functionality that does not break interfaces or APIs, the minor version (\"Y\") will be incremented. If the commits simply fix bugs and do not introduce any features or interface changes, the patch version (\"Z\") will be incremented. Releases of any ACK component that have a zero major release number (e.g. v0.0.2 ) may have breaking changes to the public API or interfaces exposed by that component. This is by design, and per the Semantic Versioning specification : Major version zero (0.y.z) is for initial development. Anything MAY change at any time. The public API SHOULD NOT be considered stable. For ACK components that have a binary distributable -- i.e. a Docker image -- the creation of a new SemVer Git tag on the source code repository triggers the automatic building and publishing of a Docker image with an image tag including the SemVer version. For example, if a Git tag of v1.2.6 was created on the github.com/aws-controllers-k8s/s3-controller repository, a Docker image with a tag v1.2.6 would be published to the public.ecr.aws/aws-controllers-k8s/s3-controller ECR Public repository. Note Binaries for individual ACK service controllers components are published in separate Amazon ECR Public repositories. For ACK components that have a Helm Chart distributable -- i.e. an ACK service controller -- the creation of a new SemVer Git tag on the source code repository triggers automatic building and publishing of a Helm Chart with an artifact tag including the SemVer version. For example, a Git tag of v1.2.6 on the github.com/aws-controllers-k8s/s3-controller repository means a Helm chart with a tag v1.2.6 would be published to the public.ecr.aws/aws-controllers-k8s/s3-chart ECR Public repository. A Word About Dependencies \u00b6 Each service-specific ACK controller -- e.g. the ElastiCache ACK controller -- depends on a specific version of the ACK common runtime. This dependency is specified in the controller's go.mod file. The ACK code generator that produces Go code for service controllers depends on a specific version of the ACK common runtime. dependency between the code generator and common runtime The ACK code generator depends on the ACK common runtime in a unique way: the Go code that the ACK code generator produces adheres to a specific version of the ACK common runtime. Even though no Go code in the ACK code generator actually imports the ACK common runtime, this dependency exists because the Go code produced by the templates inside the code generator imports the ACK common runtime. In order to make this Go code dependency more strict, we have a test package inside the ACK code generator that imports the ACK common runtime. In this way, we're able to include a version-specific dependency line in the ACK code generator's go.mod file, thereby allowing Go's module infrastructure to pin the dependency between the code generator and the common runtime. Stable Helm Charts \u00b6 Tip We recommend using Helm to install an ACK service controller. Some ACK service controllers will have Helm Charts with a v$MAJOR_VERSION-stable tag, referred from here out as just a \" stable artifact tag\". There will only be one of these tags for the ACK service controller in a major version series . For example, the full stable artifact tag for the ElastiCache ACK service controller's \"v1\" major version series would be public.ecr.aws/aws-controllers-k8s/elasticache-chart:v1-stable . This stable artifact tag points to a Helm chart that has configuration values that have been tested with a specific SemVer Docker image. Typically these tests are \"soak\" tests and allow the team maintaining that ACK controller's source code to have a high degree of confidence in the controller's long-running operation. Note Please note that not all ACK service controllers will have a Helm chart with a stable artifact tag. Furthermore, there will only ever be a single stable Helm Chart tag per major version series of a controller . This stable Helm Chart tag (an OCI Artifact tag) will point to different Helm Chart packages over time. From time to time, the maintainer team for a service controller may update the configuration values and associated SemVer Docker image tag for the controller binary to point to a newer image. For example, consider the ElastiCache ACK service controller maintainer team has executed a series of long-running tests of the public.ecr.aws/aws-controllers-k8s/elasticache-controller image tagged with the v1.2.6 SemVer tag. The maintainer team is confident that the controller is stable for production use. In the stable Git branch of the ElastiCache service controller's source repository, the team would update the Helm Chart's Deployment, setting the Deployment.spec.template.spec.containers[0].image to public.ecr.aws/aws-controllers-k8s/elasticache-controller:v1.2.6 . They then package the Helm Chart and publish it as an OCI Artifact to the public.ecr.aws/aws-controllers-k8s/elasticache-chart registry, using an OCI artifact tag of v1-stable . A couple months later, the maintainer team has added a few minor, non-breaking features to their controller along with a number of bug fixes. The latest SemVer tag for the ElastiCache controller image is at v1.3.9 . The maintainer team has separately been executing long-running tests against the v1.3.2 controller image and are confident that this release is appropriate for production use. The maintainer team would update the Helm Chart in their stable Git branch to have its Deployment.spec.template.spec.containers[0].image set to public.ecr.aws/aws-controllers-k8s/elasticache-controller:v1.3.2 . They would then package this Helm Chart and push overwrite the public.ecr.aws/aws-controllers-k8s/elasticache-chart:v1-stable OCI Artifact tag to point to this newly-updated Helm Chart that refers to the v1.3.2 controller image. Maintenance Phases \u00b6 As noted above, individual ACK service controllers all use Semantic Versioning (\"X.Y.Z\") in order to signal breaking interface changes. However, each controller follows its own release cadence and each controller has a separate team of contributors that maintain the code, test the controller and determine whether the controller is stable in long-running operation. ACK service controllers having release tags within a major Semantic Version (\"X\") will be in one of four Maintenance Phases: PREVIEW GENERAL AVAILABILITY (GA) DEPRECATED NOT SUPPORTED Preview \u00b6 ACK controllers in the Preview Maintenance Phase are released for testing by users and are not recommended for production use. For Preview controllers, we ask users to submit bug reports using Github Issues and we will do our best to remediate problems in a timely manner. General Availability \u00b6 ACK controllers in the General Availability (GA) Maintenance Phase have been through long-running \"soak\" tests and are recommended for production use by the team maintaining that controller. All ACK controllers in the General Availability Maintenance Phase will have a Helm Chart with the stable artifact tag. Users who submit bug reports using Github Issues that reference a General Availability controller will have their bug reports prioritized by the contributor team maintaining that controller. Deprecated \u00b6 ACK controllers in the General Availability Maintenance Phase may move to a Deprecated Maintenance Phase after a Deprecation Warning notice has been sent out (and the controller's documentation has been updated with said deprecation notice). Controllers in Deprecated Maintenance Phase continue to receive the same level of support as controllers in the General Availability phase. Not Supported \u00b6 ACK controllers may eventually be moved into a Not Supported Maintenance Phase. A controller major version series may move from the Preview Maintenance Phase to the Not Supported Maintenance Phase at any time. This may happen if the team maintaining the controller determines it is not possible to get the controller with that major version series into a General Availability phase. A controller major version series may move from the Deprecated Maintenance Phase to the Not Supported Maintenance Phase only after a 1-year deprecation period has elapsed .","title":"Releases, Versioning and Maintenance Phases"},{"location":"releases/#releases-versioning-and-maintenance-phases","text":"Service controllers are built in separate source code repositories. Below, you will find a description of the Project Stages that a service controller repository goes through on its way to being released. A controller that has reached the RELEASED project stage will have a set of release artifacts, including binary Docker images for the controller and a Helm Chart that installs the controller into a target Kubernetes cluster. Read more below about our Releases and Versioning policy . Finally, we have a set of documented Maintenance Phases that clearly outline our support stance for service controllers that have been released.","title":"Releases, Versioning and Maintenance Phases"},{"location":"releases/#project-stages","text":"The controller's \"project stage\" describes how far along the controller is towards being released: PROPOSED -> PLANNED -> IN PROGRESS -> RELEASED","title":"Project Stages"},{"location":"releases/#proposed","text":"The PROPOSED stage indicates that there is expressed interest in supporting an AWS service in ACK. At this stage, there will be a Github Issue and/or a Github Project for tracking the creation of the ACK service controller for the service. The GitHub Issue WILL NOT be associated with a GitHub Milestone.","title":"PROPOSED"},{"location":"releases/#planned","text":"The PLANNED stage indicates that we plan to make a controller for this service available in ACK. At this stage, there WILL BE a GitHub Milestone that tracks progress towards the release of the controller.","title":"PLANNED"},{"location":"releases/#in-progress","text":"The IN PROGRESS stage indicates that the ACK service controller for the AWS service is actively being built in preparation for a release of that ACK service controller. In the IN PROGRESS stage we identify those AWS service API resources that will be supported by the controller and generate the code that manages the lifecycle of these resources. !!! note \"what do we mean by 'AWS service API resources'? An AWS service API resource is a top-level object that can be created by a particular AWS service API. For example, an SNS Topic or an S3 Bucket. Some service APIs have multiple top-level resources; SNS, for instance, has Topic, PlatformApplication and PlatformEndpoint top-level resources that may be created.","title":"IN PROGRESS"},{"location":"releases/#released","text":"The RELEASED project stage indicates that the ACK service controller source repository has had a Semantic Versioning Git tag applied and that both a Docker image and Helm Chart have been built and published to the ECR Public repositories for ACK. Once a service controller reaches the RELEASED project stage, that does not mean that there can never be any changes or additions to the Custom Resource Definitions (CRDs) or public interfaces exposed by that service controller. The RELEASED project stage is simply an indication that there is at least one SemVer-tagged binary release of the controller. Consumers should look to the SemVer release tag as an indication of whether code included in that release introduces new breaking (major version increment) or non-breaking features (minor version increment) or simply bug fixes (patch version increment). Consumers should see release notes for a release tag for a full description of changes included in that release.","title":"RELEASED"},{"location":"releases/#releases-and-versioning","text":"Important ACK does not have a single release status or version. Different components within the ACK project have different release cadences, versions and statuses. Please read the information below before installing any ACK component. Service controllers in ACK use Semantic Versioning to indicate whether changes included in a particular binary release introduce features or bug fixes and whether or not features break backwards compatibility for public APIs and interfaces. There are two release artifacts produced when an ACK service controller is released: a binary Docker image with the controller and a Helm Chart that installs the controller into a target Kubernetes cluster. Both these artifacts will have tags that correspond to the Semantic Version Git tag applied against the source code repository for the controller. Service controllers may have a Stable Helm Chart that will install a version of the service controller binary that the maintainer team is confident will hold up to production use.","title":"Releases and Versioning"},{"location":"releases/#semantic-versioning","text":"ACK is a collection of custom Kubernetes controllers, one for each supported AWS API. Each ACK controller is composed of an ACK common runtime and Go code that links the Kubernetes API and the AWS API. Much of this Go code is generated by the ack-generate tool; some of the Go code is hand-crafted. All code components in ACK use Semantic Versioning (SemVer) as a signal to consumers whether public interfaces or APIs have breaking changes. When an ACK component is released , a Git tag containing a SemVer (X.Y.Z) is created on the component's source repository. If the commits to the source repository in between the last Git tag and the commit being tagged have introduced changes that break public-facing APIs or interfaces, the SemVer will have its major version (\"X\") incremented. If the commits introduce functionality that does not break interfaces or APIs, the minor version (\"Y\") will be incremented. If the commits simply fix bugs and do not introduce any features or interface changes, the patch version (\"Z\") will be incremented. Releases of any ACK component that have a zero major release number (e.g. v0.0.2 ) may have breaking changes to the public API or interfaces exposed by that component. This is by design, and per the Semantic Versioning specification : Major version zero (0.y.z) is for initial development. Anything MAY change at any time. The public API SHOULD NOT be considered stable. For ACK components that have a binary distributable -- i.e. a Docker image -- the creation of a new SemVer Git tag on the source code repository triggers the automatic building and publishing of a Docker image with an image tag including the SemVer version. For example, if a Git tag of v1.2.6 was created on the github.com/aws-controllers-k8s/s3-controller repository, a Docker image with a tag v1.2.6 would be published to the public.ecr.aws/aws-controllers-k8s/s3-controller ECR Public repository. Note Binaries for individual ACK service controllers components are published in separate Amazon ECR Public repositories. For ACK components that have a Helm Chart distributable -- i.e. an ACK service controller -- the creation of a new SemVer Git tag on the source code repository triggers automatic building and publishing of a Helm Chart with an artifact tag including the SemVer version. For example, a Git tag of v1.2.6 on the github.com/aws-controllers-k8s/s3-controller repository means a Helm chart with a tag v1.2.6 would be published to the public.ecr.aws/aws-controllers-k8s/s3-chart ECR Public repository.","title":"Semantic Versioning"},{"location":"releases/#a-word-about-dependencies","text":"Each service-specific ACK controller -- e.g. the ElastiCache ACK controller -- depends on a specific version of the ACK common runtime. This dependency is specified in the controller's go.mod file. The ACK code generator that produces Go code for service controllers depends on a specific version of the ACK common runtime. dependency between the code generator and common runtime The ACK code generator depends on the ACK common runtime in a unique way: the Go code that the ACK code generator produces adheres to a specific version of the ACK common runtime. Even though no Go code in the ACK code generator actually imports the ACK common runtime, this dependency exists because the Go code produced by the templates inside the code generator imports the ACK common runtime. In order to make this Go code dependency more strict, we have a test package inside the ACK code generator that imports the ACK common runtime. In this way, we're able to include a version-specific dependency line in the ACK code generator's go.mod file, thereby allowing Go's module infrastructure to pin the dependency between the code generator and the common runtime.","title":"A Word About Dependencies"},{"location":"releases/#stable-helm-charts","text":"Tip We recommend using Helm to install an ACK service controller. Some ACK service controllers will have Helm Charts with a v$MAJOR_VERSION-stable tag, referred from here out as just a \" stable artifact tag\". There will only be one of these tags for the ACK service controller in a major version series . For example, the full stable artifact tag for the ElastiCache ACK service controller's \"v1\" major version series would be public.ecr.aws/aws-controllers-k8s/elasticache-chart:v1-stable . This stable artifact tag points to a Helm chart that has configuration values that have been tested with a specific SemVer Docker image. Typically these tests are \"soak\" tests and allow the team maintaining that ACK controller's source code to have a high degree of confidence in the controller's long-running operation. Note Please note that not all ACK service controllers will have a Helm chart with a stable artifact tag. Furthermore, there will only ever be a single stable Helm Chart tag per major version series of a controller . This stable Helm Chart tag (an OCI Artifact tag) will point to different Helm Chart packages over time. From time to time, the maintainer team for a service controller may update the configuration values and associated SemVer Docker image tag for the controller binary to point to a newer image. For example, consider the ElastiCache ACK service controller maintainer team has executed a series of long-running tests of the public.ecr.aws/aws-controllers-k8s/elasticache-controller image tagged with the v1.2.6 SemVer tag. The maintainer team is confident that the controller is stable for production use. In the stable Git branch of the ElastiCache service controller's source repository, the team would update the Helm Chart's Deployment, setting the Deployment.spec.template.spec.containers[0].image to public.ecr.aws/aws-controllers-k8s/elasticache-controller:v1.2.6 . They then package the Helm Chart and publish it as an OCI Artifact to the public.ecr.aws/aws-controllers-k8s/elasticache-chart registry, using an OCI artifact tag of v1-stable . A couple months later, the maintainer team has added a few minor, non-breaking features to their controller along with a number of bug fixes. The latest SemVer tag for the ElastiCache controller image is at v1.3.9 . The maintainer team has separately been executing long-running tests against the v1.3.2 controller image and are confident that this release is appropriate for production use. The maintainer team would update the Helm Chart in their stable Git branch to have its Deployment.spec.template.spec.containers[0].image set to public.ecr.aws/aws-controllers-k8s/elasticache-controller:v1.3.2 . They would then package this Helm Chart and push overwrite the public.ecr.aws/aws-controllers-k8s/elasticache-chart:v1-stable OCI Artifact tag to point to this newly-updated Helm Chart that refers to the v1.3.2 controller image.","title":"Stable Helm Charts"},{"location":"releases/#maintenance-phases","text":"As noted above, individual ACK service controllers all use Semantic Versioning (\"X.Y.Z\") in order to signal breaking interface changes. However, each controller follows its own release cadence and each controller has a separate team of contributors that maintain the code, test the controller and determine whether the controller is stable in long-running operation. ACK service controllers having release tags within a major Semantic Version (\"X\") will be in one of four Maintenance Phases: PREVIEW GENERAL AVAILABILITY (GA) DEPRECATED NOT SUPPORTED","title":"Maintenance Phases"},{"location":"releases/#preview","text":"ACK controllers in the Preview Maintenance Phase are released for testing by users and are not recommended for production use. For Preview controllers, we ask users to submit bug reports using Github Issues and we will do our best to remediate problems in a timely manner.","title":"Preview"},{"location":"releases/#general-availability","text":"ACK controllers in the General Availability (GA) Maintenance Phase have been through long-running \"soak\" tests and are recommended for production use by the team maintaining that controller. All ACK controllers in the General Availability Maintenance Phase will have a Helm Chart with the stable artifact tag. Users who submit bug reports using Github Issues that reference a General Availability controller will have their bug reports prioritized by the contributor team maintaining that controller.","title":"General Availability"},{"location":"releases/#deprecated","text":"ACK controllers in the General Availability Maintenance Phase may move to a Deprecated Maintenance Phase after a Deprecation Warning notice has been sent out (and the controller's documentation has been updated with said deprecation notice). Controllers in Deprecated Maintenance Phase continue to receive the same level of support as controllers in the General Availability phase.","title":"Deprecated"},{"location":"releases/#not-supported","text":"ACK controllers may eventually be moved into a Not Supported Maintenance Phase. A controller major version series may move from the Preview Maintenance Phase to the Not Supported Maintenance Phase at any time. This may happen if the team maintaining the controller determines it is not possible to get the controller with that major version series into a General Availability phase. A controller major version series may move from the Deprecated Maintenance Phase to the Not Supported Maintenance Phase only after a 1-year deprecation period has elapsed .","title":"Not Supported"},{"location":"services/","text":"Services \u00b6 The following AWS service APIs have service controllers included in ACK or have controllers in one of our several project stages . ACK controllers that have reached the RELEASED project stage will also be in one of our maintenance phases . For details, including a list of planned AWS service APIs, see the Service Controller Release Roadmap : IMPORTANT There is no single release of the ACK project. The ACK project contains a series of service controllers, one for each AWS service API. Each individual ACK service controller is released separately. Please see the release documentation for information on how we version and release ACK service controllers. AWS Service Project Stage Maintenance Phase Next Milestone Amazon ACM PROPOSED Amazon API Gateway V2 RELEASED PREVIEW Amazon Application Auto Scaling RELEASED PREVIEW Amazon CloudFront Distribution PLANNED Amazon DynamoDB RELEASED PREVIEW Amazon ECR RELEASED PREVIEW Amazon EFS PROPOSED Amazon EKS IN PROGRESS Amazon ElastiCache RELEASED PREVIEW https://github.com/aws-controllers-k8s/community/milestone/9 Amazon Elasticsearch Service PROPOSED Amazon EC2 VPC IN PROGRESS AWS IAM PROPOSED AWS Lambda IN PROGRESS AWS Kinesis PROPOSED Amazon KMS IN PROGRESS Amazon MQ RELEASED Amazon MSK PLANNED Amazon RDS RELEASED PREVIEW Amazon Route53 PROPOSED Amazon SageMaker RELEASED PREVIEW https://github.com/aws-controllers-k8s/community/milestone/11 Amazon SNS RELEASED PREVIEW Amazon SQS IN PROGRESS AWS Step Functions RELEASED PREVIEW Amazon S3 RELEASED PREVIEW Don't see a service listed? If you don't see a particular AWS service listed, feel free to propose it ! Amazon ACM \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/482 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/acm/ Amazon API Gateway v2 \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/207 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/api-gateway/ ACK service controller: https://github.com/aws-controllers-k8s/apigatewayv2-controller Amazon Application Auto Scaling \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/589 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html ACK service controller: https://github.com/aws-controllers-k8s/applicationautoscaling-controller Amazon CloudFront Distribution \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/249 Current project stage: PLANNED AWS service documentation: https://aws.amazon.com/cloudfront/ Amazon DynamoDB \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/206 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/dynamodb/ ACK service controller: https://github.com/aws-controllers-k8s/dynamodb-controller Amazon ECR \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/208 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/ecr/ ACK service controller: https://github.com/aws-controllers-k8s/ecr-controller Amazon EFS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/328 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/efs/ Amazon EKS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/16 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/eks/ Amazon ElastiCache \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/240 Current project stage: RELEASED Current maintenance phase: PREVIEW Next milestone: https://github.com/aws-controllers-k8s/community/milestone/9 AWS service documentation: https://aws.amazon.com/elasticache/ ACK service controller: https://github.com/aws-controllers-k8s/elasticache-controller Amazon Elasticsearch Service \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/503 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/elasticsearch-service/ ACK service controller: https://github.com/aws-controllers-k8s/elasticsearchservice-controller Amazon EC2 VPC \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/489 Current project stage: IN PROGRESS AWS service documentation: https://docs.aws.amazon.com/vpc/ ACK service controller: https://github.com/aws-controllers-k8s/ec2-controller AWS IAM \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/222 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/iam/ AWS Lambda \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/238 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/lambda/ Amazon Kinesis \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/235 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/kinesis/ AWS KMS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/491 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/kms/ ACK service controller: https://github.com/aws-controllers-k8s/kms-controller Amazon MQ \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/390 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/amazon-mq/ ACK service controller: https://github.com/aws-controllers-k8s/mq-controller Amazon MSK \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/348 Current project stage: PLANNED AWS service documentation: https://aws.amazon.com/msk/ Amazon RDS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/237 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/rds/ Amazon Route53 \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/480 Current project stage: PROPOSED AWS service documentation: https://docs.aws.amazon.com/Route53/ Amazon SageMaker \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/385 Current project stage: RELEASED Current maintenance phase: PREVIEW Next milestone: https://github.com/aws-controllers-k8s/community/milestone/11 AWS service documentation: https://aws.amazon.com/sagemaker/ ACK service controller: https://github.com/aws-controllers-k8s/sagemaker-controller Amazon SNS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/202 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/sns/ ACK service controller: https://github.com/aws-controllers-k8s/sns-controller Amazon SQS \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/205 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/sqs/ ACK service controller: https://github.com/aws-controllers-k8s/sqs-controller AWS Step Functions \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/239 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/step-functions/ ACK service controller: https://github.com/aws-controllers-k8s/sfn-controller Amazon S3 \u00b6 Proposed: https://github.com/aws-controllers-k8s/community/issues/204 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/s3/ ACK service controller: https://github.com/aws-controllers-k8s/s3-controller","title":"Services"},{"location":"services/#services","text":"The following AWS service APIs have service controllers included in ACK or have controllers in one of our several project stages . ACK controllers that have reached the RELEASED project stage will also be in one of our maintenance phases . For details, including a list of planned AWS service APIs, see the Service Controller Release Roadmap : IMPORTANT There is no single release of the ACK project. The ACK project contains a series of service controllers, one for each AWS service API. Each individual ACK service controller is released separately. Please see the release documentation for information on how we version and release ACK service controllers. AWS Service Project Stage Maintenance Phase Next Milestone Amazon ACM PROPOSED Amazon API Gateway V2 RELEASED PREVIEW Amazon Application Auto Scaling RELEASED PREVIEW Amazon CloudFront Distribution PLANNED Amazon DynamoDB RELEASED PREVIEW Amazon ECR RELEASED PREVIEW Amazon EFS PROPOSED Amazon EKS IN PROGRESS Amazon ElastiCache RELEASED PREVIEW https://github.com/aws-controllers-k8s/community/milestone/9 Amazon Elasticsearch Service PROPOSED Amazon EC2 VPC IN PROGRESS AWS IAM PROPOSED AWS Lambda IN PROGRESS AWS Kinesis PROPOSED Amazon KMS IN PROGRESS Amazon MQ RELEASED Amazon MSK PLANNED Amazon RDS RELEASED PREVIEW Amazon Route53 PROPOSED Amazon SageMaker RELEASED PREVIEW https://github.com/aws-controllers-k8s/community/milestone/11 Amazon SNS RELEASED PREVIEW Amazon SQS IN PROGRESS AWS Step Functions RELEASED PREVIEW Amazon S3 RELEASED PREVIEW Don't see a service listed? If you don't see a particular AWS service listed, feel free to propose it !","title":"Services"},{"location":"services/#amazon-acm","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/482 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/acm/","title":"Amazon ACM"},{"location":"services/#amazon-api-gateway-v2","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/207 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/api-gateway/ ACK service controller: https://github.com/aws-controllers-k8s/apigatewayv2-controller","title":"Amazon API Gateway v2"},{"location":"services/#amazon-application-auto-scaling","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/589 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html ACK service controller: https://github.com/aws-controllers-k8s/applicationautoscaling-controller","title":"Amazon Application Auto Scaling"},{"location":"services/#amazon-cloudfront-distribution","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/249 Current project stage: PLANNED AWS service documentation: https://aws.amazon.com/cloudfront/","title":"Amazon CloudFront Distribution"},{"location":"services/#amazon-dynamodb","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/206 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/dynamodb/ ACK service controller: https://github.com/aws-controllers-k8s/dynamodb-controller","title":"Amazon DynamoDB"},{"location":"services/#amazon-ecr","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/208 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/ecr/ ACK service controller: https://github.com/aws-controllers-k8s/ecr-controller","title":"Amazon ECR"},{"location":"services/#amazon-efs","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/328 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/efs/","title":"Amazon EFS"},{"location":"services/#amazon-eks","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/16 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/eks/","title":"Amazon EKS"},{"location":"services/#amazon-elasticache","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/240 Current project stage: RELEASED Current maintenance phase: PREVIEW Next milestone: https://github.com/aws-controllers-k8s/community/milestone/9 AWS service documentation: https://aws.amazon.com/elasticache/ ACK service controller: https://github.com/aws-controllers-k8s/elasticache-controller","title":"Amazon ElastiCache"},{"location":"services/#amazon-elasticsearch-service","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/503 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/elasticsearch-service/ ACK service controller: https://github.com/aws-controllers-k8s/elasticsearchservice-controller","title":"Amazon Elasticsearch Service"},{"location":"services/#amazon-ec2-vpc","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/489 Current project stage: IN PROGRESS AWS service documentation: https://docs.aws.amazon.com/vpc/ ACK service controller: https://github.com/aws-controllers-k8s/ec2-controller","title":"Amazon EC2 VPC"},{"location":"services/#aws-iam","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/222 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/iam/","title":"AWS IAM"},{"location":"services/#aws-lambda","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/238 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/lambda/","title":"AWS Lambda"},{"location":"services/#amazon-kinesis","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/235 Current project stage: PROPOSED AWS service documentation: https://aws.amazon.com/kinesis/","title":"Amazon Kinesis"},{"location":"services/#aws-kms","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/491 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/kms/ ACK service controller: https://github.com/aws-controllers-k8s/kms-controller","title":"AWS KMS"},{"location":"services/#amazon-mq","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/390 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/amazon-mq/ ACK service controller: https://github.com/aws-controllers-k8s/mq-controller","title":"Amazon MQ"},{"location":"services/#amazon-msk","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/348 Current project stage: PLANNED AWS service documentation: https://aws.amazon.com/msk/","title":"Amazon MSK"},{"location":"services/#amazon-rds","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/237 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/rds/","title":"Amazon RDS"},{"location":"services/#amazon-route53","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/480 Current project stage: PROPOSED AWS service documentation: https://docs.aws.amazon.com/Route53/","title":"Amazon Route53"},{"location":"services/#amazon-sagemaker","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/385 Current project stage: RELEASED Current maintenance phase: PREVIEW Next milestone: https://github.com/aws-controllers-k8s/community/milestone/11 AWS service documentation: https://aws.amazon.com/sagemaker/ ACK service controller: https://github.com/aws-controllers-k8s/sagemaker-controller","title":"Amazon SageMaker"},{"location":"services/#amazon-sns","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/202 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/sns/ ACK service controller: https://github.com/aws-controllers-k8s/sns-controller","title":"Amazon SNS"},{"location":"services/#amazon-sqs","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/205 Current project stage: IN PROGRESS AWS service documentation: https://aws.amazon.com/sqs/ ACK service controller: https://github.com/aws-controllers-k8s/sqs-controller","title":"Amazon SQS"},{"location":"services/#aws-step-functions","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/239 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/step-functions/ ACK service controller: https://github.com/aws-controllers-k8s/sfn-controller","title":"AWS Step Functions"},{"location":"services/#amazon-s3","text":"Proposed: https://github.com/aws-controllers-k8s/community/issues/204 Current project stage: RELEASED Current maintenance phase: PREVIEW AWS service documentation: https://aws.amazon.com/s3/ ACK service controller: https://github.com/aws-controllers-k8s/s3-controller","title":"Amazon S3"},{"location":"community/background/","text":"Background \u00b6 In 10/2018 Chris Hein introduced the AWS Service Operator (ASO) project. We reviewed the feedback from the community and stakeholders and in 08/2019 decided to relaunch ASO as a first-tier open source project with concrete commitments from the container service team. In this process, we renamed the project to AWS Controllers for Kubernetes (ACK). The tenets for the relaunch were: ACK is a community-driven project, based on a governance model defining roles and responsibilities. ACK is optimized for production usage with full test coverage including performance and scalability test suites. ACK strives to be the only codebase exposing AWS services via a Kubernetes operator. Since then, we worked on design issues and gathering feedback around which services to prioritize. Existing custom controllers \u00b6 AWS service teams use custom controllers, webhooks, and operators for different use cases and based on different approaches. Examples include: SageMaker operator , allowing to use SageMaker from Kubernetes App Mesh controller , managing App Mesh resources from Kubernetes EKS Pod Identity Webhook , providing IAM roles for service accounts functionality While the autonomy in the different teams and project allows for rapid iterations and innovations, there are some drawbacks associated with it: The UX differs and that can lead to frustration when adopting an offering. A consistent quality bar across the different offerings is hard to establish and to verify. It's wasteful to re-invent the plumbing and necessary infrastructure (testing, etc.). Above is the motivation for our 3rd tenet: we want to make sure that there is a common framework, implementing good practices as put forward, for example, in the Operator Developer Guide or in the Programming Kubernetes book. Related projects \u00b6 Outside of AWS, there are projects that share similar goals we have with the ASO, for example: Crossplane aws-s3-provisioner","title":"Background"},{"location":"community/background/#background","text":"In 10/2018 Chris Hein introduced the AWS Service Operator (ASO) project. We reviewed the feedback from the community and stakeholders and in 08/2019 decided to relaunch ASO as a first-tier open source project with concrete commitments from the container service team. In this process, we renamed the project to AWS Controllers for Kubernetes (ACK). The tenets for the relaunch were: ACK is a community-driven project, based on a governance model defining roles and responsibilities. ACK is optimized for production usage with full test coverage including performance and scalability test suites. ACK strives to be the only codebase exposing AWS services via a Kubernetes operator. Since then, we worked on design issues and gathering feedback around which services to prioritize.","title":"Background"},{"location":"community/background/#existing-custom-controllers","text":"AWS service teams use custom controllers, webhooks, and operators for different use cases and based on different approaches. Examples include: SageMaker operator , allowing to use SageMaker from Kubernetes App Mesh controller , managing App Mesh resources from Kubernetes EKS Pod Identity Webhook , providing IAM roles for service accounts functionality While the autonomy in the different teams and project allows for rapid iterations and innovations, there are some drawbacks associated with it: The UX differs and that can lead to frustration when adopting an offering. A consistent quality bar across the different offerings is hard to establish and to verify. It's wasteful to re-invent the plumbing and necessary infrastructure (testing, etc.). Above is the motivation for our 3rd tenet: we want to make sure that there is a common framework, implementing good practices as put forward, for example, in the Operator Developer Guide or in the Programming Kubernetes book.","title":"Existing custom controllers"},{"location":"community/background/#related-projects","text":"Outside of AWS, there are projects that share similar goals we have with the ASO, for example: Crossplane aws-s3-provisioner","title":"Related projects"},{"location":"community/discussions/","text":"Discussions \u00b6 For discussions, please use the #provider-aws channel on the Kubernetes Slack community .","title":"Discussions"},{"location":"community/discussions/#discussions","text":"For discussions, please use the #provider-aws channel on the Kubernetes Slack community .","title":"Discussions"},{"location":"community/faq/","text":"Frequently Asked Questions (FAQ) \u00b6 Service Broker \u00b6 Question Does ACK replace the service broker ? Answer For the time being, people using the service broker should continue to use it and we're coordinating with the maintainers to provide a unified solution. The service broker project is also an AWS activity that, with the general shift of focus in the community from service broker to operators, can be considered less actively developed. There are a certain things around application lifecycle management that the service broker currently covers and which are at this juncture not yet covered by the scope of ACK, however we expect in the mid to long run that these two projects converge. We had AWS-internal discussions with the team that maintains the service broker and we're on the same page concerning a unified solution. We appreciate input and advice concerning features that are currently covered by the service broker only, for example bind/unbind or cataloging and looking forward to learn from the community how they are using service broker so that we can take this into account. Cluster API \u00b6 Question Does the planned ACK service controller for EKS replace Kubernetes Cluster API ? Answer No, the ACK service controller for EKS does not replace Kubernetes Cluster API. Cluster API does a lot of really cool things and is designed to be a generic way to create Kubernetes clusters that run anywhere. It makes some different design decisions with that goal in mind. Some differences include: Cluster API is treated as your source of truth for all infrastructure. This means things like the cluster autoscaler need to be configured to use cluster api instead of AWS cloud provider. Generic Kubernetes clusters rely on running more services in the cluster and not services from AWS. Things like metrics and logging will likely need to run inside Kubernetes instead of using services like CloudWatch. IAM permission for Cluster-API Provider AWS (CAPA) need to be more broad than the ACK service controller for EKS because CAPA is responsible for provisioning everything needed for the cluster (VPC, gateway, etc). You don't need to run all of the ACK controllers if all you want is a way to provision an EKS cluster. You can pick and choose which ACK controllers you want to deploy. With the EKS ACK controller you will get all of the configuration flexibility of the EKS API including things like managed node groups and fargate. This is because the ACK service controller for EKS is built directly from the EKS API spec and not abstracted to be a general Kubernetes cluster. cdk8s \u00b6 Question How does ACK relate to cdk8s ? Answer cdk8s is an open-source software development framework for defining Kubernetes applications and reusable abstractions using familiar programming languages and rich object-oriented APIs. You can use cdk8s to create any resource inside a Kubernetes cluster. This includes Custom Resources (CRs). All of the ACK controllers watch for specific CRs and you can generate those resources using cdk8s or any Kubernetes tooling. The two projects complement each other. cdk8s can create the Kubernetes resources and ACK uses those resources to create the AWS infrastructure. Contributing \u00b6 Question Where and how can I help? Answer Excellent question and we're super excited that you're interested in ACK. For now, if you're a developer, you can check out the contributor docs .","title":"FAQ"},{"location":"community/faq/#frequently-asked-questions-faq","text":"","title":"Frequently Asked Questions (FAQ)"},{"location":"community/faq/#service-broker","text":"Question Does ACK replace the service broker ? Answer For the time being, people using the service broker should continue to use it and we're coordinating with the maintainers to provide a unified solution. The service broker project is also an AWS activity that, with the general shift of focus in the community from service broker to operators, can be considered less actively developed. There are a certain things around application lifecycle management that the service broker currently covers and which are at this juncture not yet covered by the scope of ACK, however we expect in the mid to long run that these two projects converge. We had AWS-internal discussions with the team that maintains the service broker and we're on the same page concerning a unified solution. We appreciate input and advice concerning features that are currently covered by the service broker only, for example bind/unbind or cataloging and looking forward to learn from the community how they are using service broker so that we can take this into account.","title":"Service Broker"},{"location":"community/faq/#cluster-api","text":"Question Does the planned ACK service controller for EKS replace Kubernetes Cluster API ? Answer No, the ACK service controller for EKS does not replace Kubernetes Cluster API. Cluster API does a lot of really cool things and is designed to be a generic way to create Kubernetes clusters that run anywhere. It makes some different design decisions with that goal in mind. Some differences include: Cluster API is treated as your source of truth for all infrastructure. This means things like the cluster autoscaler need to be configured to use cluster api instead of AWS cloud provider. Generic Kubernetes clusters rely on running more services in the cluster and not services from AWS. Things like metrics and logging will likely need to run inside Kubernetes instead of using services like CloudWatch. IAM permission for Cluster-API Provider AWS (CAPA) need to be more broad than the ACK service controller for EKS because CAPA is responsible for provisioning everything needed for the cluster (VPC, gateway, etc). You don't need to run all of the ACK controllers if all you want is a way to provision an EKS cluster. You can pick and choose which ACK controllers you want to deploy. With the EKS ACK controller you will get all of the configuration flexibility of the EKS API including things like managed node groups and fargate. This is because the ACK service controller for EKS is built directly from the EKS API spec and not abstracted to be a general Kubernetes cluster.","title":"Cluster API"},{"location":"community/faq/#cdk8s","text":"Question How does ACK relate to cdk8s ? Answer cdk8s is an open-source software development framework for defining Kubernetes applications and reusable abstractions using familiar programming languages and rich object-oriented APIs. You can use cdk8s to create any resource inside a Kubernetes cluster. This includes Custom Resources (CRs). All of the ACK controllers watch for specific CRs and you can generate those resources using cdk8s or any Kubernetes tooling. The two projects complement each other. cdk8s can create the Kubernetes resources and ACK uses those resources to create the AWS infrastructure.","title":"cdk8s"},{"location":"community/faq/#contributing","text":"Question Where and how can I help? Answer Excellent question and we're super excited that you're interested in ACK. For now, if you're a developer, you can check out the contributor docs .","title":"Contributing"},{"location":"dev-docs/api-inference/","text":"API Inference \u00b6 This document discusses how ACK introspects an AWS API model file and determines which CustomResourceDefinition s (CRDs) to construct and what the structure of those CRDs look like. The Kubernetes Resource Model \u00b6 The Kubernetes Resource Model (KRM) is a set of standards and naming conventions that govern how an Object may be created and updated. An Object includes some metadata about the object -- a GroupVersionKind (GVK), a Name , a Namespace , and zero or more Labels and Annotations . In addition to this metadata, each Object has a Spec field which is a struct that contains the desired state of the Object . Objects are typically denoted using YAML, like so: apiVersion : s3.services.k8s.aws/v1alpha1 kind : Bucket metadata : name : my-amazing-bucket annotations : pronounced-as : boo-kay spec : name : my-amazing-bucket Manifests The YAML files containing an object definition like above are typically called manifests . Above, the Object has a GVK of \"s3.services.k8s.aws/v1alpha1:Bucket\" with an internal-to-Kubernetes Name of \"my-amazing-bucket\" and a single Annotation key/value pair \"pronounced-as: boo-kay\". The Spec field is a structure containing desired state fields about this Bucket. You can see here that there is a Spec.Name field representing the Bucket name that will be passed to the S3 CreateBucket API as the name of the Bucket. Note that the Metadata.Name field value is the same as the Spec.Name field value here, but there's nothing mandatory about this. When a Kubernetes user creates an Object , typically by passing some YAML to the kubectl create or kubectl apply CLI command, the Kubernetes API server reads the manifest and determines whether the supplied contents are valid. In order to determine if a manifest is valid, the Kubernetes API server must look up the definition of the specified GroupVersionKind . For all of the resources that ACK is concerned about, what this means is that the Kubernetes API server will search for the CustomResourceDefinition (CRD) matching the GroupVersionKind . This CRD describes the fields that comprise Object s of that particular GroupVersionKind -- called CustomResources (CRs). In the next sections we discuss: how ACK determines what will become a CRD how ACK determines the fields that go into each CRD's Spec and Status Which things become ACK Resources? \u00b6 As mentioned in the code generation documentation , ACK reads AWS API model files when generating its API types and controller implementations. These model files are JSON files contain some important information about the structure of the AWS service API, including a set of Operation definitions (commonly called \"Actions\" in the official AWS API documentation) and a set of Shape definitions. Some AWS APIs have dozens (hundreds even!) of Operations exposed by the API. Consider EC2's API. It has over 400 separate Actions . Out of all those Operations, how are we to tell which ones refer to something that we can model as a Kubernetes CustomResource ? Well, we could look at the EC2 API's list of Operations and manually decide which ones seem \"resource-y\". Operations like \"AdvertiseByoipCidr\" and \"AcceptTransitGatewayVpcAttachment\" don't seem very \"resource-y\". Operations like \"CreateKeyPair\" and \"DeleteKeyPair\", however, do seem like they would match a resource called \"KeyPair\". And this is actually how ACK decides what is a CustomResource and what isn't. It uses a simple heuristic: look through the list of Operations in the API model file and filter out the ones that start with the string \"Create\". If what comes after the word \"Create\" describes a singular noun, then we create a CustomResource of that Kind . It really is that simple. How is an ACK Resource Defined? \u00b6 Let's take a look at the CRD for ACK's S3 Bucket (the s3.services.k8s.aws/Bucket GroupKind (GK)) (snipped slightly for brevity): --- apiVersion : apiextensions.k8s.io/v1 kind : CustomResourceDefinition metadata : name : buckets.s3.services.k8s.aws spec : group : s3.services.k8s.aws names : kind : Bucket scope : Namespaced versions : - name : v1alpha1 schema : openAPIV3Schema : description : Bucket is the Schema for the Buckets API properties : apiVersion : type : string kind : type : string metadata : type : object spec : description : BucketSpec defines the desired state of Bucket properties : acl : type : string createBucketConfiguration : properties : locationConstraint : type : string type : object grantFullControl : type : string grantRead : type : string grantReadACP : type : string grantWrite : type : string grantWriteACP : type : string name : type : string objectLockEnabledForBucket : type : boolean required : - name type : object status : description : BucketStatus defines the observed state of Bucket properties : ackResourceMetadata : properties : arn : type : string ownerAccountID : type : string required : - ownerAccountID type : object conditions : items : properties : lastTransitionTime : format : date-time type : string message : type : string reason : type : string status : type : string type : type : string required : - status - type type : object type : array location : type : string required : - ackResourceMetadata - conditions type : object type : object The above YAML representation of a CustomResourceDefinition (CRD) is actually generated from a set of Go type definitions. These Go type definitions live in each ACK service's services/$SERVICE/apis/$VERSION directory. This section of our documentation discusses how we create those Go type definitions. controller-gen crd The OpenAPIv3 Validating Schema shown above is created by the controller-gen crd CLI command and is a convenient human-readable representation of the CustomResourceDefinition . The Bucket CR's Spec field is defined above as containing a set of fields -- \"acl\", \"createBucketConfiguration\", \"name\", etc. Each field has a JSONSchema type that corresponds with the Go type from the associated field member. You will also notice that in addition to the definition of a Spec field, there is also the definition of a Status field for the Bucket CRs. Above, this Status contains fields that represent the \"observed\" state of the Bucket CRs. The above shows three fields in the Bucket's Status : ackResourceMetadata , conditions and location . You might be wondering how the ACK code generator determined which fields go into the Bucket's Spec and which fields go into the Bucket's Status ? Well, it's definitely not a manual process. Everything in ACK is code-generated and discovered by inspecting the AWS API model files. what are AWS API model files? The AWS API model files are JSON files that contain information about a particular AWS service API's Actions and Shapes. We consume the model files distributed in the aws-sdk-go project. (Look for the api-2.json files in the linked service-specific directories...) Let's take a look at a tiny bit of the AWS S3 API model file and you can start to see how we identify the things that go into the Spec and Status fields. { \"metadata\" :{ \"serviceId\" : \"S3\" , }, \"operations\" :{ \"CreateBucket\" :{ \"name\" : \"CreateBucket\" , \"http\" :{ \"method\" : \"PUT\" , \"requestUri\" : \"/{Bucket}\" }, \"input\" :{ \"shape\" : \"CreateBucketRequest\" }, \"output\" :{ \"shape\" : \"CreateBucketOutput\" }, }, }, \"shapes\" :{ \"BucketCannedACL\" :{ \"type\" : \"string\" , \"enum\" :[ \"private\" , \"public-read\" , \"public-read-write\" , \"authenticated-read\" ] }, \"BucketName\" :{ \"type\" : \"string\" }, \"CreateBucketConfiguration\" :{ \"type\" : \"structure\" , \"members\" :{ \"LocationConstraint\" :{ \"shape\" : \"BucketLocationConstraint\" } } }, \"CreateBucketOutput\" :{ \"type\" : \"structure\" , \"members\" :{ \"Location\" :{ \"shape\" : \"Location\" , } } }, \"CreateBucketRequest\" :{ \"type\" : \"structure\" , \"required\" :[ \"Bucket\" ], \"members\" :{ \"ACL\" :{ \"shape\" : \"BucketCannedACL\" , }, \"Bucket\" :{ \"shape\" : \"BucketName\" , }, \"CreateBucketConfiguration\" :{ \"shape\" : \"CreateBucketConfiguration\" , }, \"GrantFullControl\" :{ \"shape\" : \"GrantFullControl\" , }, \"GrantRead\" :{ \"shape\" : \"GrantRead\" , }, \"GrantReadACP\" :{ \"shape\" : \"GrantReadACP\" , }, \"GrantWrite\" :{ \"shape\" : \"GrantWrite\" , }, \"GrantWriteACP\" :{ \"shape\" : \"GrantWriteACP\" , }, \"ObjectLockEnabledForBucket\" :{ \"shape\" : \"ObjectLockEnabledForBucket\" , } }, }, } } As mentioned above, we determine what things in an API are CustomResourceDefinition s by looking for Operation s that begin with the string \"Create\" and where the remainder of the Operation name refers to a singular noun. For the S3 API, there happens to be only a single Operation that begins with the string \"Create\", and it happens to be \" CreateBucket \". And since \"Bucket\" refers to a singular noun, that is the CustomResourceDefinition that is identified by the ACK code generator. The ACK code generator writes a file apis/v1alpha1/bucket.go that contains a BucketSpec struct definition, a BucketStatus struct definition and a Bucket struct definition that ties the Spec and Status together into our CRD. In determining the structure of the s3.services.k8s.aws/Bucket CRD, the ACK code generator inspects the Shape s referred to by the \"input\" and \"output\" members of the \"CreateBucket\" Operation : \"CreateBucketRequest\" and \"CreateBucketOutput\" respectively. Determining the Spec fields \u00b6 For the BucketSpec fields, we grab members of the Input shape. The generated Go type definition for the BucketSpec ends up looking like this: // BucketSpec defines the desired state of Bucket type BucketSpec struct { ACL * string `json:\"acl,omitempty\"` CreateBucketConfiguration * CreateBucketConfiguration `json:\"createBucketConfiguration,omitempty\"` GrantFullControl * string `json:\"grantFullControl,omitempty\"` GrantRead * string `json:\"grantRead,omitempty\"` GrantReadACP * string `json:\"grantReadACP,omitempty\"` GrantWrite * string `json:\"grantWrite,omitempty\"` GrantWriteACP * string `json:\"grantWriteACP,omitempty\"` // +kubebuilder:validation:Required Name * string `json:\"name\"` ObjectLockEnabledForBucket * bool `json:\"objectLockEnabledForBucket,omitempty\"` } Let's take a closer look at the BucketSpec fields. The ACL , GrantFullControl , GrantRead , GrantReadACP , GrantWrite and GrantWriteACP fields are simple *string types. However, if we look at the CreateBucketRequest Shape definition in the API model file, we see that these fields actually are differently-named Shapes, not *string . Why is this? Well, the ACK code generator \"flattens\" some Shapes when it notices that a named Shape is just an alias for a simple scalar type (like *string ). !!! \"why *string ?\" The astute reader may be wondering why the Go type for string fields is *string and not string . The reason for this lies in aws-sdk-go . All types for all Shape members are pointer types, even when the underlying data type is a simple scalar type like bool or int . Yes, even when the field is required... Note that even though the ACL field has a Shape of BucketCannedACL , that Shape is actually just a string with a set of enumerated values. Enumerated values are collected and written out by the ACK code generator into an apis/v1alpha1/enums.go file, with content like this: type BucketCannedACL string const ( BucketCannedACL_private BucketCannedACL = \"private\" BucketCannedACL_public_read BucketCannedACL = \"public-read\" BucketCannedACL_public_read_write BucketCannedACL = \"public-read-write\" BucketCannedACL_authenticated_read BucketCannedACL = \"authenticated-read\" ) The CreateBucketConfiguration field is of type *CreateBucketConfiguration . All this means is that the field refers to a nested struct. All struct type definitions for CRD Spec or Status field members are placed by the ACK code generator into a apis/v1alpha1/types.go file. Here is a snippet of that file that contains the type definition for the CreateBucketConfiguration struct: type CreateBucketConfiguration struct { LocationConstraint * string `json:\"locationConstraint,omitempty\"` } Now, the Name field in the BucketSpec struct seems out of place, no? There is no \"Name\" member of the CreateBucketRequest Shape, so why is there a Name field in BucketSpec ? Well, this is an example of ACK's code generator using some special instructions contained in something called the generator.yaml (or \"generator config\") for the S3 service controller. Each service in the services/ directory can have a generator.yaml file that contains overrides and special instructions for how to interpret and transform parts of the service's API. Here is part of the S3 service's generator.yaml file: resources : Bucket : renames : operations : CreateBucket : input_fields : Bucket : Name As you can see, the generator config for the ACK S3 service controller is renaming the CreateBucket Operation's Input Shape Bucket field to Name . We do this for some APIs to add a little consistency and a more Kubernetes-native experience for the CRDs. In Kubernetes, there is a Metadata.Name (internal Kubernetes name) and there is typically a Spec.Name field which refers to the external Name of the resource. So, in order to align the s3.services.k8s.aws/Bucket 's definition to be more Kubernetes-like, we rename the Bucket field to Name . We do this renaming for other things that produce a bit of a \" stutter \", as well as where the name of a field does not conform to Go exported name constraints or naming best practices . Determining the Status fields \u00b6 Remember that fields in a CR's Status struct are not mutable by normal Kubernetes users. Instead, these fields represent the latest observed state of a resource (instead of the desired state of that resource which is represented by fields in the CR's Spec struct). The ACK code generator takes the members of the Create Operation 's Output shape and puts those fields into the CR's Status struct. We assume that fields in the Output that have the same name as fields in the Input shape for the Create Operation refer to the resource field that was set in the Spec field and therefore are only interested in fields in the Output that are not in the Input . Looking at the BucketSpec struct definition that was generated after processing the S3 API model file, we find this : // BucketStatus defines the observed state of Bucket type BucketStatus struct { // All CRs managed by ACK have a common `Status.ACKResourceMetadata` member // that is used to contain resource sync state, account ownership, // constructed ARN for the resource ACKResourceMetadata * ackv1alpha1 . ResourceMetadata `json:\"ackResourceMetadata\"` // All CRS managed by ACK have a common `Status.Conditions` member that // contains a collection of `ackv1alpha1.Condition` objects that describe // the various terminal states of the CR and its backend AWS service API // resource Conditions [] * ackv1alpha1 . Condition `json:\"conditions\"` Location * string `json:\"location,omitempty\"` } Let's discuss each of the fields shown above. First, the ACKResourceMetadata field is included in every ACK CRD's Status field . It is a pointer to a ackv1alpha1.ResourceMetadata struct. This struct contains some standard and important pieces of information about the resource, including the AWS Resource Name (ARN) and the Owner AWS Account ID. The ARN is a globally-unique identifier for the resource in AWS. The Owner AWS Account ID is the 12-digit AWS account ID that is billed for the resource. cross-account resource management The Owner AWS Account ID for a resource may be different from the AWS Account ID of the IAM Role that the ACK service controller is executing under. The Conditions field is also included in every ACK CRD's Status field. It is a slice of pointers to ackv1alpha1.Condition structs. The Condition struct is responsible for conveying information about the latest observed sync state of a resource, including any terminal condition states that cause the resource to be \"unsyncable\". Next is the Location field. This field gets its definition from the S3 CreateBucketOutput.Location field: \"CreateBucketOutput\" :{ \"type\" : \"structure\" , \"members\" :{ \"Location\" :{ \"shape\" : \"Location\" , } } },","title":"API Inference"},{"location":"dev-docs/api-inference/#api-inference","text":"This document discusses how ACK introspects an AWS API model file and determines which CustomResourceDefinition s (CRDs) to construct and what the structure of those CRDs look like.","title":"API Inference"},{"location":"dev-docs/api-inference/#the-kubernetes-resource-model","text":"The Kubernetes Resource Model (KRM) is a set of standards and naming conventions that govern how an Object may be created and updated. An Object includes some metadata about the object -- a GroupVersionKind (GVK), a Name , a Namespace , and zero or more Labels and Annotations . In addition to this metadata, each Object has a Spec field which is a struct that contains the desired state of the Object . Objects are typically denoted using YAML, like so: apiVersion : s3.services.k8s.aws/v1alpha1 kind : Bucket metadata : name : my-amazing-bucket annotations : pronounced-as : boo-kay spec : name : my-amazing-bucket Manifests The YAML files containing an object definition like above are typically called manifests . Above, the Object has a GVK of \"s3.services.k8s.aws/v1alpha1:Bucket\" with an internal-to-Kubernetes Name of \"my-amazing-bucket\" and a single Annotation key/value pair \"pronounced-as: boo-kay\". The Spec field is a structure containing desired state fields about this Bucket. You can see here that there is a Spec.Name field representing the Bucket name that will be passed to the S3 CreateBucket API as the name of the Bucket. Note that the Metadata.Name field value is the same as the Spec.Name field value here, but there's nothing mandatory about this. When a Kubernetes user creates an Object , typically by passing some YAML to the kubectl create or kubectl apply CLI command, the Kubernetes API server reads the manifest and determines whether the supplied contents are valid. In order to determine if a manifest is valid, the Kubernetes API server must look up the definition of the specified GroupVersionKind . For all of the resources that ACK is concerned about, what this means is that the Kubernetes API server will search for the CustomResourceDefinition (CRD) matching the GroupVersionKind . This CRD describes the fields that comprise Object s of that particular GroupVersionKind -- called CustomResources (CRs). In the next sections we discuss: how ACK determines what will become a CRD how ACK determines the fields that go into each CRD's Spec and Status","title":"The Kubernetes Resource Model"},{"location":"dev-docs/api-inference/#which-things-become-ack-resources","text":"As mentioned in the code generation documentation , ACK reads AWS API model files when generating its API types and controller implementations. These model files are JSON files contain some important information about the structure of the AWS service API, including a set of Operation definitions (commonly called \"Actions\" in the official AWS API documentation) and a set of Shape definitions. Some AWS APIs have dozens (hundreds even!) of Operations exposed by the API. Consider EC2's API. It has over 400 separate Actions . Out of all those Operations, how are we to tell which ones refer to something that we can model as a Kubernetes CustomResource ? Well, we could look at the EC2 API's list of Operations and manually decide which ones seem \"resource-y\". Operations like \"AdvertiseByoipCidr\" and \"AcceptTransitGatewayVpcAttachment\" don't seem very \"resource-y\". Operations like \"CreateKeyPair\" and \"DeleteKeyPair\", however, do seem like they would match a resource called \"KeyPair\". And this is actually how ACK decides what is a CustomResource and what isn't. It uses a simple heuristic: look through the list of Operations in the API model file and filter out the ones that start with the string \"Create\". If what comes after the word \"Create\" describes a singular noun, then we create a CustomResource of that Kind . It really is that simple.","title":"Which things become ACK Resources?"},{"location":"dev-docs/api-inference/#how-is-an-ack-resource-defined","text":"Let's take a look at the CRD for ACK's S3 Bucket (the s3.services.k8s.aws/Bucket GroupKind (GK)) (snipped slightly for brevity): --- apiVersion : apiextensions.k8s.io/v1 kind : CustomResourceDefinition metadata : name : buckets.s3.services.k8s.aws spec : group : s3.services.k8s.aws names : kind : Bucket scope : Namespaced versions : - name : v1alpha1 schema : openAPIV3Schema : description : Bucket is the Schema for the Buckets API properties : apiVersion : type : string kind : type : string metadata : type : object spec : description : BucketSpec defines the desired state of Bucket properties : acl : type : string createBucketConfiguration : properties : locationConstraint : type : string type : object grantFullControl : type : string grantRead : type : string grantReadACP : type : string grantWrite : type : string grantWriteACP : type : string name : type : string objectLockEnabledForBucket : type : boolean required : - name type : object status : description : BucketStatus defines the observed state of Bucket properties : ackResourceMetadata : properties : arn : type : string ownerAccountID : type : string required : - ownerAccountID type : object conditions : items : properties : lastTransitionTime : format : date-time type : string message : type : string reason : type : string status : type : string type : type : string required : - status - type type : object type : array location : type : string required : - ackResourceMetadata - conditions type : object type : object The above YAML representation of a CustomResourceDefinition (CRD) is actually generated from a set of Go type definitions. These Go type definitions live in each ACK service's services/$SERVICE/apis/$VERSION directory. This section of our documentation discusses how we create those Go type definitions. controller-gen crd The OpenAPIv3 Validating Schema shown above is created by the controller-gen crd CLI command and is a convenient human-readable representation of the CustomResourceDefinition . The Bucket CR's Spec field is defined above as containing a set of fields -- \"acl\", \"createBucketConfiguration\", \"name\", etc. Each field has a JSONSchema type that corresponds with the Go type from the associated field member. You will also notice that in addition to the definition of a Spec field, there is also the definition of a Status field for the Bucket CRs. Above, this Status contains fields that represent the \"observed\" state of the Bucket CRs. The above shows three fields in the Bucket's Status : ackResourceMetadata , conditions and location . You might be wondering how the ACK code generator determined which fields go into the Bucket's Spec and which fields go into the Bucket's Status ? Well, it's definitely not a manual process. Everything in ACK is code-generated and discovered by inspecting the AWS API model files. what are AWS API model files? The AWS API model files are JSON files that contain information about a particular AWS service API's Actions and Shapes. We consume the model files distributed in the aws-sdk-go project. (Look for the api-2.json files in the linked service-specific directories...) Let's take a look at a tiny bit of the AWS S3 API model file and you can start to see how we identify the things that go into the Spec and Status fields. { \"metadata\" :{ \"serviceId\" : \"S3\" , }, \"operations\" :{ \"CreateBucket\" :{ \"name\" : \"CreateBucket\" , \"http\" :{ \"method\" : \"PUT\" , \"requestUri\" : \"/{Bucket}\" }, \"input\" :{ \"shape\" : \"CreateBucketRequest\" }, \"output\" :{ \"shape\" : \"CreateBucketOutput\" }, }, }, \"shapes\" :{ \"BucketCannedACL\" :{ \"type\" : \"string\" , \"enum\" :[ \"private\" , \"public-read\" , \"public-read-write\" , \"authenticated-read\" ] }, \"BucketName\" :{ \"type\" : \"string\" }, \"CreateBucketConfiguration\" :{ \"type\" : \"structure\" , \"members\" :{ \"LocationConstraint\" :{ \"shape\" : \"BucketLocationConstraint\" } } }, \"CreateBucketOutput\" :{ \"type\" : \"structure\" , \"members\" :{ \"Location\" :{ \"shape\" : \"Location\" , } } }, \"CreateBucketRequest\" :{ \"type\" : \"structure\" , \"required\" :[ \"Bucket\" ], \"members\" :{ \"ACL\" :{ \"shape\" : \"BucketCannedACL\" , }, \"Bucket\" :{ \"shape\" : \"BucketName\" , }, \"CreateBucketConfiguration\" :{ \"shape\" : \"CreateBucketConfiguration\" , }, \"GrantFullControl\" :{ \"shape\" : \"GrantFullControl\" , }, \"GrantRead\" :{ \"shape\" : \"GrantRead\" , }, \"GrantReadACP\" :{ \"shape\" : \"GrantReadACP\" , }, \"GrantWrite\" :{ \"shape\" : \"GrantWrite\" , }, \"GrantWriteACP\" :{ \"shape\" : \"GrantWriteACP\" , }, \"ObjectLockEnabledForBucket\" :{ \"shape\" : \"ObjectLockEnabledForBucket\" , } }, }, } } As mentioned above, we determine what things in an API are CustomResourceDefinition s by looking for Operation s that begin with the string \"Create\" and where the remainder of the Operation name refers to a singular noun. For the S3 API, there happens to be only a single Operation that begins with the string \"Create\", and it happens to be \" CreateBucket \". And since \"Bucket\" refers to a singular noun, that is the CustomResourceDefinition that is identified by the ACK code generator. The ACK code generator writes a file apis/v1alpha1/bucket.go that contains a BucketSpec struct definition, a BucketStatus struct definition and a Bucket struct definition that ties the Spec and Status together into our CRD. In determining the structure of the s3.services.k8s.aws/Bucket CRD, the ACK code generator inspects the Shape s referred to by the \"input\" and \"output\" members of the \"CreateBucket\" Operation : \"CreateBucketRequest\" and \"CreateBucketOutput\" respectively.","title":"How is an ACK Resource Defined?"},{"location":"dev-docs/api-inference/#determining-the-spec-fields","text":"For the BucketSpec fields, we grab members of the Input shape. The generated Go type definition for the BucketSpec ends up looking like this: // BucketSpec defines the desired state of Bucket type BucketSpec struct { ACL * string `json:\"acl,omitempty\"` CreateBucketConfiguration * CreateBucketConfiguration `json:\"createBucketConfiguration,omitempty\"` GrantFullControl * string `json:\"grantFullControl,omitempty\"` GrantRead * string `json:\"grantRead,omitempty\"` GrantReadACP * string `json:\"grantReadACP,omitempty\"` GrantWrite * string `json:\"grantWrite,omitempty\"` GrantWriteACP * string `json:\"grantWriteACP,omitempty\"` // +kubebuilder:validation:Required Name * string `json:\"name\"` ObjectLockEnabledForBucket * bool `json:\"objectLockEnabledForBucket,omitempty\"` } Let's take a closer look at the BucketSpec fields. The ACL , GrantFullControl , GrantRead , GrantReadACP , GrantWrite and GrantWriteACP fields are simple *string types. However, if we look at the CreateBucketRequest Shape definition in the API model file, we see that these fields actually are differently-named Shapes, not *string . Why is this? Well, the ACK code generator \"flattens\" some Shapes when it notices that a named Shape is just an alias for a simple scalar type (like *string ). !!! \"why *string ?\" The astute reader may be wondering why the Go type for string fields is *string and not string . The reason for this lies in aws-sdk-go . All types for all Shape members are pointer types, even when the underlying data type is a simple scalar type like bool or int . Yes, even when the field is required... Note that even though the ACL field has a Shape of BucketCannedACL , that Shape is actually just a string with a set of enumerated values. Enumerated values are collected and written out by the ACK code generator into an apis/v1alpha1/enums.go file, with content like this: type BucketCannedACL string const ( BucketCannedACL_private BucketCannedACL = \"private\" BucketCannedACL_public_read BucketCannedACL = \"public-read\" BucketCannedACL_public_read_write BucketCannedACL = \"public-read-write\" BucketCannedACL_authenticated_read BucketCannedACL = \"authenticated-read\" ) The CreateBucketConfiguration field is of type *CreateBucketConfiguration . All this means is that the field refers to a nested struct. All struct type definitions for CRD Spec or Status field members are placed by the ACK code generator into a apis/v1alpha1/types.go file. Here is a snippet of that file that contains the type definition for the CreateBucketConfiguration struct: type CreateBucketConfiguration struct { LocationConstraint * string `json:\"locationConstraint,omitempty\"` } Now, the Name field in the BucketSpec struct seems out of place, no? There is no \"Name\" member of the CreateBucketRequest Shape, so why is there a Name field in BucketSpec ? Well, this is an example of ACK's code generator using some special instructions contained in something called the generator.yaml (or \"generator config\") for the S3 service controller. Each service in the services/ directory can have a generator.yaml file that contains overrides and special instructions for how to interpret and transform parts of the service's API. Here is part of the S3 service's generator.yaml file: resources : Bucket : renames : operations : CreateBucket : input_fields : Bucket : Name As you can see, the generator config for the ACK S3 service controller is renaming the CreateBucket Operation's Input Shape Bucket field to Name . We do this for some APIs to add a little consistency and a more Kubernetes-native experience for the CRDs. In Kubernetes, there is a Metadata.Name (internal Kubernetes name) and there is typically a Spec.Name field which refers to the external Name of the resource. So, in order to align the s3.services.k8s.aws/Bucket 's definition to be more Kubernetes-like, we rename the Bucket field to Name . We do this renaming for other things that produce a bit of a \" stutter \", as well as where the name of a field does not conform to Go exported name constraints or naming best practices .","title":"Determining the Spec fields"},{"location":"dev-docs/api-inference/#determining-the-status-fields","text":"Remember that fields in a CR's Status struct are not mutable by normal Kubernetes users. Instead, these fields represent the latest observed state of a resource (instead of the desired state of that resource which is represented by fields in the CR's Spec struct). The ACK code generator takes the members of the Create Operation 's Output shape and puts those fields into the CR's Status struct. We assume that fields in the Output that have the same name as fields in the Input shape for the Create Operation refer to the resource field that was set in the Spec field and therefore are only interested in fields in the Output that are not in the Input . Looking at the BucketSpec struct definition that was generated after processing the S3 API model file, we find this : // BucketStatus defines the observed state of Bucket type BucketStatus struct { // All CRs managed by ACK have a common `Status.ACKResourceMetadata` member // that is used to contain resource sync state, account ownership, // constructed ARN for the resource ACKResourceMetadata * ackv1alpha1 . ResourceMetadata `json:\"ackResourceMetadata\"` // All CRS managed by ACK have a common `Status.Conditions` member that // contains a collection of `ackv1alpha1.Condition` objects that describe // the various terminal states of the CR and its backend AWS service API // resource Conditions [] * ackv1alpha1 . Condition `json:\"conditions\"` Location * string `json:\"location,omitempty\"` } Let's discuss each of the fields shown above. First, the ACKResourceMetadata field is included in every ACK CRD's Status field . It is a pointer to a ackv1alpha1.ResourceMetadata struct. This struct contains some standard and important pieces of information about the resource, including the AWS Resource Name (ARN) and the Owner AWS Account ID. The ARN is a globally-unique identifier for the resource in AWS. The Owner AWS Account ID is the 12-digit AWS account ID that is billed for the resource. cross-account resource management The Owner AWS Account ID for a resource may be different from the AWS Account ID of the IAM Role that the ACK service controller is executing under. The Conditions field is also included in every ACK CRD's Status field. It is a slice of pointers to ackv1alpha1.Condition structs. The Condition struct is responsible for conveying information about the latest observed sync state of a resource, including any terminal condition states that cause the resource to be \"unsyncable\". Next is the Location field. This field gets its definition from the S3 CreateBucketOutput.Location field: \"CreateBucketOutput\" :{ \"type\" : \"structure\" , \"members\" :{ \"Location\" :{ \"shape\" : \"Location\" , } } },","title":"Determining the Status fields"},{"location":"dev-docs/building-controller/","text":"Building an ACK service controller \u00b6 This document continues our contributor-focused discussion by explaining how to build or regenerate an ACK service controller. Prerequisites \u00b6 You should have forked the github.com/aws-controllers-k8s/code-generator repository and git clone 'd it locally when setting up your development environment, With the prerequisites out of the way, let's move on to the first step: building the code generator. Build code generator \u00b6 Building an ACK service controller (or regenerating an existing one from a newer API model file) requires the ack-generate binary, which is the main code generator CLI tool. To build the latest ack-generate binary, execute the following command from the root directory of the github.com/aws-controllers-k8s/code-generator source repository: make build-ack-generate One-off build You only have to do this once, overall. In other words: unless we change something upstream in terms of the code generation process, this is a one-off operation. Internally, the Makefile executes an go build here. Don't worry if you forget this step, the script in the next step will complain with a message along the line of ERROR: Unable to find an ack-generate binary and will give you another opportunity to rectify the situation. Build an ACK service controller \u00b6 Now that we have the basic code generation step done we will create the respective ACK service controller and its supporting artifacts. So first you have to select a service that you want to build and test. You do that by setting the SERVICE environment variable. Let's say we want to test the S3 service (creating an S3 bucket), so we would execute the following: export SERVICE = s3 Now we are in a position to generate the ACK service controller for the S3 API. make build-controller SERVICE=$SERVICE By default, running make build-controller will output the generated code to ACK service controller for S3's source code repository (the $GOPATH/src/github.com/aws-controllers-k8s/s3-controller directory). You can override this behaviour with the SERVICE_CONTROLLER_SOURCE_PATH environment variable. Handle controller-gen: command not found If you run into the controller-gen: command not found message when executing make build-controller then you want to check if the controller-gen binary is available in $GOPATH/bin , also ensure that $GOPATH/bin is part of your $PATH , see also #234 . You can also install the required version of controller-gen using the scripts/install-controller-gen.sh helper script. In addition to the ACK service controller code, above generates the custom resource definition (CRD) manifests as well as the necessary RBAC settings using the /scripts/build-controller.sh . Next Steps \u00b6 Now that we have the generation part completed, we want to see if the generated artifacts indeed are able to create an S3 bucket for us. Learn about how to run e2e tests for an ACK controller .","title":"Building controller"},{"location":"dev-docs/building-controller/#building-an-ack-service-controller","text":"This document continues our contributor-focused discussion by explaining how to build or regenerate an ACK service controller.","title":"Building an ACK service controller"},{"location":"dev-docs/building-controller/#prerequisites","text":"You should have forked the github.com/aws-controllers-k8s/code-generator repository and git clone 'd it locally when setting up your development environment, With the prerequisites out of the way, let's move on to the first step: building the code generator.","title":"Prerequisites"},{"location":"dev-docs/building-controller/#build-code-generator","text":"Building an ACK service controller (or regenerating an existing one from a newer API model file) requires the ack-generate binary, which is the main code generator CLI tool. To build the latest ack-generate binary, execute the following command from the root directory of the github.com/aws-controllers-k8s/code-generator source repository: make build-ack-generate One-off build You only have to do this once, overall. In other words: unless we change something upstream in terms of the code generation process, this is a one-off operation. Internally, the Makefile executes an go build here. Don't worry if you forget this step, the script in the next step will complain with a message along the line of ERROR: Unable to find an ack-generate binary and will give you another opportunity to rectify the situation.","title":"Build code generator"},{"location":"dev-docs/building-controller/#build-an-ack-service-controller","text":"Now that we have the basic code generation step done we will create the respective ACK service controller and its supporting artifacts. So first you have to select a service that you want to build and test. You do that by setting the SERVICE environment variable. Let's say we want to test the S3 service (creating an S3 bucket), so we would execute the following: export SERVICE = s3 Now we are in a position to generate the ACK service controller for the S3 API. make build-controller SERVICE=$SERVICE By default, running make build-controller will output the generated code to ACK service controller for S3's source code repository (the $GOPATH/src/github.com/aws-controllers-k8s/s3-controller directory). You can override this behaviour with the SERVICE_CONTROLLER_SOURCE_PATH environment variable. Handle controller-gen: command not found If you run into the controller-gen: command not found message when executing make build-controller then you want to check if the controller-gen binary is available in $GOPATH/bin , also ensure that $GOPATH/bin is part of your $PATH , see also #234 . You can also install the required version of controller-gen using the scripts/install-controller-gen.sh helper script. In addition to the ACK service controller code, above generates the custom resource definition (CRD) manifests as well as the necessary RBAC settings using the /scripts/build-controller.sh .","title":"Build an ACK service controller"},{"location":"dev-docs/building-controller/#next-steps","text":"Now that we have the generation part completed, we want to see if the generated artifacts indeed are able to create an S3 bucket for us. Learn about how to run e2e tests for an ACK controller .","title":"Next Steps"},{"location":"dev-docs/code-generation/","text":"Code generation \u00b6 In order to keep the code for all the service controllers consistent, we will use a strategy of generating the custom resource definitions and controller code stubs for new AWS services. Options considered \u00b6 To generate custom resource (definitions) and controller stub code, we investigated a number of options: home-grown custom code generator kudo kubebuilder a hybrid custom code generator + sigs.kubernetes.io/controller-tools (CR) The original AWS Service Operator used a custom-built generator that processed YAML manifests describing the AWS service and used templates to generate CRDs , the controller code itself and the Go types that represent the CRDs in memory. It's worth noting that the CRDs and the controller code that was generated by the original ASO was very tightly coupled to CloudFormation. In fact, the CRDs for individual AWS services like S3 or RDS were thin wrappers around CloudFormation stacks that described the object being operated upon. kudo is a platform for building Kubernetes Operators. It stores state in its own kudo.dev CRDs and allows users to define \"plans\" for a deployed application to deploy itself. We determined that kudo was not a particularly good fit for ASO for a couple reasons. First, we needed a way to generate CRDs in several API groups (s3.aws.com and iam.aws.com for example) and the ACK controller code isn't deploying an \"application\" that needs to have a controlled deployment plan. Instead, ACK is a collection of controllers that facilitates creation and management of various AWS service objects using Kubernetes CRD instances. kubebuilder is the recommended upstream tool for generating CRDs and controller stub code. It is a Go binary that creates the scaffolding for CRDs and controller Go code. It has support for multiple API groups (e.g. s3.amazonaws.com and dynamodb.amazonaws.com ) in a single code repository, so allows for sensible separation of code. Our final option was to build a hybrid custom code generator that used controller-runtime under the hood but allowed us to generate controller stub code for multiple API groups and place generated code in directories that represented Go best practices. This option gives us the flexibility to generate the files and content for multiple API groups but still stay within the recommended guardrails of the upstream Kubernetes community. Our approach \u00b6 We ended up with a hybrid custom+controller-runtime, using multiple phases of code generation: The first code generation phase consumes model information from a canonical source of truth about an AWS service and the objects and interfaces that service exposes and generates files containing code that exposes Go types for those objects. These \"type files\" should be annotated with the marker and comments that will allow the core code generators and controller-gen to do its work. We will use the model files from the aws-sdk-go source repository as our source of truth and use the aws-sdk-go/private/model/api Go package to navigate that model. Note This step is the ack-generate apis command. After generating Kubernetes API type definitions for the top-level resources exposed by the AWS API, we then need to generate the \"DeepCopy\" interface implementations that enable those top-level resources and type definitions to be used by the Kubernetes runtime package (it defines an interface called runtime.Object that requires certain methods that copy the object and its component parts). Note This step runs the controller-gen object command Next, we generate the custom resource definition (CRD) configuration files, one for each top-level resource identified in earlier steps. Note This step runs the controller-gen crd command Next, we generate the actual implementation of the ACK controller for the target service. This step uses a set of templates and code in the pkg/model Go package to construct the service-specific resource management and linkage with the aws-sdk-go client for the service. Along with these controller implementation Go files, this step also outputs a set of Kubernetes configuration files for the Deployment and the ClusterRoleBinding of the Role created in the next step. Note This step runs the ack-generate controller command Finally, we generate the configuration file for a Kubernetes Role that the Kubernetes Pod (running in a Kubernetes Deployment ) running the ACK service controller. This Role needs to have permissions to read and write CRs of the Kind that the service controller manages. Note This step runs the controller-gen rbac command Crossplane Provider Generation \u00b6 We have experimental support for generating API types and controller code for AWS services to be used in Crossplane AWS Provider. To try it out, you can run the following command: go run -tags codegen cmd/ack-generate/main.go crossplane apis ecr --provider-dir <directory for provider> cd <directory for provider> go generate ./...","title":"Code generation"},{"location":"dev-docs/code-generation/#code-generation","text":"In order to keep the code for all the service controllers consistent, we will use a strategy of generating the custom resource definitions and controller code stubs for new AWS services.","title":"Code generation"},{"location":"dev-docs/code-generation/#options-considered","text":"To generate custom resource (definitions) and controller stub code, we investigated a number of options: home-grown custom code generator kudo kubebuilder a hybrid custom code generator + sigs.kubernetes.io/controller-tools (CR) The original AWS Service Operator used a custom-built generator that processed YAML manifests describing the AWS service and used templates to generate CRDs , the controller code itself and the Go types that represent the CRDs in memory. It's worth noting that the CRDs and the controller code that was generated by the original ASO was very tightly coupled to CloudFormation. In fact, the CRDs for individual AWS services like S3 or RDS were thin wrappers around CloudFormation stacks that described the object being operated upon. kudo is a platform for building Kubernetes Operators. It stores state in its own kudo.dev CRDs and allows users to define \"plans\" for a deployed application to deploy itself. We determined that kudo was not a particularly good fit for ASO for a couple reasons. First, we needed a way to generate CRDs in several API groups (s3.aws.com and iam.aws.com for example) and the ACK controller code isn't deploying an \"application\" that needs to have a controlled deployment plan. Instead, ACK is a collection of controllers that facilitates creation and management of various AWS service objects using Kubernetes CRD instances. kubebuilder is the recommended upstream tool for generating CRDs and controller stub code. It is a Go binary that creates the scaffolding for CRDs and controller Go code. It has support for multiple API groups (e.g. s3.amazonaws.com and dynamodb.amazonaws.com ) in a single code repository, so allows for sensible separation of code. Our final option was to build a hybrid custom code generator that used controller-runtime under the hood but allowed us to generate controller stub code for multiple API groups and place generated code in directories that represented Go best practices. This option gives us the flexibility to generate the files and content for multiple API groups but still stay within the recommended guardrails of the upstream Kubernetes community.","title":"Options considered"},{"location":"dev-docs/code-generation/#our-approach","text":"We ended up with a hybrid custom+controller-runtime, using multiple phases of code generation: The first code generation phase consumes model information from a canonical source of truth about an AWS service and the objects and interfaces that service exposes and generates files containing code that exposes Go types for those objects. These \"type files\" should be annotated with the marker and comments that will allow the core code generators and controller-gen to do its work. We will use the model files from the aws-sdk-go source repository as our source of truth and use the aws-sdk-go/private/model/api Go package to navigate that model. Note This step is the ack-generate apis command. After generating Kubernetes API type definitions for the top-level resources exposed by the AWS API, we then need to generate the \"DeepCopy\" interface implementations that enable those top-level resources and type definitions to be used by the Kubernetes runtime package (it defines an interface called runtime.Object that requires certain methods that copy the object and its component parts). Note This step runs the controller-gen object command Next, we generate the custom resource definition (CRD) configuration files, one for each top-level resource identified in earlier steps. Note This step runs the controller-gen crd command Next, we generate the actual implementation of the ACK controller for the target service. This step uses a set of templates and code in the pkg/model Go package to construct the service-specific resource management and linkage with the aws-sdk-go client for the service. Along with these controller implementation Go files, this step also outputs a set of Kubernetes configuration files for the Deployment and the ClusterRoleBinding of the Role created in the next step. Note This step runs the ack-generate controller command Finally, we generate the configuration file for a Kubernetes Role that the Kubernetes Pod (running in a Kubernetes Deployment ) running the ACK service controller. This Role needs to have permissions to read and write CRs of the Kind that the service controller manages. Note This step runs the controller-gen rbac command","title":"Our approach"},{"location":"dev-docs/code-generation/#crossplane-provider-generation","text":"We have experimental support for generating API types and controller code for AWS services to be used in Crossplane AWS Provider. To try it out, you can run the following command: go run -tags codegen cmd/ack-generate/main.go crossplane apis ecr --provider-dir <directory for provider> cd <directory for provider> go generate ./...","title":"Crossplane Provider Generation"},{"location":"dev-docs/overview/","text":"Overview \u00b6 This section of the docs is for ACK contributors. Code Organization \u00b6 ACK is a collection of source repositories containing a common runtime and type system, a code generator and individual service controllers that manage resources in a specific AWS API. github.com/aws-controllers-k8s/community : docs and project management (this repo) github.com/aws-controllers-k8s/runtime : common ACK runtime and types github.com/aws-controllers-k8s/code-generator : the code generator and templates github.com/aws-controllers-k8s/test-infra : common test code and infrastructure github.com/aws-controllers-k8s/$SERVICE-controller : individual ACK controllers for AWS services. github.com/aws-controllers-k8s/community (this repo) \u00b6 The github.com/aws-controllers-k8s/community source code repository (this repo) contains the documentation that gets published to https://aws-controllers-k8s.github.io/community/. github.com/aws-controllers-k8s/runtime \u00b6 The github.com/aws-controllers-k8s/runtime source code repository contains the common ACK controller runtime ( /pkg/runtime , /pkg/types ) and core public Kubernetes API types ( /apis/core ). github.com/aws-controllers-k8s/code-generator \u00b6 The github.com/aws-controllers-k8s/code-generator source code repository contains the ack-generate CLI tool ( /cmd/ack-generate ), the Go packages that are used in API inference and code generation ( /pkg/generate , /pkg/model ) and Bash scripts to build an ACK service controller ( /scripts/build-controller.sh ). github.com/aws-controllers-k8s/test-infra \u00b6 The github.com/aws-controllers-k8s/test-infra source code repository contains the acktest Python package for common ACK e2e test code, the CDK to deploy our Prow CI/CD system and the scripts for running tests locally. github.com/aws-controllers-k8s/$SERVICE-controller \u00b6 Each AWS API that has had a Kubernetes controller built to manage resources in that API has its own source code repository in the github.com/aws-controllers-k8s Github Organization. The source repos will be called $SERVICE-controller . These service controller repositories contain Go code for the main controller binary ( /cmd/controller/ ), the public API types for the controllers ( /apis ), the Go code for the resource managers used by the controller ( /pkg/resource/*/ ), static configuration manifests ( /config ) and Helm charts for the controller installation ( /helm ). API Inference \u00b6 Read about how the code generator infers information about a Kubernetes Custom Resource Definitions (CRDs) from an AWS API model file. Code Generation \u00b6 The code generation section gives you a bit of background on how we go about automating the code generation for controllers and supporting artifacts. Setting up a Development Environemnt \u00b6 In the setup section we walk you through setting up your local Git environment with the repo and how advise you on how we handle contributions. Building an ACK Service Controller \u00b6 After getting your development environment established, you will want to learn how to build an ACK service controller . Testing an ACK Service Controller \u00b6 Last but not least, in the testing section we show you how to test ACK locally.","title":"Overview"},{"location":"dev-docs/overview/#overview","text":"This section of the docs is for ACK contributors.","title":"Overview"},{"location":"dev-docs/overview/#code-organization","text":"ACK is a collection of source repositories containing a common runtime and type system, a code generator and individual service controllers that manage resources in a specific AWS API. github.com/aws-controllers-k8s/community : docs and project management (this repo) github.com/aws-controllers-k8s/runtime : common ACK runtime and types github.com/aws-controllers-k8s/code-generator : the code generator and templates github.com/aws-controllers-k8s/test-infra : common test code and infrastructure github.com/aws-controllers-k8s/$SERVICE-controller : individual ACK controllers for AWS services.","title":"Code Organization"},{"location":"dev-docs/overview/#githubcomaws-controllers-k8scommunity-this-repo","text":"The github.com/aws-controllers-k8s/community source code repository (this repo) contains the documentation that gets published to https://aws-controllers-k8s.github.io/community/.","title":"github.com/aws-controllers-k8s/community (this repo)"},{"location":"dev-docs/overview/#githubcomaws-controllers-k8sruntime","text":"The github.com/aws-controllers-k8s/runtime source code repository contains the common ACK controller runtime ( /pkg/runtime , /pkg/types ) and core public Kubernetes API types ( /apis/core ).","title":"github.com/aws-controllers-k8s/runtime"},{"location":"dev-docs/overview/#githubcomaws-controllers-k8scode-generator","text":"The github.com/aws-controllers-k8s/code-generator source code repository contains the ack-generate CLI tool ( /cmd/ack-generate ), the Go packages that are used in API inference and code generation ( /pkg/generate , /pkg/model ) and Bash scripts to build an ACK service controller ( /scripts/build-controller.sh ).","title":"github.com/aws-controllers-k8s/code-generator"},{"location":"dev-docs/overview/#githubcomaws-controllers-k8stest-infra","text":"The github.com/aws-controllers-k8s/test-infra source code repository contains the acktest Python package for common ACK e2e test code, the CDK to deploy our Prow CI/CD system and the scripts for running tests locally.","title":"github.com/aws-controllers-k8s/test-infra"},{"location":"dev-docs/overview/#githubcomaws-controllers-k8sservice-controller","text":"Each AWS API that has had a Kubernetes controller built to manage resources in that API has its own source code repository in the github.com/aws-controllers-k8s Github Organization. The source repos will be called $SERVICE-controller . These service controller repositories contain Go code for the main controller binary ( /cmd/controller/ ), the public API types for the controllers ( /apis ), the Go code for the resource managers used by the controller ( /pkg/resource/*/ ), static configuration manifests ( /config ) and Helm charts for the controller installation ( /helm ).","title":"github.com/aws-controllers-k8s/$SERVICE-controller"},{"location":"dev-docs/overview/#api-inference","text":"Read about how the code generator infers information about a Kubernetes Custom Resource Definitions (CRDs) from an AWS API model file.","title":"API Inference"},{"location":"dev-docs/overview/#code-generation","text":"The code generation section gives you a bit of background on how we go about automating the code generation for controllers and supporting artifacts.","title":"Code Generation"},{"location":"dev-docs/overview/#setting-up-a-development-environemnt","text":"In the setup section we walk you through setting up your local Git environment with the repo and how advise you on how we handle contributions.","title":"Setting up a Development Environemnt"},{"location":"dev-docs/overview/#building-an-ack-service-controller","text":"After getting your development environment established, you will want to learn how to build an ACK service controller .","title":"Building an ACK Service Controller"},{"location":"dev-docs/overview/#testing-an-ack-service-controller","text":"Last but not least, in the testing section we show you how to test ACK locally.","title":"Testing an ACK Service Controller"},{"location":"dev-docs/release/","text":"Release \u00b6 Here we document the release process for ACK service controllers. Remember that there is no single ACK binary. Rather, when we build a release for ACK, that release is for one or more individual ACK service controllers binaries, each of which are installed separately. This documentation covers the steps involved for officially publishing a ACK service controller's release artifacts. Once ACK service controller changes are tested by the service team and they wish to release latest artifacts, service team only needs to create a new release for service-controller github repository with a semver tag (Ex: v0.0.1). Steps below show how to create a new release with semver tag. Semver For more details on semantic versioning(semver), please read releases.md Once the git repository is tagged with semver, a postsubmit prowjob builds binary docker image for ACK service controller and publish to public ecr repository public.ecr.aws/aws-controllers-k8s/controller . Same prowjob also publishes the Helm charts for the ACK service controller to public ecr repository public.ecr.aws/aws-controllers-k8s/chart . What is a release exactly? \u00b6 A \"release\" is the combination of a Git tag containing a SemVer version tag against this source repository and the collection of artifacts that allow the individual ACK service controllers included in that Git commit to be easily installed via Helm. The Git tag points at a specific Git commit referencing the exact source code that comprises the ACK service controllers in that \"release\". The release artifacts include the following for one or more service controllers: Docker image Helm chart The Docker image is built and pushed with an image tag that indicates the release version for the controller along with the AWS service. For example, assume a release semver tag of v0.1.0 that includes service controllers for S3 and SNS. There would be two Docker images built for this release, one each containing the ACK service controllers for S3 and SNS. The Docker images would have the following image tags: s3-v0.1.0 and sns-v0.1.0 . Note that the full image name would be public.ecr.aws/aws-controllers-k8s/controller:s3-v0.1.0 The Helm chart artifact can be used to install the ACK service controller as a Kubernetes Deployment; the Deployment's Pod image will refer to the exact Docker image tag matching the release tag. Release steps \u00b6 1) First check out a git branch for your release: export RELEASE_VERSION = v0.0.1 git checkout -b release- $RELEASE_VERSION 2) Build the release artifacts for the controllers you wish to include in the release Run make build-controller for each service from code-generator repository. For instance, to build release artifacts for the SNS and S3 controllers I would do: for SERVICE in sns s3 ; do export SERVICE ; echo \"building ACK controller for $SERVICE , Version: $RELEASE_VERSION \" make build-controller ; done 3) You can review the release artifacts that were built for each service by looking in the services/$SERVICE/helm directory: tree services/$SERVICE/helm or by doing: git diff Note When you run make build-controller for a service, it will overwrite any Helm chart files that had previously been generated in the services/$SERVICE/helm directory with files that refer to the Docker image with an image tag referring to the release you've just built artifacts for. 4) Commit your code and create a pull request: git commit -a -m \"release artifacts for release $RELEASE_VERSION \" 5) Get your pull request reviewed and merged. 6) Upon merging the pull request git tag -a $RELEASE_VERSION $( git rev-parse HEAD ) git push upstream main --tags TODO A Github Action should execute the above step which will end up associating a Git tag (and therefore a Github release) with the SHA1 commit ID of the source code for the controllers and the release artifacts you built for that release version. 7) git tag operation from last step triggers a postsubmit prowjob which builds binary docker image and then publishes both docker image and Helm chart to public ECR repository. Service team can see the release prowjobs, their status and logs at https://prow.ack.aws.dev/ Stable Helm Chart This same postsubmit prowjob also publishes the stable Helm charts, whenever there is a code push on stable git branch. To learn more about how to push changes to stable branch please read releases.md When this prowjob is triggered from stable branch, it does not build a docker image and only publishes the helm artifacts with stable tag. Ex: elasticache-v1-stable","title":"Release"},{"location":"dev-docs/release/#release","text":"Here we document the release process for ACK service controllers. Remember that there is no single ACK binary. Rather, when we build a release for ACK, that release is for one or more individual ACK service controllers binaries, each of which are installed separately. This documentation covers the steps involved for officially publishing a ACK service controller's release artifacts. Once ACK service controller changes are tested by the service team and they wish to release latest artifacts, service team only needs to create a new release for service-controller github repository with a semver tag (Ex: v0.0.1). Steps below show how to create a new release with semver tag. Semver For more details on semantic versioning(semver), please read releases.md Once the git repository is tagged with semver, a postsubmit prowjob builds binary docker image for ACK service controller and publish to public ecr repository public.ecr.aws/aws-controllers-k8s/controller . Same prowjob also publishes the Helm charts for the ACK service controller to public ecr repository public.ecr.aws/aws-controllers-k8s/chart .","title":"Release"},{"location":"dev-docs/release/#what-is-a-release-exactly","text":"A \"release\" is the combination of a Git tag containing a SemVer version tag against this source repository and the collection of artifacts that allow the individual ACK service controllers included in that Git commit to be easily installed via Helm. The Git tag points at a specific Git commit referencing the exact source code that comprises the ACK service controllers in that \"release\". The release artifacts include the following for one or more service controllers: Docker image Helm chart The Docker image is built and pushed with an image tag that indicates the release version for the controller along with the AWS service. For example, assume a release semver tag of v0.1.0 that includes service controllers for S3 and SNS. There would be two Docker images built for this release, one each containing the ACK service controllers for S3 and SNS. The Docker images would have the following image tags: s3-v0.1.0 and sns-v0.1.0 . Note that the full image name would be public.ecr.aws/aws-controllers-k8s/controller:s3-v0.1.0 The Helm chart artifact can be used to install the ACK service controller as a Kubernetes Deployment; the Deployment's Pod image will refer to the exact Docker image tag matching the release tag.","title":"What is a release exactly?"},{"location":"dev-docs/release/#release-steps","text":"1) First check out a git branch for your release: export RELEASE_VERSION = v0.0.1 git checkout -b release- $RELEASE_VERSION 2) Build the release artifacts for the controllers you wish to include in the release Run make build-controller for each service from code-generator repository. For instance, to build release artifacts for the SNS and S3 controllers I would do: for SERVICE in sns s3 ; do export SERVICE ; echo \"building ACK controller for $SERVICE , Version: $RELEASE_VERSION \" make build-controller ; done 3) You can review the release artifacts that were built for each service by looking in the services/$SERVICE/helm directory: tree services/$SERVICE/helm or by doing: git diff Note When you run make build-controller for a service, it will overwrite any Helm chart files that had previously been generated in the services/$SERVICE/helm directory with files that refer to the Docker image with an image tag referring to the release you've just built artifacts for. 4) Commit your code and create a pull request: git commit -a -m \"release artifacts for release $RELEASE_VERSION \" 5) Get your pull request reviewed and merged. 6) Upon merging the pull request git tag -a $RELEASE_VERSION $( git rev-parse HEAD ) git push upstream main --tags TODO A Github Action should execute the above step which will end up associating a Git tag (and therefore a Github release) with the SHA1 commit ID of the source code for the controllers and the release artifacts you built for that release version. 7) git tag operation from last step triggers a postsubmit prowjob which builds binary docker image and then publishes both docker image and Helm chart to public ECR repository. Service team can see the release prowjobs, their status and logs at https://prow.ack.aws.dev/ Stable Helm Chart This same postsubmit prowjob also publishes the stable Helm charts, whenever there is a code push on stable git branch. To learn more about how to push changes to stable branch please read releases.md When this prowjob is triggered from stable branch, it does not build a docker image and only publishes the helm artifacts with stable tag. Ex: elasticache-v1-stable","title":"Release steps"},{"location":"dev-docs/setup/","text":"Setup \u00b6 We walk you now through the setup to start contributing to the AWS Controller for Kubernetes (ACK) project. No matter if you're contributing code or docs, follow the steps below to set up your development environment. Issue before PR Of course we're happy about code drops via PRs, however, in order to give us time to plan ahead and also to avoid disappointment, consider creating an issue first and submit a PR later. This also helps us to coordinate between different contributors and should in general help keeping everyone happy. Prerequisites \u00b6 Please ensure that you have properly installed Go . Go version We recommend to use a Go version of 1.14 or above for development. Fork upstream repositories \u00b6 The first step in setting up your ACK development environment is to fork the upstream ACK source code repositories to your personal Github account. There are three common upstream repositories you should fork first: github.com/aws-controllers-k8s/runtime is the core ACK runtime and types github.com/aws-controllers-k8s/code-generator is the ACK code generator github.com/aws-controllers-k8s/test-infra contains the testing scripts prefix ACK forked repos with 'ack-' When I fork repositories to my personal Github account, I tend to prefix the repositories with a common string for grouping purposes. For ACK source repositories that I forked from the github.com/aws-controllers-k8s Github Organization, I prefix those repositories with \"ack-\". For example, when I forked the github.com/aws-controllers-k8s/code-generator repository to my github.com/jaypipes personal space on Github, I immediately renamed the forked repo to github.com/jaypipes/ack-code-generator . This makes it easier to quickly filter repositories that are forked from the github.com/aws-controllers-k8s Github Organization. After forking the above common repositories, fork the upstream service controller repositories that you wish to work on or test out. The upstream service controller repositories are in the github.com/aws-controllers-k8s Github Organization and follow a naming schema of $SERVICE_ALIAS-controller . So, if you wanted to work on the S3 service controller, you would fork the github.com/aws-controllers-k8s/s3-controller source repository to your personal Github space. Ensure source code organization directories exist \u00b6 Make sure in your $GOPATH/src that you have directories for the aws-controllers-k8s organization: mkdir -p $GOPATH /src/github.com/aws-controllers-k8s git clone forked repositories and add upstream remote \u00b6 For each of your forked repositories, you will git clone the repository into the appropriate folder in your $GOPATH . Once git clone 'd, you will want to set up a Git remote called \"upstream\" (remember that \"origin\" will be pointing at your forked repository location in your personal Github space). You can use this script to do this for you: GITHUB_ID = \"your GH username\" # Set this to \"\" if you did NOT take my advice above in the tip about prefixing # your personal forked ACK repository names with \"ack-\" ACK_REPO_PREFIX = \"ack-\" # Clone all the common ACK repositories... COMMON = \"runtime code-generator test-infra\" for REPO in $COMMON ; do cd $GOPATH /src/github.com/aws-controllers-k8s git clone git@github.com: $GITHUB_ID / $ACK_REPO_PREFIX$REPO $REPO cd $REPO git remote add upstream git@github.com:aws-controllers-k8s/ $REPO git fetch --all done # Now clone all the service controller repositories... # Change this to the list of services you forked service controllers for... SERVICES = \"s3 sns ecr\" for SERVICE in $SERVICES ; do cd $GOPATH /src/github.com/aws-controllers-k8s git clone git@github.com: $GITHUB_ID / $ACK_REPO_PREFIX$SERVICE -controller $SERVICE -controller cd $SERVICE -controller git remote add upstream git@github.com:aws-controllers-k8s/ $SERVICE -controller git fetch --all done Create your local branch \u00b6 Next, you create a local branch where you work on your feature or bug fix. Let's say you want to enhance the docs, so set BRANCH_NAME=docs-improve and then: git fetch --all && git checkout -b $BRANCH_NAME upstream/main Commit changes \u00b6 Make your changes locally, commit and push using: git commit -a -m \"improves the docs a lot\" git push origin $BRANCH_NAME With an example output: Enumerating objects: 6 , done . Counting objects: 100 % ( 6 /6 ) , done . Delta compression using up to 8 threads Compressing objects: 100 % ( 4 /4 ) , done . Writing objects: 100 % ( 4 /4 ) , 710 bytes | 710 .00 KiB/s, done . Total 4 ( delta 2 ) , reused 0 ( delta 0 ) remote: Resolving deltas: 100 % ( 2 /2 ) , completed with 2 local objects. remote: This repository moved. Please use the new location: remote: git@github.com: $GITHUB_ID /aws-controllers-k8s.git remote: remote: Create a pull request for 'docs' on GitHub by visiting: remote: https://github.com/ $GITHUB_ID /aws-controllers-k8s/pull/new/docs remote: To github.com:a-hilaly/aws-controllers-k8s * [ new branch ] docs -> docs Create a pull request \u00b6 Finally, submit a pull request against the upstream source repository. Use either the link that show up as in the example above or to the upstream source repository and there open the pull request as depicted below: We monitor the GitHub repo and try to follow up with comments within a working day. Next Steps \u00b6 After getting familiar with the various ACK source code repositories, now learn how to build an ACK service controller .","title":"Setup"},{"location":"dev-docs/setup/#setup","text":"We walk you now through the setup to start contributing to the AWS Controller for Kubernetes (ACK) project. No matter if you're contributing code or docs, follow the steps below to set up your development environment. Issue before PR Of course we're happy about code drops via PRs, however, in order to give us time to plan ahead and also to avoid disappointment, consider creating an issue first and submit a PR later. This also helps us to coordinate between different contributors and should in general help keeping everyone happy.","title":"Setup"},{"location":"dev-docs/setup/#prerequisites","text":"Please ensure that you have properly installed Go . Go version We recommend to use a Go version of 1.14 or above for development.","title":"Prerequisites"},{"location":"dev-docs/setup/#fork-upstream-repositories","text":"The first step in setting up your ACK development environment is to fork the upstream ACK source code repositories to your personal Github account. There are three common upstream repositories you should fork first: github.com/aws-controllers-k8s/runtime is the core ACK runtime and types github.com/aws-controllers-k8s/code-generator is the ACK code generator github.com/aws-controllers-k8s/test-infra contains the testing scripts prefix ACK forked repos with 'ack-' When I fork repositories to my personal Github account, I tend to prefix the repositories with a common string for grouping purposes. For ACK source repositories that I forked from the github.com/aws-controllers-k8s Github Organization, I prefix those repositories with \"ack-\". For example, when I forked the github.com/aws-controllers-k8s/code-generator repository to my github.com/jaypipes personal space on Github, I immediately renamed the forked repo to github.com/jaypipes/ack-code-generator . This makes it easier to quickly filter repositories that are forked from the github.com/aws-controllers-k8s Github Organization. After forking the above common repositories, fork the upstream service controller repositories that you wish to work on or test out. The upstream service controller repositories are in the github.com/aws-controllers-k8s Github Organization and follow a naming schema of $SERVICE_ALIAS-controller . So, if you wanted to work on the S3 service controller, you would fork the github.com/aws-controllers-k8s/s3-controller source repository to your personal Github space.","title":"Fork upstream repositories"},{"location":"dev-docs/setup/#ensure-source-code-organization-directories-exist","text":"Make sure in your $GOPATH/src that you have directories for the aws-controllers-k8s organization: mkdir -p $GOPATH /src/github.com/aws-controllers-k8s","title":"Ensure source code organization directories exist"},{"location":"dev-docs/setup/#git-clone-forked-repositories-and-add-upstream-remote","text":"For each of your forked repositories, you will git clone the repository into the appropriate folder in your $GOPATH . Once git clone 'd, you will want to set up a Git remote called \"upstream\" (remember that \"origin\" will be pointing at your forked repository location in your personal Github space). You can use this script to do this for you: GITHUB_ID = \"your GH username\" # Set this to \"\" if you did NOT take my advice above in the tip about prefixing # your personal forked ACK repository names with \"ack-\" ACK_REPO_PREFIX = \"ack-\" # Clone all the common ACK repositories... COMMON = \"runtime code-generator test-infra\" for REPO in $COMMON ; do cd $GOPATH /src/github.com/aws-controllers-k8s git clone git@github.com: $GITHUB_ID / $ACK_REPO_PREFIX$REPO $REPO cd $REPO git remote add upstream git@github.com:aws-controllers-k8s/ $REPO git fetch --all done # Now clone all the service controller repositories... # Change this to the list of services you forked service controllers for... SERVICES = \"s3 sns ecr\" for SERVICE in $SERVICES ; do cd $GOPATH /src/github.com/aws-controllers-k8s git clone git@github.com: $GITHUB_ID / $ACK_REPO_PREFIX$SERVICE -controller $SERVICE -controller cd $SERVICE -controller git remote add upstream git@github.com:aws-controllers-k8s/ $SERVICE -controller git fetch --all done","title":"git clone forked repositories and add upstream remote"},{"location":"dev-docs/setup/#create-your-local-branch","text":"Next, you create a local branch where you work on your feature or bug fix. Let's say you want to enhance the docs, so set BRANCH_NAME=docs-improve and then: git fetch --all && git checkout -b $BRANCH_NAME upstream/main","title":"Create your local branch"},{"location":"dev-docs/setup/#commit-changes","text":"Make your changes locally, commit and push using: git commit -a -m \"improves the docs a lot\" git push origin $BRANCH_NAME With an example output: Enumerating objects: 6 , done . Counting objects: 100 % ( 6 /6 ) , done . Delta compression using up to 8 threads Compressing objects: 100 % ( 4 /4 ) , done . Writing objects: 100 % ( 4 /4 ) , 710 bytes | 710 .00 KiB/s, done . Total 4 ( delta 2 ) , reused 0 ( delta 0 ) remote: Resolving deltas: 100 % ( 2 /2 ) , completed with 2 local objects. remote: This repository moved. Please use the new location: remote: git@github.com: $GITHUB_ID /aws-controllers-k8s.git remote: remote: Create a pull request for 'docs' on GitHub by visiting: remote: https://github.com/ $GITHUB_ID /aws-controllers-k8s/pull/new/docs remote: To github.com:a-hilaly/aws-controllers-k8s * [ new branch ] docs -> docs","title":"Commit changes"},{"location":"dev-docs/setup/#create-a-pull-request","text":"Finally, submit a pull request against the upstream source repository. Use either the link that show up as in the example above or to the upstream source repository and there open the pull request as depicted below: We monitor the GitHub repo and try to follow up with comments within a working day.","title":"Create a pull request"},{"location":"dev-docs/setup/#next-steps","text":"After getting familiar with the various ACK source code repositories, now learn how to build an ACK service controller .","title":"Next Steps"},{"location":"dev-docs/testing/","text":"Testing \u00b6 In the following, we will take you through the steps to run end-to-end (e2e) tests for the ACK service controller for S3. You may use these steps to run e2e tests for other ACK service controllers. If you run into any problems when testing a service controller, please raise an issue with the details so we can reproduce your issue. Prerequisites \u00b6 For local development and testing we use \"Kubernetes in Docker\" ( kind ), which in turn requires Docker. Footprint When you run the scripts/kind-build-test.sh script the first time, the step that builds the container image for the target ACK service controller can take up to 40 or more minutes. This is because the container image contains a lot of dependencies. Once you successfully build the target image this base image layer is cached locally, and the build takes a much shorter amount of time. We are aware of this (and the storage footprint, ca. 3 GB) and aim to reduce both in the fullness of time. In summary, in order to test ACK you will need to have the following tools installed and configured: Golang 1.14+ make Docker kind jq To build and test an ACK controller with kind , execute the commands as described in the following from the root directory of the github.com/aws-controllers-k8s/community repository. You should have forked this repository and git clone 'd it locally when setting up your development environment . Recommended RAM Given that our test setup creates the container images and then launches a test cluster, we recommend that you have at least 4GB of RAM available for the tests. With the prerequisites out of the way, let's move on to running e2e tests for a service controller. Run tests \u00b6 Time to run the end-to-end test. IAM setup \u00b6 In order for the ACK service controller to manage the S3 bucket, it needs an identity. In other words, it needs an IAM role that represents the ACK service controller towards the S3 service. First, define the name of the IAM role that will have the permission to manage S3 buckets on your behalf: export ACK_TEST_IAM_ROLE = Admin - k8s Now we need to verify the IAM principal (likely an IAM user) that is going to assume the IAM role ACK_TEST_IAM_ROLE . So to get its ARN, execute: export ACK_TEST_PRINCIPAL_ARN =$ ( aws sts get - caller - identity -- query 'Arn' -- output text ) You can verify if that worked using echo $ACK_TEST_PRINCIPAL_ARN and that should print something along the lines of arn:aws:iam::1234567890121:user/ausername . Next up, create the IAM role, adding the necessary trust relationship to the role, using the following commands: cat > trust-policy.json << EOF { \"Version\": \"2012-10-17\", \"Statement\": { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"$ACK_TEST_PRINCIPAL_ARN\" }, \"Action\": \"sts:AssumeRole\" } } EOF Using above trust policy, we can now create the IAM role: aws iam create-role \\ --role-name $ACK_TEST_IAM_ROLE \\ --assume-role-policy-document file://trust-policy.json Now we're in the position to give the IAM role ACK_TEST_IAM_ROLE the permission to handle S3 buckets for us, using: aws iam attach-role-policy \\ --role-name $ACK_TEST_IAM_ROLE \\ --policy-arn \"arn:aws:iam::aws:policy/AmazonS3FullAccess\" Access delegation in IAM If you're not that familiar with IAM access delegation, we recommend you to peruse the IAM documentation Next, in order for our test to generate temporary credentials we need to tell it to use the IAM role we created in the previous step. To generate the IAM role ARN, do: AWS_ACCOUNT_ID =$ ( aws sts get - caller - identity -- query 'Account' -- output text ) && \\ export ACK_ROLE_ARN = arn : aws : iam :: $ { AWS_ACCOUNT_ID }: role /$ { ACK_TEST_IAM_ROLE } Info The tests uses the generate_temp_creds function from the scripts/lib/aws.sh script, executing effectively aws sts assume-role --role-session-arn $ACK_ROLE_ARN --role-session-name $TEMP_ROLE which fetches temporarily AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , and an AWS_SESSION_TOKEN used in turn to authentication the ACK controller. The duration of the session token is 900 seconds (15 minutes). Phew that was a lot to set up, but good news: you're almost there. Run end-to-end test \u00b6 Before you proceed, make sure that you've done the IAM setup in the previous step. IAM troubles?! If you try the following command and you see an error message containing something along the line of ACK_ROLE_ARN is not defined. then you know that somewhere in the IAM setup you either left out a step or one of the commands failed. Now we're finally in the position to execute the end-to-end test: make kind-test SERVICE=$SERVICE This provisions a Kubernetes cluster using kind , builds a container image with the ACK service controller, and loads the container image into the kind cluster. It then installs the ACK service controller and related Kubernetes manifests into the kind cluster using kustomize build | kubectl apply -f - . Then, the above script runs a series of test scripts that call kubectl and the aws CLI tools to verify that custom resources of the type managed by the respective ACK service controller is created, updated and deleted appropriately (still TODO). Finally, it will run tests that create resources for the respective service and verify if the resource has successfully created. In our example case it should create an S3 bucket and then destroy it again, yielding something like the following (edited down to the relevant parts): ... ./ scripts / kind - build - test . sh - s s3 Using Kubernetes kindest / node : v1 . 16.9 @ sha256 : 7175872357 bc85847ec4b1aba46ed1d12fa054c83ac7a8a11f5c268957fd5765 Creating k8s cluster using \"kind\" ... No kind clusters found . Created k8s cluster using \"kind\" Building s3 docker image Building 's3' controller docker image with tag : ack - s3 - controller : ec452ed sha256 : c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef Loading the images into the cluster Image : \"ack-s3-controller:ec452ed\" with ID \"sha256:c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef\" not yet present on node \"test-ccc3c7f1-worker\" , loading ... Image : \"ack-s3-controller:ec452ed\" with ID \"sha256:c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef\" not yet present on node \"test-ccc3c7f1-control-plane\" , loading ... Loading CRD manifests for s3 into the cluster customresourcedefinition . apiextensions . k8s . io / buckets . s3 . services . k8s . aws created Loading RBAC manifests for s3 into the cluster clusterrole . rbac . authorization . k8s . io / ack - controller - role created clusterrolebinding . rbac . authorization . k8s . io / ack - controller - rolebinding created Loading service controller Deployment for s3 into the cluster 2020 / 08 / 18 09 : 51 : 46 Fixed the missing field by adding apiVersion : kustomize . config . k8s . io / v1beta1 Fixed the missing field by adding kind : Kustomization namespace / ack - system created deployment . apps / ack - s3 - controller created Running aws sts assume - role -- role - arn arn : aws : iam :: 1234567890121 : role / Admin - k8s , -- role - session - name tmp - role - 1 b779de5 -- duration - seconds 900 , Temporary credentials generated deployment . apps / ack - s3 - controller env updated Added AWS Credentials to env vars map ====================================================================================================== To poke around your test manually : export KUBECONFIG =/ Users / hausenbl / ACK / upstream / aws - controllers - k8s / scripts /../ build / tmp - test - ccc3c7f1 / kubeconfig kubectl get pods - A ====================================================================================================== bucket . s3 . services . k8s . aws / ack - test - smoke - s3 created { \"Name\" : \"ack-test-smoke-s3\" , \"CreationDate\" : \"2020-08-18T08:52:04+00:00\" } bucket . s3 . services . k8s . aws \"ack-test-smoke-s3\" deleted smoke took 27 second ( s ) \ud83e\udd51 Deleting k8s cluster using \"kind\" Deleting cluster \"test-ccc3c7f1\" ... As you can see, in above case the end-to-end test (creating cluster, deploying ACK, applying custom resources, and tear-down) took less than 30 seconds. This is for the warmed caches case. Repeat for other services \u00b6 We have end-to-end tests for all services listed in the DEVELOPER-PREVIEW , BETA and GA release statuses in our service listing document. Simply replace your SERVICE environment variable with the name of a supported service and re-run the IAM and test steps outlined above. Background \u00b6 We use mockery for unit testing. You can install it by following the guideline on mockery's GitHub or simply by running our handy script at ./scripts/install-mockery.sh for general Linux environments. We track testing in the umbrella issue 6 . on GitHub. Use this issue as a starting point and if you create a new testing-related issue, mention it from there. Clean up \u00b6 To clean up a kind cluster, including the container images and configuration files created by the script specifically for said test cluster, execute: kind delete cluster --name $CLUSTER_NAME If you want to delete all kind cluster running on your machine, use: make delete-all-kind-clusters With this the testing is completed. Thanks for your time and we appreciate your feedback.","title":"Testing"},{"location":"dev-docs/testing/#testing","text":"In the following, we will take you through the steps to run end-to-end (e2e) tests for the ACK service controller for S3. You may use these steps to run e2e tests for other ACK service controllers. If you run into any problems when testing a service controller, please raise an issue with the details so we can reproduce your issue.","title":"Testing"},{"location":"dev-docs/testing/#prerequisites","text":"For local development and testing we use \"Kubernetes in Docker\" ( kind ), which in turn requires Docker. Footprint When you run the scripts/kind-build-test.sh script the first time, the step that builds the container image for the target ACK service controller can take up to 40 or more minutes. This is because the container image contains a lot of dependencies. Once you successfully build the target image this base image layer is cached locally, and the build takes a much shorter amount of time. We are aware of this (and the storage footprint, ca. 3 GB) and aim to reduce both in the fullness of time. In summary, in order to test ACK you will need to have the following tools installed and configured: Golang 1.14+ make Docker kind jq To build and test an ACK controller with kind , execute the commands as described in the following from the root directory of the github.com/aws-controllers-k8s/community repository. You should have forked this repository and git clone 'd it locally when setting up your development environment . Recommended RAM Given that our test setup creates the container images and then launches a test cluster, we recommend that you have at least 4GB of RAM available for the tests. With the prerequisites out of the way, let's move on to running e2e tests for a service controller.","title":"Prerequisites"},{"location":"dev-docs/testing/#run-tests","text":"Time to run the end-to-end test.","title":"Run tests"},{"location":"dev-docs/testing/#iam-setup","text":"In order for the ACK service controller to manage the S3 bucket, it needs an identity. In other words, it needs an IAM role that represents the ACK service controller towards the S3 service. First, define the name of the IAM role that will have the permission to manage S3 buckets on your behalf: export ACK_TEST_IAM_ROLE = Admin - k8s Now we need to verify the IAM principal (likely an IAM user) that is going to assume the IAM role ACK_TEST_IAM_ROLE . So to get its ARN, execute: export ACK_TEST_PRINCIPAL_ARN =$ ( aws sts get - caller - identity -- query 'Arn' -- output text ) You can verify if that worked using echo $ACK_TEST_PRINCIPAL_ARN and that should print something along the lines of arn:aws:iam::1234567890121:user/ausername . Next up, create the IAM role, adding the necessary trust relationship to the role, using the following commands: cat > trust-policy.json << EOF { \"Version\": \"2012-10-17\", \"Statement\": { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"$ACK_TEST_PRINCIPAL_ARN\" }, \"Action\": \"sts:AssumeRole\" } } EOF Using above trust policy, we can now create the IAM role: aws iam create-role \\ --role-name $ACK_TEST_IAM_ROLE \\ --assume-role-policy-document file://trust-policy.json Now we're in the position to give the IAM role ACK_TEST_IAM_ROLE the permission to handle S3 buckets for us, using: aws iam attach-role-policy \\ --role-name $ACK_TEST_IAM_ROLE \\ --policy-arn \"arn:aws:iam::aws:policy/AmazonS3FullAccess\" Access delegation in IAM If you're not that familiar with IAM access delegation, we recommend you to peruse the IAM documentation Next, in order for our test to generate temporary credentials we need to tell it to use the IAM role we created in the previous step. To generate the IAM role ARN, do: AWS_ACCOUNT_ID =$ ( aws sts get - caller - identity -- query 'Account' -- output text ) && \\ export ACK_ROLE_ARN = arn : aws : iam :: $ { AWS_ACCOUNT_ID }: role /$ { ACK_TEST_IAM_ROLE } Info The tests uses the generate_temp_creds function from the scripts/lib/aws.sh script, executing effectively aws sts assume-role --role-session-arn $ACK_ROLE_ARN --role-session-name $TEMP_ROLE which fetches temporarily AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , and an AWS_SESSION_TOKEN used in turn to authentication the ACK controller. The duration of the session token is 900 seconds (15 minutes). Phew that was a lot to set up, but good news: you're almost there.","title":"IAM setup"},{"location":"dev-docs/testing/#run-end-to-end-test","text":"Before you proceed, make sure that you've done the IAM setup in the previous step. IAM troubles?! If you try the following command and you see an error message containing something along the line of ACK_ROLE_ARN is not defined. then you know that somewhere in the IAM setup you either left out a step or one of the commands failed. Now we're finally in the position to execute the end-to-end test: make kind-test SERVICE=$SERVICE This provisions a Kubernetes cluster using kind , builds a container image with the ACK service controller, and loads the container image into the kind cluster. It then installs the ACK service controller and related Kubernetes manifests into the kind cluster using kustomize build | kubectl apply -f - . Then, the above script runs a series of test scripts that call kubectl and the aws CLI tools to verify that custom resources of the type managed by the respective ACK service controller is created, updated and deleted appropriately (still TODO). Finally, it will run tests that create resources for the respective service and verify if the resource has successfully created. In our example case it should create an S3 bucket and then destroy it again, yielding something like the following (edited down to the relevant parts): ... ./ scripts / kind - build - test . sh - s s3 Using Kubernetes kindest / node : v1 . 16.9 @ sha256 : 7175872357 bc85847ec4b1aba46ed1d12fa054c83ac7a8a11f5c268957fd5765 Creating k8s cluster using \"kind\" ... No kind clusters found . Created k8s cluster using \"kind\" Building s3 docker image Building 's3' controller docker image with tag : ack - s3 - controller : ec452ed sha256 : c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef Loading the images into the cluster Image : \"ack-s3-controller:ec452ed\" with ID \"sha256:c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef\" not yet present on node \"test-ccc3c7f1-worker\" , loading ... Image : \"ack-s3-controller:ec452ed\" with ID \"sha256:c9cbcc028f2b7351d0507f8542ab88c80f9fb5a3b8b800feee8e362882833eef\" not yet present on node \"test-ccc3c7f1-control-plane\" , loading ... Loading CRD manifests for s3 into the cluster customresourcedefinition . apiextensions . k8s . io / buckets . s3 . services . k8s . aws created Loading RBAC manifests for s3 into the cluster clusterrole . rbac . authorization . k8s . io / ack - controller - role created clusterrolebinding . rbac . authorization . k8s . io / ack - controller - rolebinding created Loading service controller Deployment for s3 into the cluster 2020 / 08 / 18 09 : 51 : 46 Fixed the missing field by adding apiVersion : kustomize . config . k8s . io / v1beta1 Fixed the missing field by adding kind : Kustomization namespace / ack - system created deployment . apps / ack - s3 - controller created Running aws sts assume - role -- role - arn arn : aws : iam :: 1234567890121 : role / Admin - k8s , -- role - session - name tmp - role - 1 b779de5 -- duration - seconds 900 , Temporary credentials generated deployment . apps / ack - s3 - controller env updated Added AWS Credentials to env vars map ====================================================================================================== To poke around your test manually : export KUBECONFIG =/ Users / hausenbl / ACK / upstream / aws - controllers - k8s / scripts /../ build / tmp - test - ccc3c7f1 / kubeconfig kubectl get pods - A ====================================================================================================== bucket . s3 . services . k8s . aws / ack - test - smoke - s3 created { \"Name\" : \"ack-test-smoke-s3\" , \"CreationDate\" : \"2020-08-18T08:52:04+00:00\" } bucket . s3 . services . k8s . aws \"ack-test-smoke-s3\" deleted smoke took 27 second ( s ) \ud83e\udd51 Deleting k8s cluster using \"kind\" Deleting cluster \"test-ccc3c7f1\" ... As you can see, in above case the end-to-end test (creating cluster, deploying ACK, applying custom resources, and tear-down) took less than 30 seconds. This is for the warmed caches case.","title":"Run end-to-end test"},{"location":"dev-docs/testing/#repeat-for-other-services","text":"We have end-to-end tests for all services listed in the DEVELOPER-PREVIEW , BETA and GA release statuses in our service listing document. Simply replace your SERVICE environment variable with the name of a supported service and re-run the IAM and test steps outlined above.","title":"Repeat for other services"},{"location":"dev-docs/testing/#background","text":"We use mockery for unit testing. You can install it by following the guideline on mockery's GitHub or simply by running our handy script at ./scripts/install-mockery.sh for general Linux environments. We track testing in the umbrella issue 6 . on GitHub. Use this issue as a starting point and if you create a new testing-related issue, mention it from there.","title":"Background"},{"location":"dev-docs/testing/#clean-up","text":"To clean up a kind cluster, including the container images and configuration files created by the script specifically for said test cluster, execute: kind delete cluster --name $CLUSTER_NAME If you want to delete all kind cluster running on your machine, use: make delete-all-kind-clusters With this the testing is completed. Thanks for your time and we appreciate your feedback.","title":"Clean up"},{"location":"reference/overview/","text":"APIGWv2 \u00b6 Resource API Version API v1alpha1 APIMapping v1alpha1 Authorizer v1alpha1 Deployment v1alpha1 DomainName v1alpha1 Integration v1alpha1 IntegrationResponse v1alpha1 Model v1alpha1 Route v1alpha1 RouteResponse v1alpha1 Stage v1alpha1 VPCLink v1alpha1 AutoScaling \u00b6 Resource API Version ScalableTarget v1alpha1 ScalingPolicy v1alpha1 DynamoDB \u00b6 Resource API Version Backup v1alpha1 GlobalTable v1alpha1 Table v1alpha1 EC2 \u00b6 Resource API Version VPC v1alpha1 ECR \u00b6 Resource API Version Repository v1alpha1 ElastiCache \u00b6 Resource API Version CacheParameterGroup v1alpha1 CacheSubnetGroup v1alpha1 ReplicationGroup v1alpha1 Snapshot v1alpha1 User v1alpha1 UserGroup v1alpha1 Elasticsearch \u00b6 Resource API Version ElasticsearchDomain v1alpha1 KMS \u00b6 Resource API Version Alias v1alpha1 CustomKeyStore v1alpha1 Grant v1alpha1 Key v1alpha1 MQ \u00b6 Resource API Version Broker v1alpha1 RDS \u00b6 Resource API Version DBCluster v1alpha1 DBClusterParameterGroup v1alpha1 DBInstance v1alpha1 DBParameterGroup v1alpha1 DBSecurityGroup v1alpha1 DBSubnetGroup v1alpha1 S3 \u00b6 Resource API Version Bucket v1alpha1 SageMaker \u00b6 Resource API Version DataQualityJobDefinition v1alpha1 Endpoint v1alpha1 EndpointConfig v1alpha1 FeatureGroup v1alpha1 HyperParameterTuningJob v1alpha1 Model v1alpha1 ModelBiasJobDefinition v1alpha1 ModelExplainabilityJobDefinition v1alpha1 ModelPackage v1alpha1 ModelPackageGroup v1alpha1 ModelQualityJobDefinition v1alpha1 MonitoringSchedule v1alpha1 NotebookInstance v1alpha1 NotebookInstanceLifecycleConfig v1alpha1 ProcessingJob v1alpha1 TrainingJob v1alpha1 TransformJob v1alpha1 Step-Functions \u00b6 Resource API Version Activity v1alpha1 StateMachine v1alpha1 SNS \u00b6 Resource API Version PlatformApplication v1alpha1 PlatformEndpoint v1alpha1 Topic v1alpha1 SQS \u00b6 Resource API Version Queue v1alpha1","title":"Overview"},{"location":"reference/overview/#apigwv2","text":"Resource API Version API v1alpha1 APIMapping v1alpha1 Authorizer v1alpha1 Deployment v1alpha1 DomainName v1alpha1 Integration v1alpha1 IntegrationResponse v1alpha1 Model v1alpha1 Route v1alpha1 RouteResponse v1alpha1 Stage v1alpha1 VPCLink v1alpha1","title":"APIGWv2"},{"location":"reference/overview/#autoscaling","text":"Resource API Version ScalableTarget v1alpha1 ScalingPolicy v1alpha1","title":"AutoScaling"},{"location":"reference/overview/#dynamodb","text":"Resource API Version Backup v1alpha1 GlobalTable v1alpha1 Table v1alpha1","title":"DynamoDB"},{"location":"reference/overview/#ec2","text":"Resource API Version VPC v1alpha1","title":"EC2"},{"location":"reference/overview/#ecr","text":"Resource API Version Repository v1alpha1","title":"ECR"},{"location":"reference/overview/#elasticache","text":"Resource API Version CacheParameterGroup v1alpha1 CacheSubnetGroup v1alpha1 ReplicationGroup v1alpha1 Snapshot v1alpha1 User v1alpha1 UserGroup v1alpha1","title":"ElastiCache"},{"location":"reference/overview/#elasticsearch","text":"Resource API Version ElasticsearchDomain v1alpha1","title":"Elasticsearch"},{"location":"reference/overview/#kms","text":"Resource API Version Alias v1alpha1 CustomKeyStore v1alpha1 Grant v1alpha1 Key v1alpha1","title":"KMS"},{"location":"reference/overview/#mq","text":"Resource API Version Broker v1alpha1","title":"MQ"},{"location":"reference/overview/#rds","text":"Resource API Version DBCluster v1alpha1 DBClusterParameterGroup v1alpha1 DBInstance v1alpha1 DBParameterGroup v1alpha1 DBSecurityGroup v1alpha1 DBSubnetGroup v1alpha1","title":"RDS"},{"location":"reference/overview/#s3","text":"Resource API Version Bucket v1alpha1","title":"S3"},{"location":"reference/overview/#sagemaker","text":"Resource API Version DataQualityJobDefinition v1alpha1 Endpoint v1alpha1 EndpointConfig v1alpha1 FeatureGroup v1alpha1 HyperParameterTuningJob v1alpha1 Model v1alpha1 ModelBiasJobDefinition v1alpha1 ModelExplainabilityJobDefinition v1alpha1 ModelPackage v1alpha1 ModelPackageGroup v1alpha1 ModelQualityJobDefinition v1alpha1 MonitoringSchedule v1alpha1 NotebookInstance v1alpha1 NotebookInstanceLifecycleConfig v1alpha1 ProcessingJob v1alpha1 TrainingJob v1alpha1 TransformJob v1alpha1","title":"SageMaker"},{"location":"reference/overview/#step-functions","text":"Resource API Version Activity v1alpha1 StateMachine v1alpha1","title":"Step-Functions"},{"location":"reference/overview/#sns","text":"Resource API Version PlatformApplication v1alpha1 PlatformEndpoint v1alpha1 Topic v1alpha1","title":"SNS"},{"location":"reference/overview/#sqs","text":"Resource API Version Queue v1alpha1","title":"SQS"},{"location":"reference/APIGWv2/v1alpha1/API/","text":"API \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#API Metadata \u00b6 Property Value Scope Namespaced Kind API ListKind APIList Plural apis Singular api Represents an API. Spec \u00b6 apiKeySelectionExpression : string basepath : string body : string corsConfiguration : allowCredentials : boolean allowHeaders : - string allowMethods : - string allowOrigins : - string exposeHeaders : - string maxAge : integer credentialsARN : string description : string disableExecuteAPIEndpoint : boolean disableSchemaValidation : boolean failOnWarnings : boolean name : string protocolType : string routeKey : string routeSelectionExpression : string tags : {} target : string version : string Field Description apiKeySelectionExpression Optional string basepath Optional string body Optional string corsConfiguration Optional object Represents a CORS configuration. Supported only for HTTP APIs. See Configuring CORS (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html) for more information. corsConfiguration.allowCredentials Optional boolean corsConfiguration.allowHeaders Optional array Represents a collection of allowed headers. Supported only for HTTP APIs. corsConfiguration.allowHeaders.[] Required string corsConfiguration.allowMethods.[] Required string corsConfiguration.allowOrigins.[] Required string corsConfiguration.exposeHeaders.[] Required string credentialsARN Optional string description Optional string disableExecuteAPIEndpoint Optional boolean disableSchemaValidation Optional boolean failOnWarnings Optional boolean name Optional string protocolType Optional string routeKey Optional string routeSelectionExpression Optional string tags Optional object target Optional string version Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiEndpoint : string apiGatewayManaged : boolean apiID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string importInfo : - string warnings : - string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiEndpoint Optional string apiGatewayManaged Optional boolean apiID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string importInfo Optional array importInfo.[] Required string warnings.[] Required string","title":"API"},{"location":"reference/APIGWv2/v1alpha1/API/#api","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#API","title":"API"},{"location":"reference/APIGWv2/v1alpha1/API/#metadata","text":"Property Value Scope Namespaced Kind API ListKind APIList Plural apis Singular api Represents an API.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/API/#spec","text":"apiKeySelectionExpression : string basepath : string body : string corsConfiguration : allowCredentials : boolean allowHeaders : - string allowMethods : - string allowOrigins : - string exposeHeaders : - string maxAge : integer credentialsARN : string description : string disableExecuteAPIEndpoint : boolean disableSchemaValidation : boolean failOnWarnings : boolean name : string protocolType : string routeKey : string routeSelectionExpression : string tags : {} target : string version : string Field Description apiKeySelectionExpression Optional string basepath Optional string body Optional string corsConfiguration Optional object Represents a CORS configuration. Supported only for HTTP APIs. See Configuring CORS (https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html) for more information. corsConfiguration.allowCredentials Optional boolean corsConfiguration.allowHeaders Optional array Represents a collection of allowed headers. Supported only for HTTP APIs. corsConfiguration.allowHeaders.[] Required string corsConfiguration.allowMethods.[] Required string corsConfiguration.allowOrigins.[] Required string corsConfiguration.exposeHeaders.[] Required string credentialsARN Optional string description Optional string disableExecuteAPIEndpoint Optional boolean disableSchemaValidation Optional boolean failOnWarnings Optional boolean name Optional string protocolType Optional string routeKey Optional string routeSelectionExpression Optional string tags Optional object target Optional string version Optional string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/API/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiEndpoint : string apiGatewayManaged : boolean apiID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string importInfo : - string warnings : - string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiEndpoint Optional string apiGatewayManaged Optional boolean apiID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string importInfo Optional array importInfo.[] Required string warnings.[] Required string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/APIMapping/","text":"APIMapping \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#APIMapping Metadata \u00b6 Property Value Scope Namespaced Kind APIMapping ListKind APIMappingList Plural apimappings Singular apimapping Represents an API mapping. Spec \u00b6 apiID : string apiMappingKey : string domainName : string stage : string Field Description apiID Required string apiMappingKey Optional string domainName Required string stage Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiMappingID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiMappingID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"APIMapping"},{"location":"reference/APIGWv2/v1alpha1/APIMapping/#apimapping","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#APIMapping","title":"APIMapping"},{"location":"reference/APIGWv2/v1alpha1/APIMapping/#metadata","text":"Property Value Scope Namespaced Kind APIMapping ListKind APIMappingList Plural apimappings Singular apimapping Represents an API mapping.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/APIMapping/#spec","text":"apiID : string apiMappingKey : string domainName : string stage : string Field Description apiID Required string apiMappingKey Optional string domainName Required string stage Required string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/APIMapping/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiMappingID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiMappingID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Authorizer/","text":"Authorizer \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Authorizer Metadata \u00b6 Property Value Scope Namespaced Kind Authorizer ListKind AuthorizerList Plural authorizers Singular authorizer Represents an authorizer. Spec \u00b6 apiID : string authorizerCredentialsARN : string authorizerPayloadFormatVersion : string authorizerResultTtlInSeconds : integer authorizerType : string authorizerURI : string enableSimpleResponses : boolean identitySource : - string identityValidationExpression : string jwtConfiguration : audience : - string issuer : string name : string Field Description apiID Required string authorizerCredentialsARN Optional string authorizerPayloadFormatVersion Optional string authorizerResultTtlInSeconds Optional integer authorizerType Required string authorizerURI Optional string enableSimpleResponses Optional boolean identitySource Required array identitySource.[] Required string jwtConfiguration Optional object Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs. jwtConfiguration.audience Optional array jwtConfiguration.audience.[] Required string name Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string authorizerID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. authorizerID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Authorizer"},{"location":"reference/APIGWv2/v1alpha1/Authorizer/#authorizer","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Authorizer","title":"Authorizer"},{"location":"reference/APIGWv2/v1alpha1/Authorizer/#metadata","text":"Property Value Scope Namespaced Kind Authorizer ListKind AuthorizerList Plural authorizers Singular authorizer Represents an authorizer.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Authorizer/#spec","text":"apiID : string authorizerCredentialsARN : string authorizerPayloadFormatVersion : string authorizerResultTtlInSeconds : integer authorizerType : string authorizerURI : string enableSimpleResponses : boolean identitySource : - string identityValidationExpression : string jwtConfiguration : audience : - string issuer : string name : string Field Description apiID Required string authorizerCredentialsARN Optional string authorizerPayloadFormatVersion Optional string authorizerResultTtlInSeconds Optional integer authorizerType Required string authorizerURI Optional string enableSimpleResponses Optional boolean identitySource Required array identitySource.[] Required string jwtConfiguration Optional object Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs. jwtConfiguration.audience Optional array jwtConfiguration.audience.[] Required string name Required string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Authorizer/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string authorizerID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. authorizerID Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Deployment/","text":"Deployment \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Deployment Metadata \u00b6 Property Value Scope Namespaced Kind Deployment ListKind DeploymentList Plural deployments Singular deployment An immutable representation of an API that can be called by users. A Deployment must be associated with a Stage for it to be callable over the internet. Spec \u00b6 apiID : string description : string stageName : string Field Description apiID Required string description Optional string stageName Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string autoDeployed : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string deploymentID : string deploymentStatus : string deploymentStatusMessage : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. autoDeployed Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string deploymentID Optional string deploymentStatus Optional string deploymentStatusMessage Optional string","title":"Deployment"},{"location":"reference/APIGWv2/v1alpha1/Deployment/#deployment","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Deployment","title":"Deployment"},{"location":"reference/APIGWv2/v1alpha1/Deployment/#metadata","text":"Property Value Scope Namespaced Kind Deployment ListKind DeploymentList Plural deployments Singular deployment An immutable representation of an API that can be called by users. A Deployment must be associated with a Stage for it to be callable over the internet.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Deployment/#spec","text":"apiID : string description : string stageName : string Field Description apiID Required string description Optional string stageName Optional string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Deployment/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string autoDeployed : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string deploymentID : string deploymentStatus : string deploymentStatusMessage : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. autoDeployed Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string deploymentID Optional string deploymentStatus Optional string deploymentStatusMessage Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/DomainName/","text":"DomainName \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#DomainName Metadata \u00b6 Property Value Scope Namespaced Kind DomainName ListKind DomainNameList Plural domainnames Singular domainname Represents a domain name. Spec \u00b6 domainName : string domainNameConfigurations : - apiGatewayDomainName : string certificateARN : string certificateName : string certificateUploadDate : string domainNameStatus : string domainNameStatusMessage : string endpointType : string hostedZoneID : string securityPolicy : string mutualTLSAuthentication : truststoreURI : string truststoreVersion : string tags : {} Field Description domainName Required string domainNameConfigurations Optional array domainNameConfigurations.[] Required object The domain name configuration. domainNameConfigurations.[].certificateARN Optional string Represents an Amazon Resource Name (ARN). domainNameConfigurations.[].certificateName Optional string A string with a length between [1-128]. domainNameConfigurations.[].certificateUploadDate Optional string domainNameConfigurations.[].domainNameStatus Optional string The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated. domainNameConfigurations.[].domainNameStatusMessage Optional string domainNameConfigurations.[].endpointType Optional string Represents an endpoint type. domainNameConfigurations.[].hostedZoneID Optional string domainNameConfigurations.[].securityPolicy Optional string The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2. mutualTLSAuthentication Optional object If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API. mutualTLSAuthentication.truststoreURI Optional string A string representation of a URI with a length between [1-2048]. mutualTLSAuthentication.truststoreVersion Optional string A string with a length between [1-64]. tags Optional object Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiMappingSelectionExpression : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiMappingSelectionExpression Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"DomainName"},{"location":"reference/APIGWv2/v1alpha1/DomainName/#domainname","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#DomainName","title":"DomainName"},{"location":"reference/APIGWv2/v1alpha1/DomainName/#metadata","text":"Property Value Scope Namespaced Kind DomainName ListKind DomainNameList Plural domainnames Singular domainname Represents a domain name.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/DomainName/#spec","text":"domainName : string domainNameConfigurations : - apiGatewayDomainName : string certificateARN : string certificateName : string certificateUploadDate : string domainNameStatus : string domainNameStatusMessage : string endpointType : string hostedZoneID : string securityPolicy : string mutualTLSAuthentication : truststoreURI : string truststoreVersion : string tags : {} Field Description domainName Required string domainNameConfigurations Optional array domainNameConfigurations.[] Required object The domain name configuration. domainNameConfigurations.[].certificateARN Optional string Represents an Amazon Resource Name (ARN). domainNameConfigurations.[].certificateName Optional string A string with a length between [1-128]. domainNameConfigurations.[].certificateUploadDate Optional string domainNameConfigurations.[].domainNameStatus Optional string The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated. domainNameConfigurations.[].domainNameStatusMessage Optional string domainNameConfigurations.[].endpointType Optional string Represents an endpoint type. domainNameConfigurations.[].hostedZoneID Optional string domainNameConfigurations.[].securityPolicy Optional string The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2. mutualTLSAuthentication Optional object If specified, API Gateway performs two-way authentication between the client and the server. Clients must present a trusted certificate to access your API. mutualTLSAuthentication.truststoreURI Optional string A string representation of a URI with a length between [1-2048]. mutualTLSAuthentication.truststoreVersion Optional string A string with a length between [1-64]. tags Optional object","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/DomainName/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiMappingSelectionExpression : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiMappingSelectionExpression Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Integration/","text":"Integration \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Integration Metadata \u00b6 Property Value Scope Namespaced Kind Integration ListKind IntegrationList Plural integrations Singular integration Represents an integration. Spec \u00b6 apiID : string connectionID : string connectionType : string contentHandlingStrategy : string credentialsARN : string description : string integrationMethod : string integrationSubtype : string integrationType : string integrationURI : string passthroughBehavior : string payloadFormatVersion : string requestParameters : {} requestTemplates : {} templateSelectionExpression : string timeoutInMillis : integer tlsConfig : serverNameToVerify : string Field Description apiID Required string connectionID Optional string connectionType Optional string contentHandlingStrategy Optional string credentialsARN Optional string description Optional string integrationMethod Optional string integrationSubtype Optional string integrationType Required string integrationURI Optional string passthroughBehavior Optional string payloadFormatVersion Optional string requestParameters Optional object requestTemplates Optional object templateSelectionExpression Optional string timeoutInMillis Optional integer tlsConfig Optional object The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs. tlsConfig.serverNameToVerify Optional string A string with a length between [1-512]. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string integrationID : string integrationResponseSelectionExpression : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition integrationID Optional string integrationResponseSelectionExpression Optional string","title":"Integration"},{"location":"reference/APIGWv2/v1alpha1/Integration/#integration","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Integration","title":"Integration"},{"location":"reference/APIGWv2/v1alpha1/Integration/#metadata","text":"Property Value Scope Namespaced Kind Integration ListKind IntegrationList Plural integrations Singular integration Represents an integration.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Integration/#spec","text":"apiID : string connectionID : string connectionType : string contentHandlingStrategy : string credentialsARN : string description : string integrationMethod : string integrationSubtype : string integrationType : string integrationURI : string passthroughBehavior : string payloadFormatVersion : string requestParameters : {} requestTemplates : {} templateSelectionExpression : string timeoutInMillis : integer tlsConfig : serverNameToVerify : string Field Description apiID Required string connectionID Optional string connectionType Optional string contentHandlingStrategy Optional string credentialsARN Optional string description Optional string integrationMethod Optional string integrationSubtype Optional string integrationType Required string integrationURI Optional string passthroughBehavior Optional string payloadFormatVersion Optional string requestParameters Optional object requestTemplates Optional object templateSelectionExpression Optional string timeoutInMillis Optional integer tlsConfig Optional object The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs. tlsConfig.serverNameToVerify Optional string A string with a length between [1-512].","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Integration/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string integrationID : string integrationResponseSelectionExpression : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition integrationID Optional string integrationResponseSelectionExpression Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/IntegrationResponse/","text":"IntegrationResponse \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#IntegrationResponse Metadata \u00b6 Property Value Scope Namespaced Kind IntegrationResponse ListKind IntegrationResponseList Plural integrationresponses Singular integrationresponse Represents an integration response. Spec \u00b6 apiID : string contentHandlingStrategy : string integrationID : string integrationResponseKey : string responseParameters : {} responseTemplates : {} templateSelectionExpression : string Field Description apiID Required string contentHandlingStrategy Optional string integrationID Required string integrationResponseKey Required string responseParameters Optional object responseTemplates Optional object templateSelectionExpression Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string integrationResponseID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition integrationResponseID Optional string","title":"IntegrationResponse"},{"location":"reference/APIGWv2/v1alpha1/IntegrationResponse/#integrationresponse","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#IntegrationResponse","title":"IntegrationResponse"},{"location":"reference/APIGWv2/v1alpha1/IntegrationResponse/#metadata","text":"Property Value Scope Namespaced Kind IntegrationResponse ListKind IntegrationResponseList Plural integrationresponses Singular integrationresponse Represents an integration response.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/IntegrationResponse/#spec","text":"apiID : string contentHandlingStrategy : string integrationID : string integrationResponseKey : string responseParameters : {} responseTemplates : {} templateSelectionExpression : string Field Description apiID Required string contentHandlingStrategy Optional string integrationID Required string integrationResponseKey Required string responseParameters Optional object responseTemplates Optional object templateSelectionExpression Optional string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/IntegrationResponse/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string integrationResponseID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition integrationResponseID Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Model/","text":"Model \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Model Metadata \u00b6 Property Value Scope Namespaced Kind Model ListKind ModelList Plural models Singular model Represents a data model for an API. Supported only for WebSocket APIs. See Create Models and Mapping Templates for Request and Response Mappings (https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html). Spec \u00b6 apiID : string contentType : string description : string name : string schema : string Field Description apiID Required string contentType Optional string description Optional string name Required string schema Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string modelID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition modelID Optional string","title":"Model"},{"location":"reference/APIGWv2/v1alpha1/Model/#model","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Model","title":"Model"},{"location":"reference/APIGWv2/v1alpha1/Model/#metadata","text":"Property Value Scope Namespaced Kind Model ListKind ModelList Plural models Singular model Represents a data model for an API. Supported only for WebSocket APIs. See Create Models and Mapping Templates for Request and Response Mappings (https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html).","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Model/#spec","text":"apiID : string contentType : string description : string name : string schema : string Field Description apiID Required string contentType Optional string description Optional string name Required string schema Required string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Model/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string modelID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition modelID Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Route/","text":"Route \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Route Metadata \u00b6 Property Value Scope Namespaced Kind Route ListKind RouteList Plural routes Singular route Represents a route. Spec \u00b6 apiID : string apiKeyRequired : boolean authorizationScopes : - string authorizationType : string authorizerID : string modelSelectionExpression : string operationName : string requestModels : {} requestParameters : {} routeKey : string routeResponseSelectionExpression : string target : string Field Description apiID Required string apiKeyRequired Optional boolean authorizationScopes Optional array authorizationScopes.[] Required string authorizerID Optional string modelSelectionExpression Optional string operationName Optional string requestModels Optional object requestParameters Optional object routeKey Required string routeResponseSelectionExpression Optional string target Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string routeID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition routeID Optional string","title":"Route"},{"location":"reference/APIGWv2/v1alpha1/Route/#route","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Route","title":"Route"},{"location":"reference/APIGWv2/v1alpha1/Route/#metadata","text":"Property Value Scope Namespaced Kind Route ListKind RouteList Plural routes Singular route Represents a route.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Route/#spec","text":"apiID : string apiKeyRequired : boolean authorizationScopes : - string authorizationType : string authorizerID : string modelSelectionExpression : string operationName : string requestModels : {} requestParameters : {} routeKey : string routeResponseSelectionExpression : string target : string Field Description apiID Required string apiKeyRequired Optional boolean authorizationScopes Optional array authorizationScopes.[] Required string authorizerID Optional string modelSelectionExpression Optional string operationName Optional string requestModels Optional object requestParameters Optional object routeKey Required string routeResponseSelectionExpression Optional string target Optional string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Route/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string routeID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition routeID Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/RouteResponse/","text":"RouteResponse \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#RouteResponse Metadata \u00b6 Property Value Scope Namespaced Kind RouteResponse ListKind RouteResponseList Plural routeresponses Singular routeresponse Represents a route response. Spec \u00b6 apiID : string modelSelectionExpression : string responseModels : {} responseParameters : {} routeID : string routeResponseKey : string Field Description apiID Required string modelSelectionExpression Optional string responseModels Optional object responseParameters Optional object routeID Required string routeResponseKey Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string routeResponseID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition routeResponseID Optional string","title":"RouteResponse"},{"location":"reference/APIGWv2/v1alpha1/RouteResponse/#routeresponse","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#RouteResponse","title":"RouteResponse"},{"location":"reference/APIGWv2/v1alpha1/RouteResponse/#metadata","text":"Property Value Scope Namespaced Kind RouteResponse ListKind RouteResponseList Plural routeresponses Singular routeresponse Represents a route response.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/RouteResponse/#spec","text":"apiID : string modelSelectionExpression : string responseModels : {} responseParameters : {} routeID : string routeResponseKey : string Field Description apiID Required string modelSelectionExpression Optional string responseModels Optional object responseParameters Optional object routeID Required string routeResponseKey Required string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/RouteResponse/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string routeResponseID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition routeResponseID Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/Stage/","text":"Stage \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Stage Metadata \u00b6 Property Value Scope Namespaced Kind Stage ListKind StageList Plural stages Singular stage Represents an API stage. Spec \u00b6 accessLogSettings : destinationARN : string format : string apiID : string autoDeploy : boolean clientCertificateID : string defaultRouteSettings : dataTraceEnabled : boolean detailedMetricsEnabled : boolean loggingLevel : string throttlingBurstLimit : integer throttlingRateLimit : number deploymentID : string description : string routeSettings : {} stageName : string stageVariables : {} tags : {} Field Description accessLogSettings Optional object Settings for logging access in a stage. accessLogSettings.destinationARN Optional string Represents an Amazon Resource Name (ARN). accessLogSettings.format Optional string A string with a length between [1-1024]. apiID Required string autoDeploy Optional boolean clientCertificateID Optional string defaultRouteSettings Optional object Represents a collection of route settings. defaultRouteSettings.dataTraceEnabled Optional boolean defaultRouteSettings.detailedMetricsEnabled Optional boolean defaultRouteSettings.loggingLevel Optional string The logging level. defaultRouteSettings.throttlingBurstLimit Optional integer defaultRouteSettings.throttlingRateLimit Optional number deploymentID Optional string description Optional string routeSettings Optional object stageName Required string stageVariables Optional object tags Optional object Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string lastDeploymentStatusMessage : string lastUpdatedDate : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string lastDeploymentStatusMessage Optional string lastUpdatedDate Optional string","title":"Stage"},{"location":"reference/APIGWv2/v1alpha1/Stage/#stage","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#Stage","title":"Stage"},{"location":"reference/APIGWv2/v1alpha1/Stage/#metadata","text":"Property Value Scope Namespaced Kind Stage ListKind StageList Plural stages Singular stage Represents an API stage.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/Stage/#spec","text":"accessLogSettings : destinationARN : string format : string apiID : string autoDeploy : boolean clientCertificateID : string defaultRouteSettings : dataTraceEnabled : boolean detailedMetricsEnabled : boolean loggingLevel : string throttlingBurstLimit : integer throttlingRateLimit : number deploymentID : string description : string routeSettings : {} stageName : string stageVariables : {} tags : {} Field Description accessLogSettings Optional object Settings for logging access in a stage. accessLogSettings.destinationARN Optional string Represents an Amazon Resource Name (ARN). accessLogSettings.format Optional string A string with a length between [1-1024]. apiID Required string autoDeploy Optional boolean clientCertificateID Optional string defaultRouteSettings Optional object Represents a collection of route settings. defaultRouteSettings.dataTraceEnabled Optional boolean defaultRouteSettings.detailedMetricsEnabled Optional boolean defaultRouteSettings.loggingLevel Optional string The logging level. defaultRouteSettings.throttlingBurstLimit Optional integer defaultRouteSettings.throttlingRateLimit Optional number deploymentID Optional string description Optional string routeSettings Optional object stageName Required string stageVariables Optional object tags Optional object","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/Stage/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string apiGatewayManaged : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string lastDeploymentStatusMessage : string lastUpdatedDate : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. apiGatewayManaged Optional boolean conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string lastDeploymentStatusMessage Optional string lastUpdatedDate Optional string","title":"Status"},{"location":"reference/APIGWv2/v1alpha1/VPCLink/","text":"VPCLink \u00b6 apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#VPCLink Metadata \u00b6 Property Value Scope Namespaced Kind VPCLink ListKind VPCLinkList Plural vpclinks Singular vpclink Represents a VPC link. Spec \u00b6 name : string securityGroupIDs : - string subnetIDs : - string tags : {} Field Description name Required string securityGroupIDs Optional array securityGroupIDs.[] Required string subnetIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string vpcLinkID : string vpcLinkStatus : string vpcLinkStatusMessage : string vpcLinkVersion : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string vpcLinkID Optional string vpcLinkStatus Optional string vpcLinkStatusMessage Optional string vpcLinkVersion Optional string","title":"VPCLink"},{"location":"reference/APIGWv2/v1alpha1/VPCLink/#vpclink","text":"apigatewayv2.services.k8s.aws/v1alpha1 Type Link GoDoc apigatewayv2-controller/apis/v1alpha1#VPCLink","title":"VPCLink"},{"location":"reference/APIGWv2/v1alpha1/VPCLink/#metadata","text":"Property Value Scope Namespaced Kind VPCLink ListKind VPCLinkList Plural vpclinks Singular vpclink Represents a VPC link.","title":"Metadata"},{"location":"reference/APIGWv2/v1alpha1/VPCLink/#spec","text":"name : string securityGroupIDs : - string subnetIDs : - string tags : {} Field Description name Required string securityGroupIDs Optional array securityGroupIDs.[] Required string subnetIDs.[] Required string","title":"Spec"},{"location":"reference/APIGWv2/v1alpha1/VPCLink/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdDate : string vpcLinkID : string vpcLinkStatus : string vpcLinkStatusMessage : string vpcLinkVersion : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdDate Optional string vpcLinkID Optional string vpcLinkStatus Optional string vpcLinkStatusMessage Optional string vpcLinkVersion Optional string","title":"Status"},{"location":"reference/AutoScaling/v1alpha1/ScalableTarget/","text":"ScalableTarget \u00b6 applicationautoscaling.services.k8s.aws/v1alpha1 Type Link GoDoc applicationautoscaling-controller/apis/v1alpha1#ScalableTarget Metadata \u00b6 Property Value Scope Namespaced Kind ScalableTarget ListKind ScalableTargetList Plural scalabletargets Singular scalabletarget Spec \u00b6 maxCapacity : integer minCapacity : integer resourceID : string roleARN : string scalableDimension : string serviceNamespace : string suspendedState : dynamicScalingInSuspended : boolean dynamicScalingOutSuspended : boolean scheduledScalingSuspended : boolean Field Description maxCapacity Optional integer The maximum value that you plan to scale out to. When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand. This property is required when registering a new scalable target. Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see Service Endpoints and Quotas (https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html) in the Amazon Web Services General Reference. minCapacity Optional integer The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand. This property is required when registering a new scalable target. For certain resources, the minimum value allowed is 0. This includes Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB clusters, EMR clusters, and custom resources. For all other resources, the minimum value allowed is 1. resourceID Required string The identifier of the resource that is associated with the scalable target. This string consists of the resource type and unique identifier. * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp. * Spot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE. * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0. * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet. * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table. * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index. * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster. * Amazon SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering. * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource). * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE. * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE. * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1. * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable. * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5. roleARN Optional string This parameter is required for services that do not support service-linked roles (such as Amazon EMR), and it must specify the ARN of an IAM role that allows Application Auto Scaling to modify the scalable target on your behalf. If the service supports service-linked roles, Application Auto Scaling uses a service-linked role, which it creates if it does not yet exist. For more information, see Application Auto Scaling IAM roles (https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles). scalableDimension Required string The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property. * ecs:service:DesiredCount - The desired task count of an ECS service. * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request. * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group. * appstream:fleet:DesiredCapacity - The desired capacity of an AppStream 2.0 fleet. * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table. * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table. * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index. * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index. * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition. * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for an Amazon SageMaker model endpoint variant. * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service. * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint. * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint. * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function. * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table. * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table. * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. serviceNamespace Required string The namespace of the AWS service that provides the resource. For a resource provided by your own application or service, use custom-resource instead. suspendedState Optional object An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities. Suspension Outcomes * For DynamicScalingInSuspended, while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended. * For DynamicScalingOutSuspended, while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended. * For ScheduledScalingSuspended, while a suspension is in effect, all scaling activities that involve scheduled actions are suspended. For more information, see Suspending and resuming scaling (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the Application Auto Scaling User Guide. suspendedState.dynamicScalingInSuspended Optional boolean suspendedState.dynamicScalingOutSuspended Optional boolean suspendedState.scheduledScalingSuspended Optional boolean Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"ScalableTarget"},{"location":"reference/AutoScaling/v1alpha1/ScalableTarget/#scalabletarget","text":"applicationautoscaling.services.k8s.aws/v1alpha1 Type Link GoDoc applicationautoscaling-controller/apis/v1alpha1#ScalableTarget","title":"ScalableTarget"},{"location":"reference/AutoScaling/v1alpha1/ScalableTarget/#metadata","text":"Property Value Scope Namespaced Kind ScalableTarget ListKind ScalableTargetList Plural scalabletargets Singular scalabletarget","title":"Metadata"},{"location":"reference/AutoScaling/v1alpha1/ScalableTarget/#spec","text":"maxCapacity : integer minCapacity : integer resourceID : string roleARN : string scalableDimension : string serviceNamespace : string suspendedState : dynamicScalingInSuspended : boolean dynamicScalingOutSuspended : boolean scheduledScalingSuspended : boolean Field Description maxCapacity Optional integer The maximum value that you plan to scale out to. When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand. This property is required when registering a new scalable target. Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see Service Endpoints and Quotas (https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html) in the Amazon Web Services General Reference. minCapacity Optional integer The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand. This property is required when registering a new scalable target. For certain resources, the minimum value allowed is 0. This includes Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB clusters, EMR clusters, and custom resources. For all other resources, the minimum value allowed is 1. resourceID Required string The identifier of the resource that is associated with the scalable target. This string consists of the resource type and unique identifier. * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp. * Spot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE. * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0. * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet. * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table. * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index. * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster. * Amazon SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering. * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource). * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE. * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE. * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1. * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable. * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5. roleARN Optional string This parameter is required for services that do not support service-linked roles (such as Amazon EMR), and it must specify the ARN of an IAM role that allows Application Auto Scaling to modify the scalable target on your behalf. If the service supports service-linked roles, Application Auto Scaling uses a service-linked role, which it creates if it does not yet exist. For more information, see Application Auto Scaling IAM roles (https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles). scalableDimension Required string The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property. * ecs:service:DesiredCount - The desired task count of an ECS service. * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request. * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group. * appstream:fleet:DesiredCapacity - The desired capacity of an AppStream 2.0 fleet. * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table. * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table. * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index. * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index. * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition. * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for an Amazon SageMaker model endpoint variant. * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service. * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint. * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint. * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function. * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table. * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table. * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. serviceNamespace Required string The namespace of the AWS service that provides the resource. For a resource provided by your own application or service, use custom-resource instead. suspendedState Optional object An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities. Suspension Outcomes * For DynamicScalingInSuspended, while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended. * For DynamicScalingOutSuspended, while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended. * For ScheduledScalingSuspended, while a suspension is in effect, all scaling activities that involve scheduled actions are suspended. For more information, see Suspending and resuming scaling (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the Application Auto Scaling User Guide. suspendedState.dynamicScalingInSuspended Optional boolean suspendedState.dynamicScalingOutSuspended Optional boolean suspendedState.scheduledScalingSuspended Optional boolean","title":"Spec"},{"location":"reference/AutoScaling/v1alpha1/ScalableTarget/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/AutoScaling/v1alpha1/ScalingPolicy/","text":"ScalingPolicy \u00b6 applicationautoscaling.services.k8s.aws/v1alpha1 Type Link GoDoc applicationautoscaling-controller/apis/v1alpha1#ScalingPolicy Metadata \u00b6 Property Value Scope Namespaced Kind ScalingPolicy ListKind ScalingPolicyList Plural scalingpolicies Singular scalingpolicy Spec \u00b6 policyName : string policyType : string resourceID : string scalableDimension : string serviceNamespace : string stepScalingPolicyConfiguration : adjustmentType : string cooldown : integer metricAggregationType : string minAdjustmentMagnitude : integer stepAdjustments : - metricIntervalLowerBound : number metricIntervalUpperBound : number scalingAdjustment : integer targetTrackingScalingPolicyConfiguration : customizedMetricSpecification : dimensions : - name : string value : string metricName : string namespace : string statistic : string unit : string disableScaleIn : boolean predefinedMetricSpecification : predefinedMetricType : string resourceLabel : string scaleInCooldown : integer scaleOutCooldown : integer targetValue : number Field Description policyName Required string The name of the scaling policy. policyType Optional string The policy type. This parameter is required if you are creating a scaling policy. The following policy types are supported: TargetTrackingScaling\u2014Not supported for Amazon EMR StepScaling\u2014Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces (for Apache Cassandra), or Amazon MSK. For more information, see Target tracking scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) and Step scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the Application Auto Scaling User Guide. resourceID Required string The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier. * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp. * Spot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE. * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0. * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet. * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table. * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index. * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster. * Amazon SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering. * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource). * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE. * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE. * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1. * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable. * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5. scalableDimension Required string The scalable dimension. This string consists of the service namespace, resource type, and scaling property. * ecs:service:DesiredCount - The desired task count of an ECS service. * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request. * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group. * appstream:fleet:DesiredCapacity - The desired capacity of an AppStream 2.0 fleet. * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table. * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table. * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index. * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index. * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition. * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for an Amazon SageMaker model endpoint variant. * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service. * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint. * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint. * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function. * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table. * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table. * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. serviceNamespace Required string The namespace of the AWS service that provides the resource. For a resource provided by your own application or service, use custom-resource instead. stepScalingPolicyConfiguration Optional object A step scaling policy. This parameter is required if you are creating a policy and the policy type is StepScaling. stepScalingPolicyConfiguration.adjustmentType Optional string stepScalingPolicyConfiguration.cooldown Optional integer stepScalingPolicyConfiguration.metricAggregationType Optional string stepScalingPolicyConfiguration.minAdjustmentMagnitude Optional integer stepScalingPolicyConfiguration.stepAdjustments Optional array stepScalingPolicyConfiguration.stepAdjustments.[] Required object Represents a step adjustment for a StepScalingPolicyConfiguration (https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html). Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. For the following examples, suppose that you have an alarm with a breach threshold of 50: * To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10. * To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0. There are a few rules for the step adjustments for your step policy: * The ranges of your step adjustments can't overlap or have a gap. * At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound. * At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound. * The upper and lower bound can't be null in the same step adjustment. stepScalingPolicyConfiguration.stepAdjustments.[].metricIntervalUpperBound Optional number stepScalingPolicyConfiguration.stepAdjustments.[].scalingAdjustment Optional integer targetTrackingScalingPolicyConfiguration Optional object A target tracking scaling policy. Includes support for predefined or customized metrics. This parameter is required if you are creating a policy and the policy type is TargetTrackingScaling. targetTrackingScalingPolicyConfiguration.customizedMetricSpecification Optional object Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling. For information about the available metrics for a service, see AWS Services That Publish CloudWatch Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide. To create your customized metric specification: * Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see Publish Custom Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the Amazon CloudWatch User Guide. * Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. For more information about CloudWatch, see Amazon CloudWatch Concepts (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html). targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions Optional array targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions.[] Required object Describes the dimension names and values associated with a metric. targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions.[].value Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.metricName Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.namespace Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.statistic Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.unit Optional string targetTrackingScalingPolicyConfiguration.disableScaleIn Optional boolean targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification Optional object Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling. Only the AWS services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in Building dashboards with CloudWatch (https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html) in the Application Auto Scaling User Guide. targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.predefinedMetricType Optional string targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.resourceLabel Optional string targetTrackingScalingPolicyConfiguration.scaleInCooldown Optional integer targetTrackingScalingPolicyConfiguration.scaleOutCooldown Optional integer targetTrackingScalingPolicyConfiguration.targetValue Optional number Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string alarms : - alarmARN : string alarmName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. alarms Optional array The CloudWatch alarms created for the target tracking scaling policy. alarms.[] Required object Represents a CloudWatch alarm associated with a scaling policy. alarms.[].alarmName Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"ScalingPolicy"},{"location":"reference/AutoScaling/v1alpha1/ScalingPolicy/#scalingpolicy","text":"applicationautoscaling.services.k8s.aws/v1alpha1 Type Link GoDoc applicationautoscaling-controller/apis/v1alpha1#ScalingPolicy","title":"ScalingPolicy"},{"location":"reference/AutoScaling/v1alpha1/ScalingPolicy/#metadata","text":"Property Value Scope Namespaced Kind ScalingPolicy ListKind ScalingPolicyList Plural scalingpolicies Singular scalingpolicy","title":"Metadata"},{"location":"reference/AutoScaling/v1alpha1/ScalingPolicy/#spec","text":"policyName : string policyType : string resourceID : string scalableDimension : string serviceNamespace : string stepScalingPolicyConfiguration : adjustmentType : string cooldown : integer metricAggregationType : string minAdjustmentMagnitude : integer stepAdjustments : - metricIntervalLowerBound : number metricIntervalUpperBound : number scalingAdjustment : integer targetTrackingScalingPolicyConfiguration : customizedMetricSpecification : dimensions : - name : string value : string metricName : string namespace : string statistic : string unit : string disableScaleIn : boolean predefinedMetricSpecification : predefinedMetricType : string resourceLabel : string scaleInCooldown : integer scaleOutCooldown : integer targetValue : number Field Description policyName Required string The name of the scaling policy. policyType Optional string The policy type. This parameter is required if you are creating a scaling policy. The following policy types are supported: TargetTrackingScaling\u2014Not supported for Amazon EMR StepScaling\u2014Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces (for Apache Cassandra), or Amazon MSK. For more information, see Target tracking scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) and Step scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the Application Auto Scaling User Guide. resourceID Required string The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier. * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/default/sample-webapp. * Spot Fleet request - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE. * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0. * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet. * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table. * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index. * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster. * Amazon SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering. * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource). * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE. * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE. * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1. * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable. * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5. scalableDimension Required string The scalable dimension. This string consists of the service namespace, resource type, and scaling property. * ecs:service:DesiredCount - The desired task count of an ECS service. * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet request. * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group. * appstream:fleet:DesiredCapacity - The desired capacity of an AppStream 2.0 fleet. * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table. * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table. * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index. * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index. * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition. * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for an Amazon SageMaker model endpoint variant. * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service. * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint. * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint. * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function. * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table. * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table. * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. serviceNamespace Required string The namespace of the AWS service that provides the resource. For a resource provided by your own application or service, use custom-resource instead. stepScalingPolicyConfiguration Optional object A step scaling policy. This parameter is required if you are creating a policy and the policy type is StepScaling. stepScalingPolicyConfiguration.adjustmentType Optional string stepScalingPolicyConfiguration.cooldown Optional integer stepScalingPolicyConfiguration.metricAggregationType Optional string stepScalingPolicyConfiguration.minAdjustmentMagnitude Optional integer stepScalingPolicyConfiguration.stepAdjustments Optional array stepScalingPolicyConfiguration.stepAdjustments.[] Required object Represents a step adjustment for a StepScalingPolicyConfiguration (https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html). Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. For the following examples, suppose that you have an alarm with a breach threshold of 50: * To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10. * To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0. There are a few rules for the step adjustments for your step policy: * The ranges of your step adjustments can't overlap or have a gap. * At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound. * At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound. * The upper and lower bound can't be null in the same step adjustment. stepScalingPolicyConfiguration.stepAdjustments.[].metricIntervalUpperBound Optional number stepScalingPolicyConfiguration.stepAdjustments.[].scalingAdjustment Optional integer targetTrackingScalingPolicyConfiguration Optional object A target tracking scaling policy. Includes support for predefined or customized metrics. This parameter is required if you are creating a policy and the policy type is TargetTrackingScaling. targetTrackingScalingPolicyConfiguration.customizedMetricSpecification Optional object Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling. For information about the available metrics for a service, see AWS Services That Publish CloudWatch Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide. To create your customized metric specification: * Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see Publish Custom Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the Amazon CloudWatch User Guide. * Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. For more information about CloudWatch, see Amazon CloudWatch Concepts (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html). targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions Optional array targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions.[] Required object Describes the dimension names and values associated with a metric. targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.dimensions.[].value Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.metricName Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.namespace Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.statistic Optional string targetTrackingScalingPolicyConfiguration.customizedMetricSpecification.unit Optional string targetTrackingScalingPolicyConfiguration.disableScaleIn Optional boolean targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification Optional object Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling. Only the AWS services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in Building dashboards with CloudWatch (https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html) in the Application Auto Scaling User Guide. targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.predefinedMetricType Optional string targetTrackingScalingPolicyConfiguration.predefinedMetricSpecification.resourceLabel Optional string targetTrackingScalingPolicyConfiguration.scaleInCooldown Optional integer targetTrackingScalingPolicyConfiguration.scaleOutCooldown Optional integer targetTrackingScalingPolicyConfiguration.targetValue Optional number","title":"Spec"},{"location":"reference/AutoScaling/v1alpha1/ScalingPolicy/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string alarms : - alarmARN : string alarmName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. alarms Optional array The CloudWatch alarms created for the target tracking scaling policy. alarms.[] Required object Represents a CloudWatch alarm associated with a scaling policy. alarms.[].alarmName Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/DynamoDB/v1alpha1/Backup/","text":"Backup \u00b6 dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#Backup Metadata \u00b6 Property Value Scope Namespaced Kind Backup ListKind BackupList Plural backups Singular backup Spec \u00b6 backupName : string tableName : string Field Description backupName Required string Specified name for the backup. tableName Required string The name of the table. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string backupCreationDateTime : string backupExpiryDateTime : string backupSizeBytes : integer backupStatus : string backupType : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. backupCreationDateTime Optional string Time at which the backup was created. This is the request time of the backup. backupExpiryDateTime Optional string Time at which the automatic on-demand backup created by DynamoDB will expire. This SYSTEM on-demand backup expires automatically 35 days after its creation. backupSizeBytes Optional integer Size of the backup in bytes. backupStatus Optional string Backup can be in one of the following states: CREATING, ACTIVE, DELETED. backupType Optional string BackupType: * USER - You create and manage these using the on-demand backup feature. * SYSTEM - If you delete a table with point-in-time recovery enabled, a SYSTEM backup is automatically created and is retained for 35 days (at no additional cost). System backups allow you to restore the deleted table to the state it was in just before the point of deletion. * AWS_BACKUP - On-demand backup created by you from AWS Backup service. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Backup"},{"location":"reference/DynamoDB/v1alpha1/Backup/#backup","text":"dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#Backup","title":"Backup"},{"location":"reference/DynamoDB/v1alpha1/Backup/#metadata","text":"Property Value Scope Namespaced Kind Backup ListKind BackupList Plural backups Singular backup","title":"Metadata"},{"location":"reference/DynamoDB/v1alpha1/Backup/#spec","text":"backupName : string tableName : string Field Description backupName Required string Specified name for the backup. tableName Required string The name of the table.","title":"Spec"},{"location":"reference/DynamoDB/v1alpha1/Backup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string backupCreationDateTime : string backupExpiryDateTime : string backupSizeBytes : integer backupStatus : string backupType : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. backupCreationDateTime Optional string Time at which the backup was created. This is the request time of the backup. backupExpiryDateTime Optional string Time at which the automatic on-demand backup created by DynamoDB will expire. This SYSTEM on-demand backup expires automatically 35 days after its creation. backupSizeBytes Optional integer Size of the backup in bytes. backupStatus Optional string Backup can be in one of the following states: CREATING, ACTIVE, DELETED. backupType Optional string BackupType: * USER - You create and manage these using the on-demand backup feature. * SYSTEM - If you delete a table with point-in-time recovery enabled, a SYSTEM backup is automatically created and is retained for 35 days (at no additional cost). System backups allow you to restore the deleted table to the state it was in just before the point of deletion. * AWS_BACKUP - On-demand backup created by you from AWS Backup service. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/DynamoDB/v1alpha1/GlobalTable/","text":"GlobalTable \u00b6 dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#GlobalTable Metadata \u00b6 Property Value Scope Namespaced Kind GlobalTable ListKind GlobalTableList Plural globaltables Singular globaltable Represents the properties of a global table. Spec \u00b6 globalTableName : string replicationGroup : - regionName : string Field Description globalTableName Required string The global table name. replicationGroup Required array The Regions where the global table needs to be created. replicationGroup.[] Required object Represents the properties of a replica. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDateTime : string globalTableStatus : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDateTime Optional string The creation time of the global table. globalTableStatus Optional string The current state of the global table: * CREATING - The global table is being created. * UPDATING - The global table is being updated. * DELETING - The global table is being deleted. * ACTIVE - The global table is ready for use.","title":"GlobalTable"},{"location":"reference/DynamoDB/v1alpha1/GlobalTable/#globaltable","text":"dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#GlobalTable","title":"GlobalTable"},{"location":"reference/DynamoDB/v1alpha1/GlobalTable/#metadata","text":"Property Value Scope Namespaced Kind GlobalTable ListKind GlobalTableList Plural globaltables Singular globaltable Represents the properties of a global table.","title":"Metadata"},{"location":"reference/DynamoDB/v1alpha1/GlobalTable/#spec","text":"globalTableName : string replicationGroup : - regionName : string Field Description globalTableName Required string The global table name. replicationGroup Required array The Regions where the global table needs to be created. replicationGroup.[] Required object Represents the properties of a replica.","title":"Spec"},{"location":"reference/DynamoDB/v1alpha1/GlobalTable/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDateTime : string globalTableStatus : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDateTime Optional string The creation time of the global table. globalTableStatus Optional string The current state of the global table: * CREATING - The global table is being created. * UPDATING - The global table is being updated. * DELETING - The global table is being deleted. * ACTIVE - The global table is ready for use.","title":"Status"},{"location":"reference/DynamoDB/v1alpha1/Table/","text":"Table \u00b6 dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#Table Metadata \u00b6 Property Value Scope Namespaced Kind Table ListKind TableList Plural tables Singular table Spec \u00b6 attributeDefinitions : - attributeName : string attributeType : string billingMode : string globalSecondaryIndexes : - indexName : string keySchema : - attributeName : string keyType : string projection : nonKeyAttributes : - string projectionType : string provisionedThroughput : readCapacityUnits : integer writeCapacityUnits : integer keySchema : - attributeName : string keyType : string localSecondaryIndexes : - indexName : string keySchema : - attributeName : string keyType : string projection : nonKeyAttributes : - string projectionType : string provisionedThroughput : readCapacityUnits : integer writeCapacityUnits : integer sseSpecification : enabled : boolean kmsMasterKeyID : string sseType : string streamSpecification : streamEnabled : boolean streamViewType : string tableName : string tags : - key : string value : string Field Description attributeDefinitions Required array An array of attributes that describe the key schema for the table and indexes. attributeDefinitions.[] Required object Represents an attribute for describing the key schema for the table and indexes. attributeDefinitions.[].attributeType Optional string billingMode Optional string Controls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later. * PROVISIONED - We recommend using PROVISIONED for predictable workloads. PROVISIONED sets the billing mode to Provisioned Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual). * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for unpredictable workloads. PAY_PER_REQUEST sets the billing mode to On-Demand Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand). globalSecondaryIndexes Optional array One or more global secondary indexes (the maximum is 20) to be created on the table. Each global secondary index in the array includes the following: * IndexName - The name of the global secondary index. Must be unique only for this table. * KeySchema - Specifies the key schema for the global secondary index. * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. * ProvisionedThroughput - The provisioned throughput settings for the global secondary index, consisting of read and write capacity units. globalSecondaryIndexes.[] Required object Represents the properties of a global secondary index. globalSecondaryIndexes.[].keySchema Optional array globalSecondaryIndexes.[].keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. globalSecondaryIndexes.[].keySchema.[].keyType Optional string globalSecondaryIndexes.[].projection Optional object Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. globalSecondaryIndexes.[].projection.nonKeyAttributes Optional array globalSecondaryIndexes.[].projection.nonKeyAttributes.[] Required string globalSecondaryIndexes.[].provisionedThroughput Optional object Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide. globalSecondaryIndexes.[].provisionedThroughput.readCapacityUnits Optional integer globalSecondaryIndexes.[].provisionedThroughput.writeCapacityUnits Optional integer keySchema Required array Specifies the attributes that make up the primary key for a table or an index. The attributes in KeySchema must also be defined in the AttributeDefinitions array. For more information, see Data Model (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html) in the Amazon DynamoDB Developer Guide. Each KeySchemaElement in the array is composed of: * AttributeName - The name of this key attribute. * KeyType - The role that the key attribute will assume: HASH - partition key RANGE - sort key The partition key of an item is also known as its hash attribute. The term \"hash attribute\" derives from the DynamoDB usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item is also known as its range attribute. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value. For a simple primary key (partition key), you must provide exactly one element with a KeyType of HASH. For a composite primary key (partition key and sort key), you must provide exactly two elements, in this order: The first element must have a KeyType of HASH, and the second element must have a KeyType of RANGE. For more information, see Working with Tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key) in the Amazon DynamoDB Developer Guide. keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. keySchema.[].keyType Optional string localSecondaryIndexes Optional array One or more local secondary indexes (the maximum is 5) to be created on the table. Each index is scoped to a given partition key value. There is a 10 GB size limit per partition key value; otherwise, the size of a local secondary index is unconstrained. Each local secondary index in the array includes the following: * IndexName - The name of the local secondary index. Must be unique only for this table. * KeySchema - Specifies the key schema for the local secondary index. The key schema must begin with the same partition key as the table. * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. localSecondaryIndexes.[] Required object Represents the properties of a local secondary index. localSecondaryIndexes.[].keySchema Optional array localSecondaryIndexes.[].keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. localSecondaryIndexes.[].keySchema.[].keyType Optional string localSecondaryIndexes.[].projection Optional object Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. localSecondaryIndexes.[].projection.nonKeyAttributes Optional array localSecondaryIndexes.[].projection.nonKeyAttributes.[] Required string provisionedThroughput Optional object Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. If you set BillingMode as PROVISIONED, you must specify this property. If you set BillingMode as PAY_PER_REQUEST, you cannot specify this property. For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide. provisionedThroughput.readCapacityUnits Optional integer provisionedThroughput.writeCapacityUnits Optional integer sseSpecification Optional object Represents the settings used to enable server-side encryption. sseSpecification.enabled Optional boolean sseSpecification.kmsMasterKeyID Optional string sseSpecification.sseType Optional string streamSpecification Optional object The settings for DynamoDB Streams on the table. These settings consist of: * StreamEnabled - Indicates whether DynamoDB Streams is to be enabled (true) or disabled (false). * StreamViewType - When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values for StreamViewType are: KEYS_ONLY - Only the key attributes of the modified item are written to the stream. NEW_IMAGE - The entire item, as it appears after it was modified, is written to the stream. OLD_IMAGE - The entire item, as it appeared before it was modified, is written to the stream. NEW_AND_OLD_IMAGES - Both the new and the old item images of the item are written to the stream. streamSpecification.streamEnabled Optional boolean streamSpecification.streamViewType Optional string tableName Required string The name of the table to create. tags Optional array A list of key-value pairs to label the table. For more information, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html). tags.[] Required object Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB table. AWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: in the Cost Allocation Report. You cannot backdate the application of a tag. For an overview on tagging DynamoDB resources, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html) in the Amazon DynamoDB Developer Guide. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string archivalSummary : archivalBackupARN : string archivalDateTime : string archivalReason : string billingModeSummary : billingMode : string lastUpdateToPayPerRequestDateTime : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDateTime : string globalTableVersion : string itemCount : integer latestStreamARN : string latestStreamLabel : string replicas : globalSecondaryIndexes : - indexName : string provisionedThroughputOverride : readCapacityUnits : integer kmsMasterKeyID : string provisionedThroughputOverride : readCapacityUnits : integer regionName : string replicaInaccessibleDateTime : string replicaStatus : string replicaStatusDescription : string replicaStatusPercentProgress : string restoreSummary : restoreDateTime : string restoreInProgress : boolean sourceBackupARN : string sourceTableARN : string sseDescription : inaccessibleEncryptionDateTime : string kmsMasterKeyARN : string sseType : string status : string tableID : string tableSizeBytes : integer tableStatus : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. archivalSummary Optional object Contains information about the table archive. archivalSummary.archivalBackupARN Optional string archivalSummary.archivalDateTime Optional string archivalSummary.archivalReason Optional string billingModeSummary Optional object Contains the details for the read/write capacity mode. billingModeSummary.billingMode Optional string billingModeSummary.lastUpdateToPayPerRequestDateTime Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDateTime Optional string The date and time when the table was created, in UNIX epoch time (http://www.epochconverter.com/) format. globalTableVersion Optional string Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html) in use, if the table is replicated across AWS Regions. itemCount Optional integer The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. latestStreamARN Optional string The Amazon Resource Name (ARN) that uniquely identifies the latest stream for this table. latestStreamLabel Optional string A timestamp, in ISO 8601 format, for this stream. Note that LatestStreamLabel is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique: * AWS customer ID * Table name * StreamLabel replicas Optional array Represents replicas of the table. replicas.[] Required object Contains the details of the replica. replicas.[].globalSecondaryIndexes.[] Required object Represents the properties of a replica global secondary index. replicas.[].globalSecondaryIndexes.[].provisionedThroughputOverride Optional object Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings. replicas.[].globalSecondaryIndexes.[].provisionedThroughputOverride.readCapacityUnits Optional integer replicas.[].kmsMasterKeyID Optional string replicas.[].provisionedThroughputOverride Optional object Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings. replicas.[].provisionedThroughputOverride.readCapacityUnits Optional integer replicas.[].regionName Optional string replicas.[].replicaInaccessibleDateTime Optional string replicas.[].replicaStatus Optional string replicas.[].replicaStatusDescription Optional string replicas.[].replicaStatusPercentProgress Optional string restoreSummary Optional object Contains details for the restore. restoreSummary.restoreDateTime Optional string restoreSummary.restoreInProgress Optional boolean restoreSummary.sourceBackupARN Optional string restoreSummary.sourceTableARN Optional string sseDescription Optional object The description of the server-side encryption status on the specified table. sseDescription.inaccessibleEncryptionDateTime Optional string sseDescription.kmsMasterKeyARN Optional string sseDescription.sseType Optional string sseDescription.status Optional string tableID Optional string Unique identifier for the table for which the backup was created. tableSizeBytes Optional integer The total size of the specified table, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. tableStatus Optional string The current state of the table: * CREATING - The table is being created. * UPDATING - The table is being updated. * DELETING - The table is being deleted. * ACTIVE - The table is ready for use. * INACCESSIBLE_ENCRYPTION_CREDENTIALS - The AWS KMS key used to encrypt the table in inaccessible. Table operations may fail due to failure to use the AWS KMS key. DynamoDB will initiate the table archival process when a table's AWS KMS key remains inaccessible for more than seven days. * ARCHIVING - The table is being archived. Operations are not allowed until archival is complete. * ARCHIVED - The table has been archived. See the ArchivalReason for more information.","title":"Table"},{"location":"reference/DynamoDB/v1alpha1/Table/#table","text":"dynamodb.services.k8s.aws/v1alpha1 Type Link GoDoc dynamodb-controller/apis/v1alpha1#Table","title":"Table"},{"location":"reference/DynamoDB/v1alpha1/Table/#metadata","text":"Property Value Scope Namespaced Kind Table ListKind TableList Plural tables Singular table","title":"Metadata"},{"location":"reference/DynamoDB/v1alpha1/Table/#spec","text":"attributeDefinitions : - attributeName : string attributeType : string billingMode : string globalSecondaryIndexes : - indexName : string keySchema : - attributeName : string keyType : string projection : nonKeyAttributes : - string projectionType : string provisionedThroughput : readCapacityUnits : integer writeCapacityUnits : integer keySchema : - attributeName : string keyType : string localSecondaryIndexes : - indexName : string keySchema : - attributeName : string keyType : string projection : nonKeyAttributes : - string projectionType : string provisionedThroughput : readCapacityUnits : integer writeCapacityUnits : integer sseSpecification : enabled : boolean kmsMasterKeyID : string sseType : string streamSpecification : streamEnabled : boolean streamViewType : string tableName : string tags : - key : string value : string Field Description attributeDefinitions Required array An array of attributes that describe the key schema for the table and indexes. attributeDefinitions.[] Required object Represents an attribute for describing the key schema for the table and indexes. attributeDefinitions.[].attributeType Optional string billingMode Optional string Controls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later. * PROVISIONED - We recommend using PROVISIONED for predictable workloads. PROVISIONED sets the billing mode to Provisioned Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual). * PAY_PER_REQUEST - We recommend using PAY_PER_REQUEST for unpredictable workloads. PAY_PER_REQUEST sets the billing mode to On-Demand Mode (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand). globalSecondaryIndexes Optional array One or more global secondary indexes (the maximum is 20) to be created on the table. Each global secondary index in the array includes the following: * IndexName - The name of the global secondary index. Must be unique only for this table. * KeySchema - Specifies the key schema for the global secondary index. * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. * ProvisionedThroughput - The provisioned throughput settings for the global secondary index, consisting of read and write capacity units. globalSecondaryIndexes.[] Required object Represents the properties of a global secondary index. globalSecondaryIndexes.[].keySchema Optional array globalSecondaryIndexes.[].keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. globalSecondaryIndexes.[].keySchema.[].keyType Optional string globalSecondaryIndexes.[].projection Optional object Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. globalSecondaryIndexes.[].projection.nonKeyAttributes Optional array globalSecondaryIndexes.[].projection.nonKeyAttributes.[] Required string globalSecondaryIndexes.[].provisionedThroughput Optional object Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide. globalSecondaryIndexes.[].provisionedThroughput.readCapacityUnits Optional integer globalSecondaryIndexes.[].provisionedThroughput.writeCapacityUnits Optional integer keySchema Required array Specifies the attributes that make up the primary key for a table or an index. The attributes in KeySchema must also be defined in the AttributeDefinitions array. For more information, see Data Model (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html) in the Amazon DynamoDB Developer Guide. Each KeySchemaElement in the array is composed of: * AttributeName - The name of this key attribute. * KeyType - The role that the key attribute will assume: HASH - partition key RANGE - sort key The partition key of an item is also known as its hash attribute. The term \"hash attribute\" derives from the DynamoDB usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values. The sort key of an item is also known as its range attribute. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value. For a simple primary key (partition key), you must provide exactly one element with a KeyType of HASH. For a composite primary key (partition key and sort key), you must provide exactly two elements, in this order: The first element must have a KeyType of HASH, and the second element must have a KeyType of RANGE. For more information, see Working with Tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key) in the Amazon DynamoDB Developer Guide. keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. keySchema.[].keyType Optional string localSecondaryIndexes Optional array One or more local secondary indexes (the maximum is 5) to be created on the table. Each index is scoped to a given partition key value. There is a 10 GB size limit per partition key value; otherwise, the size of a local secondary index is unconstrained. Each local secondary index in the array includes the following: * IndexName - The name of the local secondary index. Must be unique only for this table. * KeySchema - Specifies the key schema for the local secondary index. The key schema must begin with the same partition key as the table. * Projection - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of: ProjectionType - One of the following: KEYS_ONLY - Only the index and primary keys are projected into the index. INCLUDE - Only the specified table attributes are projected into the index. The list of projected attributes is in NonKeyAttributes. ALL - All of the table attributes are projected into the index. NonKeyAttributes - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in NonKeyAttributes, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total. localSecondaryIndexes.[] Required object Represents the properties of a local secondary index. localSecondaryIndexes.[].keySchema Optional array localSecondaryIndexes.[].keySchema.[] Required object Represents a single element of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index. A KeySchemaElement represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one KeySchemaElement (for the partition key). A composite primary key would require one KeySchemaElement for the partition key, and another KeySchemaElement for the sort key. A KeySchemaElement must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map. localSecondaryIndexes.[].keySchema.[].keyType Optional string localSecondaryIndexes.[].projection Optional object Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. localSecondaryIndexes.[].projection.nonKeyAttributes Optional array localSecondaryIndexes.[].projection.nonKeyAttributes.[] Required string provisionedThroughput Optional object Represents the provisioned throughput settings for a specified table or index. The settings can be modified using the UpdateTable operation. If you set BillingMode as PROVISIONED, you must specify this property. If you set BillingMode as PAY_PER_REQUEST, you cannot specify this property. For current minimum and maximum provisioned throughput values, see Service, Account, and Table Quotas (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide. provisionedThroughput.readCapacityUnits Optional integer provisionedThroughput.writeCapacityUnits Optional integer sseSpecification Optional object Represents the settings used to enable server-side encryption. sseSpecification.enabled Optional boolean sseSpecification.kmsMasterKeyID Optional string sseSpecification.sseType Optional string streamSpecification Optional object The settings for DynamoDB Streams on the table. These settings consist of: * StreamEnabled - Indicates whether DynamoDB Streams is to be enabled (true) or disabled (false). * StreamViewType - When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values for StreamViewType are: KEYS_ONLY - Only the key attributes of the modified item are written to the stream. NEW_IMAGE - The entire item, as it appears after it was modified, is written to the stream. OLD_IMAGE - The entire item, as it appeared before it was modified, is written to the stream. NEW_AND_OLD_IMAGES - Both the new and the old item images of the item are written to the stream. streamSpecification.streamEnabled Optional boolean streamSpecification.streamViewType Optional string tableName Required string The name of the table to create. tags Optional array A list of key-value pairs to label the table. For more information, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html). tags.[] Required object Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB table. AWS-assigned tag names and values are automatically assigned the aws: prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix user: in the Cost Allocation Report. You cannot backdate the application of a tag. For an overview on tagging DynamoDB resources, see Tagging for DynamoDB (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html) in the Amazon DynamoDB Developer Guide. tags.[].value Optional string","title":"Spec"},{"location":"reference/DynamoDB/v1alpha1/Table/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string archivalSummary : archivalBackupARN : string archivalDateTime : string archivalReason : string billingModeSummary : billingMode : string lastUpdateToPayPerRequestDateTime : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDateTime : string globalTableVersion : string itemCount : integer latestStreamARN : string latestStreamLabel : string replicas : globalSecondaryIndexes : - indexName : string provisionedThroughputOverride : readCapacityUnits : integer kmsMasterKeyID : string provisionedThroughputOverride : readCapacityUnits : integer regionName : string replicaInaccessibleDateTime : string replicaStatus : string replicaStatusDescription : string replicaStatusPercentProgress : string restoreSummary : restoreDateTime : string restoreInProgress : boolean sourceBackupARN : string sourceTableARN : string sseDescription : inaccessibleEncryptionDateTime : string kmsMasterKeyARN : string sseType : string status : string tableID : string tableSizeBytes : integer tableStatus : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. archivalSummary Optional object Contains information about the table archive. archivalSummary.archivalBackupARN Optional string archivalSummary.archivalDateTime Optional string archivalSummary.archivalReason Optional string billingModeSummary Optional object Contains the details for the read/write capacity mode. billingModeSummary.billingMode Optional string billingModeSummary.lastUpdateToPayPerRequestDateTime Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDateTime Optional string The date and time when the table was created, in UNIX epoch time (http://www.epochconverter.com/) format. globalTableVersion Optional string Represents the version of global tables (https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html) in use, if the table is replicated across AWS Regions. itemCount Optional integer The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. latestStreamARN Optional string The Amazon Resource Name (ARN) that uniquely identifies the latest stream for this table. latestStreamLabel Optional string A timestamp, in ISO 8601 format, for this stream. Note that LatestStreamLabel is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique: * AWS customer ID * Table name * StreamLabel replicas Optional array Represents replicas of the table. replicas.[] Required object Contains the details of the replica. replicas.[].globalSecondaryIndexes.[] Required object Represents the properties of a replica global secondary index. replicas.[].globalSecondaryIndexes.[].provisionedThroughputOverride Optional object Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings. replicas.[].globalSecondaryIndexes.[].provisionedThroughputOverride.readCapacityUnits Optional integer replicas.[].kmsMasterKeyID Optional string replicas.[].provisionedThroughputOverride Optional object Replica-specific provisioned throughput settings. If not specified, uses the source table's provisioned throughput settings. replicas.[].provisionedThroughputOverride.readCapacityUnits Optional integer replicas.[].regionName Optional string replicas.[].replicaInaccessibleDateTime Optional string replicas.[].replicaStatus Optional string replicas.[].replicaStatusDescription Optional string replicas.[].replicaStatusPercentProgress Optional string restoreSummary Optional object Contains details for the restore. restoreSummary.restoreDateTime Optional string restoreSummary.restoreInProgress Optional boolean restoreSummary.sourceBackupARN Optional string restoreSummary.sourceTableARN Optional string sseDescription Optional object The description of the server-side encryption status on the specified table. sseDescription.inaccessibleEncryptionDateTime Optional string sseDescription.kmsMasterKeyARN Optional string sseDescription.sseType Optional string sseDescription.status Optional string tableID Optional string Unique identifier for the table for which the backup was created. tableSizeBytes Optional integer The total size of the specified table, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. tableStatus Optional string The current state of the table: * CREATING - The table is being created. * UPDATING - The table is being updated. * DELETING - The table is being deleted. * ACTIVE - The table is ready for use. * INACCESSIBLE_ENCRYPTION_CREDENTIALS - The AWS KMS key used to encrypt the table in inaccessible. Table operations may fail due to failure to use the AWS KMS key. DynamoDB will initiate the table archival process when a table's AWS KMS key remains inaccessible for more than seven days. * ARCHIVING - The table is being archived. Operations are not allowed until archival is complete. * ARCHIVED - The table has been archived. See the ArchivalReason for more information.","title":"Status"},{"location":"reference/EC2/v1alpha1/VPC/","text":"VPC \u00b6 ec2.services.k8s.aws/v1alpha1 Type Link GoDoc ec2-controller/apis/v1alpha1#VPC Metadata \u00b6 Property Value Scope Namespaced Kind VPC ListKind VPCList Plural vpcs Singular vpc Describes a VPC. Spec \u00b6 amazonProvidedIPv6CIDRBlock : boolean cidrBlock : string instanceTenancy : string ipv6CIDRBlock : string ipv6CIDRBlockNetworkBorderGroup : string ipv6Pool : string tagSpecifications : - resourceType : string tags : - key : string value : string Field Description amazonProvidedIPv6CIDRBlock Optional boolean Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. cidrBlock Required string The IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18. instanceTenancy Optional string The tenancy options for instances launched into the VPC. For default, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For dedicated, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of dedicated or host into a dedicated tenancy VPC. Important: The host value cannot be used with this parameter. Use the default or dedicated values only. Default: default ipv6CIDRBlock Optional string The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request. To let Amazon choose the IPv6 CIDR block for you, omit this parameter. ipv6CIDRBlockNetworkBorderGroup Optional string The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location. You must set AmazonProvidedIpv6CidrBlock to true to use this parameter. ipv6Pool Optional string The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block. tagSpecifications Optional array The tags to assign to the VPC. tagSpecifications.[] Required object The tags to apply to a resource when the resource is being created. tagSpecifications.[].tags Optional array tagSpecifications.[].tags.[] Required object Describes a tag. tagSpecifications.[].tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string cidrBlockAssociationSet : - associationID : string cidrBlock : string cidrBlockState : state : string statusMessage : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string dhcpOptionsID : string ipv6CIDRBlockAssociationSet : - associationID : string ipv6CIDRBlock : string ipv6CIDRBlockState : state : string statusMessage : string ipv6Pool : string networkBorderGroup : string isDefault : boolean ownerID : string state : string tags : - key : string value : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. cidrBlockAssociationSet Optional array Information about the IPv4 CIDR blocks associated with the VPC. cidrBlockAssociationSet.[] Required object Describes an IPv4 CIDR block associated with a VPC. cidrBlockAssociationSet.[].cidrBlock Optional string cidrBlockAssociationSet.[].cidrBlockState Optional object Describes the state of a CIDR block. cidrBlockAssociationSet.[].cidrBlockState.state Optional string cidrBlockAssociationSet.[].cidrBlockState.statusMessage Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition dhcpOptionsID Optional string The ID of the set of DHCP options you've associated with the VPC. ipv6CIDRBlockAssociationSet Optional array Information about the IPv6 CIDR blocks associated with the VPC. ipv6CIDRBlockAssociationSet.[] Required object Describes an IPv6 CIDR block associated with a VPC. ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlock Optional string ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState Optional object Describes the state of a CIDR block. ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState.state Optional string ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState.statusMessage Optional string ipv6CIDRBlockAssociationSet.[].ipv6Pool Optional string ipv6CIDRBlockAssociationSet.[].networkBorderGroup Optional string isDefault Optional boolean Indicates whether the VPC is the default VPC. ownerID Optional string The ID of the AWS account that owns the VPC. state Optional string The current state of the VPC. tags Optional array Any tags assigned to the VPC. tags.[] Required object Describes a tag. tags.[].value Optional string vpcID Optional string The ID of the VPC.","title":"VPC"},{"location":"reference/EC2/v1alpha1/VPC/#vpc","text":"ec2.services.k8s.aws/v1alpha1 Type Link GoDoc ec2-controller/apis/v1alpha1#VPC","title":"VPC"},{"location":"reference/EC2/v1alpha1/VPC/#metadata","text":"Property Value Scope Namespaced Kind VPC ListKind VPCList Plural vpcs Singular vpc Describes a VPC.","title":"Metadata"},{"location":"reference/EC2/v1alpha1/VPC/#spec","text":"amazonProvidedIPv6CIDRBlock : boolean cidrBlock : string instanceTenancy : string ipv6CIDRBlock : string ipv6CIDRBlockNetworkBorderGroup : string ipv6Pool : string tagSpecifications : - resourceType : string tags : - key : string value : string Field Description amazonProvidedIPv6CIDRBlock Optional boolean Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block. cidrBlock Required string The IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18. instanceTenancy Optional string The tenancy options for instances launched into the VPC. For default, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For dedicated, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of dedicated or host into a dedicated tenancy VPC. Important: The host value cannot be used with this parameter. Use the default or dedicated values only. Default: default ipv6CIDRBlock Optional string The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request. To let Amazon choose the IPv6 CIDR block for you, omit this parameter. ipv6CIDRBlockNetworkBorderGroup Optional string The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location. You must set AmazonProvidedIpv6CidrBlock to true to use this parameter. ipv6Pool Optional string The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block. tagSpecifications Optional array The tags to assign to the VPC. tagSpecifications.[] Required object The tags to apply to a resource when the resource is being created. tagSpecifications.[].tags Optional array tagSpecifications.[].tags.[] Required object Describes a tag. tagSpecifications.[].tags.[].value Optional string","title":"Spec"},{"location":"reference/EC2/v1alpha1/VPC/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string cidrBlockAssociationSet : - associationID : string cidrBlock : string cidrBlockState : state : string statusMessage : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string dhcpOptionsID : string ipv6CIDRBlockAssociationSet : - associationID : string ipv6CIDRBlock : string ipv6CIDRBlockState : state : string statusMessage : string ipv6Pool : string networkBorderGroup : string isDefault : boolean ownerID : string state : string tags : - key : string value : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. cidrBlockAssociationSet Optional array Information about the IPv4 CIDR blocks associated with the VPC. cidrBlockAssociationSet.[] Required object Describes an IPv4 CIDR block associated with a VPC. cidrBlockAssociationSet.[].cidrBlock Optional string cidrBlockAssociationSet.[].cidrBlockState Optional object Describes the state of a CIDR block. cidrBlockAssociationSet.[].cidrBlockState.state Optional string cidrBlockAssociationSet.[].cidrBlockState.statusMessage Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition dhcpOptionsID Optional string The ID of the set of DHCP options you've associated with the VPC. ipv6CIDRBlockAssociationSet Optional array Information about the IPv6 CIDR blocks associated with the VPC. ipv6CIDRBlockAssociationSet.[] Required object Describes an IPv6 CIDR block associated with a VPC. ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlock Optional string ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState Optional object Describes the state of a CIDR block. ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState.state Optional string ipv6CIDRBlockAssociationSet.[].ipv6CIDRBlockState.statusMessage Optional string ipv6CIDRBlockAssociationSet.[].ipv6Pool Optional string ipv6CIDRBlockAssociationSet.[].networkBorderGroup Optional string isDefault Optional boolean Indicates whether the VPC is the default VPC. ownerID Optional string The ID of the AWS account that owns the VPC. state Optional string The current state of the VPC. tags Optional array Any tags assigned to the VPC. tags.[] Required object Describes a tag. tags.[].value Optional string vpcID Optional string The ID of the VPC.","title":"Status"},{"location":"reference/ECR/v1alpha1/Repository/","text":"Repository \u00b6 ecr.services.k8s.aws/v1alpha1 Type Link GoDoc ecr-controller/apis/v1alpha1#Repository Metadata \u00b6 Property Value Scope Namespaced Kind Repository ListKind RepositoryList Plural repositories Singular repository An object representing a repository. Spec \u00b6 encryptionConfiguration : encryptionType : string kmsKey : string imageScanningConfiguration : scanOnPush : boolean imageTagMutability : string name : string tags : - key : string value : string Field Description encryptionConfiguration Optional object The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest. encryptionConfiguration.encryptionType Optional string encryptionConfiguration.kmsKey Optional string imageScanningConfiguration Optional object The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository. imageScanningConfiguration.scanOnPush Optional boolean imageTagMutability Optional string The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten. name Required string The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). tags Optional array The metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters. tags.[] Required object The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdAt : string registryID : string repositoryURI : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdAt Optional string The date and time, in JavaScript date format, when the repository was created. registryID Optional string The AWS account ID associated with the registry that contains the repository. repositoryURI Optional string The URI for the repository. You can use this URI for container image push and pull operations.","title":"Repository"},{"location":"reference/ECR/v1alpha1/Repository/#repository","text":"ecr.services.k8s.aws/v1alpha1 Type Link GoDoc ecr-controller/apis/v1alpha1#Repository","title":"Repository"},{"location":"reference/ECR/v1alpha1/Repository/#metadata","text":"Property Value Scope Namespaced Kind Repository ListKind RepositoryList Plural repositories Singular repository An object representing a repository.","title":"Metadata"},{"location":"reference/ECR/v1alpha1/Repository/#spec","text":"encryptionConfiguration : encryptionType : string kmsKey : string imageScanningConfiguration : scanOnPush : boolean imageTagMutability : string name : string tags : - key : string value : string Field Description encryptionConfiguration Optional object The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest. encryptionConfiguration.encryptionType Optional string encryptionConfiguration.kmsKey Optional string imageScanningConfiguration Optional object The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository. imageScanningConfiguration.scanOnPush Optional boolean imageTagMutability Optional string The tag mutability setting for the repository. If this parameter is omitted, the default setting of MUTABLE will be used which will allow image tags to be overwritten. If IMMUTABLE is specified, all image tags within the repository will be immutable which will prevent them from being overwritten. name Required string The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). tags Optional array The metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters. tags.[] Required object The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters. tags.[].value Optional string","title":"Spec"},{"location":"reference/ECR/v1alpha1/Repository/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string createdAt : string registryID : string repositoryURI : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition createdAt Optional string The date and time, in JavaScript date format, when the repository was created. registryID Optional string The AWS account ID associated with the registry that contains the repository. repositoryURI Optional string The URI for the repository. You can use this URI for container image push and pull operations.","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/CacheParameterGroup/","text":"CacheParameterGroup \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#CacheParameterGroup Metadata \u00b6 Property Value Scope Namespaced Kind CacheParameterGroup ListKind CacheParameterGroupList Plural cacheparametergroups Singular cacheparametergroup Represents the output of a CreateCacheParameterGroup operation. Spec \u00b6 cacheParameterGroupFamily : string cacheParameterGroupName : string description : string parameterNameValues : - parameterName : string parameterValue : string Field Description cacheParameterGroupFamily Required string The name of the cache parameter group family that the cache parameter group can be used with. Valid values are: memcached1.4 cacheParameterGroupName Required string A user-specified name for the cache parameter group. description Required string A user-specified description for the cache parameter group. parameterNameValues Optional array An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request. parameterNameValues.[] Required object Describes a name-value pair that is used to update the value of a parameter. parameterNameValues.[].parameterValue Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string events : - date : string message : string sourceIdentifier : string isGlobal : boolean parameters : - allowedValues : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string isGlobal Optional boolean Indicates whether the parameter group is associated with a Global datastore parameters Optional array A list of Parameter instances. parameters.[] Required object Describes an individual setting that controls some aspect of ElastiCache behavior. parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string","title":"CacheParameterGroup"},{"location":"reference/ElastiCache/v1alpha1/CacheParameterGroup/#cacheparametergroup","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#CacheParameterGroup","title":"CacheParameterGroup"},{"location":"reference/ElastiCache/v1alpha1/CacheParameterGroup/#metadata","text":"Property Value Scope Namespaced Kind CacheParameterGroup ListKind CacheParameterGroupList Plural cacheparametergroups Singular cacheparametergroup Represents the output of a CreateCacheParameterGroup operation.","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/CacheParameterGroup/#spec","text":"cacheParameterGroupFamily : string cacheParameterGroupName : string description : string parameterNameValues : - parameterName : string parameterValue : string Field Description cacheParameterGroupFamily Required string The name of the cache parameter group family that the cache parameter group can be used with. Valid values are: memcached1.4 cacheParameterGroupName Required string A user-specified name for the cache parameter group. description Required string A user-specified description for the cache parameter group. parameterNameValues Optional array An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request. parameterNameValues.[] Required object Describes a name-value pair that is used to update the value of a parameter. parameterNameValues.[].parameterValue Optional string","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/CacheParameterGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string events : - date : string message : string sourceIdentifier : string isGlobal : boolean parameters : - allowedValues : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string isGlobal Optional boolean Indicates whether the parameter group is associated with a Global datastore parameters Optional array A list of Parameter instances. parameters.[] Required object Describes an individual setting that controls some aspect of ElastiCache behavior. parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/CacheSubnetGroup/","text":"CacheSubnetGroup \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#CacheSubnetGroup Metadata \u00b6 Property Value Scope Namespaced Kind CacheSubnetGroup ListKind CacheSubnetGroupList Plural cachesubnetgroups Singular cachesubnetgroup Represents the output of one of the following operations: * CreateCacheSubnetGroup * ModifyCacheSubnetGroup Spec \u00b6 cacheSubnetGroupDescription : string cacheSubnetGroupName : string subnetIDs : - string Field Description cacheSubnetGroupDescription Required string A description for the cache subnet group. cacheSubnetGroupName Required string A name for the cache subnet group. This value is stored as a lowercase string. Constraints: Must contain no more than 255 alphanumeric characters or hyphens. Example: mysubnetgroup subnetIDs Required array A list of VPC subnet IDs for the cache subnet group. subnetIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string events : - date : string message : string sourceIdentifier : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : subnetOutpostARN : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string subnets Optional array A list of subnets associated with the cache subnet group. subnets.[] Required object Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache. subnets.[].subnetAvailabilityZone.name Optional string subnets.[].subnetIdentifier Optional string subnets.[].subnetOutpost Optional object The ID of the outpost subnet. subnets.[].subnetOutpost.subnetOutpostARN Optional string vpcID Optional string The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.","title":"CacheSubnetGroup"},{"location":"reference/ElastiCache/v1alpha1/CacheSubnetGroup/#cachesubnetgroup","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#CacheSubnetGroup","title":"CacheSubnetGroup"},{"location":"reference/ElastiCache/v1alpha1/CacheSubnetGroup/#metadata","text":"Property Value Scope Namespaced Kind CacheSubnetGroup ListKind CacheSubnetGroupList Plural cachesubnetgroups Singular cachesubnetgroup Represents the output of one of the following operations: * CreateCacheSubnetGroup * ModifyCacheSubnetGroup","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/CacheSubnetGroup/#spec","text":"cacheSubnetGroupDescription : string cacheSubnetGroupName : string subnetIDs : - string Field Description cacheSubnetGroupDescription Required string A description for the cache subnet group. cacheSubnetGroupName Required string A name for the cache subnet group. This value is stored as a lowercase string. Constraints: Must contain no more than 255 alphanumeric characters or hyphens. Example: mysubnetgroup subnetIDs Required array A list of VPC subnet IDs for the cache subnet group. subnetIDs.[] Required string","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/CacheSubnetGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string events : - date : string message : string sourceIdentifier : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : subnetOutpostARN : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string subnets Optional array A list of subnets associated with the cache subnet group. subnets.[] Required object Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache. subnets.[].subnetAvailabilityZone.name Optional string subnets.[].subnetIdentifier Optional string subnets.[].subnetOutpost Optional object The ID of the outpost subnet. subnets.[].subnetOutpost.subnetOutpostARN Optional string vpcID Optional string The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/ReplicationGroup/","text":"ReplicationGroup \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#ReplicationGroup Metadata \u00b6 Property Value Scope Namespaced Kind ReplicationGroup ListKind ReplicationGroupList Plural replicationgroups Singular replicationgroup Contains all of the attributes of a specific Redis replication group. Spec \u00b6 atRestEncryptionEnabled : boolean authToken : key : string name : string namespace : string automaticFailoverEnabled : boolean cacheNodeType : string cacheParameterGroupName : string cacheSecurityGroupNames : - string cacheSubnetGroupName : string engine : string engineVersion : string kmsKeyID : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string enabled : boolean logFormat : string logType : string multiAZEnabled : boolean nodeGroupConfiguration : - nodeGroupID : string primaryAvailabilityZone : string primaryOutpostARN : string replicaAvailabilityZones : - string replicaCount : integer replicaOutpostARNs : - string slots : string notificationTopicARN : string numNodeGroups : integer port : integer preferredCacheClusterAZs : - string preferredMaintenanceWindow : string primaryClusterID : string replicasPerNodeGroup : integer replicationGroupDescription : string replicationGroupID : string securityGroupIDs : - string snapshotARNs : - string snapshotName : string snapshotRetentionLimit : integer snapshotWindow : string transitEncryptionEnabled : boolean userGroupIDs : - string Field Description atRestEncryptionEnabled Optional boolean A flag that enables encryption at rest when set to true. You cannot modify the value of AtRestEncryptionEnabled after the replication group is created. To enable encryption at rest on a replication group you must set AtRestEncryptionEnabled to true when you create the replication group. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false authToken Optional object Reserved parameter. The password used to access a password protected server. AuthToken can be specified only on replication groups where TransitEncryptionEnabled is true. For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup. Password constraints: * Must be only printable ASCII characters. * Must be at least 16 characters and no more than 128 characters in length. * The only permitted printable special characters are !, &, #, $, ^, <, >, and -. Other printable special characters cannot be used in the AUTH token. For more information, see AUTH password (http://redis.io/commands/AUTH) at http://redis.io/commands/AUTH. authToken.key Required string Key is the key within the secret authToken.name Optional string Name is unique within a namespace to reference a secret resource. authToken.namespace Optional string Namespace defines the space within which the secret name must be unique. automaticFailoverEnabled Optional boolean Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails. AutomaticFailoverEnabled must be enabled for Redis (cluster mode enabled) replication groups. Default: false cacheNodeType Optional string The compute and memory capacity of the nodes in the node group (shard). The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts. * General purpose: Current generation: M6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.m6g.large, cache.m6g.xlarge, cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge, cache.m6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types: cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous generation: (not recommended) T1 node types: cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large, cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge, cache.m3.2xlarge * Compute optimized: Previous generation: (not recommended) C1 node types: cache.c1.xlarge * Memory optimized: Current generation: R6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.r6g.large, cache.r6g.xlarge, cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge, cache.r6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge, cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types: cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge, cache.r4.16xlarge Previous generation: (not recommended) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge, cache.r3.8xlarge Additional node type info * All current generation instance types are created in Amazon VPC by default. * Redis append-only files (AOF) are not supported for T1 or T2 instances. * Redis Multi-AZ with automatic failover is not supported on T1 instances. * Redis configuration variables appendonly and appendfsync are not supported on Redis version 2.8.22 and later. cacheParameterGroupName Optional string The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. * To create a Redis (cluster mode disabled) replication group, use CacheParameterGroupName=default.redis3.2. * To create a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on. cacheSecurityGroupNames Optional array A list of cache security group names to associate with this replication group. cacheSecurityGroupNames.[] Required string engine Optional string The name of the cache engine to be used for the clusters in this replication group. Must be Redis. engineVersion Optional string The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation. Important: You can upgrade to a newer engine version (see Selecting a Cache Engine and Version (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)) in the ElastiCache User Guide, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. kmsKeyID Optional string The ID of the KMS key used to encrypt the disk in the cluster. logDeliveryConfigurations Optional array Specifies the destination, format and type of the logs. logDeliveryConfigurations.[] Required object Specifies the destination, format and type of the logs. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string logDeliveryConfigurations.[].destinationType Optional string logDeliveryConfigurations.[].enabled Optional boolean logDeliveryConfigurations.[].logFormat Optional string logDeliveryConfigurations.[].logType Optional string multiAZEnabled Optional boolean A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see Minimizing Downtime: Multi-AZ (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html). nodeGroupConfiguration Optional array A list of node group (shard) configuration options. Each node group (shard) configuration has the following members: PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount, and Slots. If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, it is required when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each node group (shard) using this parameter because you must specify the slots for each node group. nodeGroupConfiguration.[] Required object Node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount. nodeGroupConfiguration.[].primaryAvailabilityZone Optional string nodeGroupConfiguration.[].primaryOutpostARN Optional string nodeGroupConfiguration.[].replicaAvailabilityZones Optional array nodeGroupConfiguration.[].replicaAvailabilityZones.[] Required string nodeGroupConfiguration.[].replicaOutpostARNs Optional array nodeGroupConfiguration.[].replicaOutpostARNs.[] Required string notificationTopicARN Optional string The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent. The Amazon SNS topic owner must be the same as the cluster owner. numNodeGroups Optional integer An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1. Default: 1 port Optional integer The port number on which each member of the replication group accepts connections. preferredCacheClusterAZs Optional array A list of EC2 Availability Zones in which the replication group's clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list. This parameter is not used if there is more than one node group (shard). You should use NodeGroupConfiguration instead. If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of NumCacheClusters. Default: system chosen Availability Zones. preferredCacheClusterAZs.[] Required string primaryClusterID Optional string The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of available. This parameter is not required if NumCacheClusters, NumNodeGroups, or ReplicasPerNodeGroup is specified. replicasPerNodeGroup Optional integer An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5. replicationGroupDescription Required string A user-created description for the replication group. replicationGroupID Required string The replication group identifier. This parameter is stored as a lowercase string. Constraints: * A name must contain from 1 to 40 alphanumeric characters or hyphens. * The first character must be a letter. * A name cannot end with a hyphen or contain two consecutive hyphens. securityGroupIDs Optional array One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC). securityGroupIDs.[] Required string snapshotARNs.[] Required string snapshotRetentionLimit Optional integer The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted. Default: 0 (i.e., automatic backups are disabled for this cluster). snapshotWindow Optional string The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). Example: 05:00-09:00 If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range. transitEncryptionEnabled Optional boolean A flag that enables in-transit encryption when set to true. You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster. This parameter is valid only if the Engine parameter is redis, the EngineVersion parameter is 3.2.6, 4.x or later, and the cluster is being created in an Amazon VPC. If you enable in-transit encryption, you must also specify a value for CacheSubnetGroup. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup. userGroupIDs Optional array The user group to associate with the replication group. userGroupIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string allowedScaleDownModifications : - string allowedScaleUpModifications : - string authTokenEnabled : boolean authTokenLastModifiedDate : string automaticFailover : string clusterEnabled : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string configurationEndpoint : address : string port : integer description : string events : - date : string message : string sourceIdentifier : string globalReplicationGroupInfo : globalReplicationGroupID : string globalReplicationGroupMemberRole : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string logFormat : string logType : string message : string status : string memberClusters : - string memberClustersOutpostARNs : - string multiAZ : string nodeGroups : - nodeGroupID : string nodeGroupMembers : - cacheClusterID : string cacheNodeID : string currentRole : string preferredAvailabilityZone : string preferredOutpostARN : string readEndpoint : address : string port : integer primaryEndpoint : address : string port : integer readerEndpoint : address : string port : integer slots : string status : string pendingModifiedValues : authTokenStatus : string automaticFailoverStatus : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string logFormat : string logType : string primaryClusterID : string resharding : slotMigration : progressPercentage : number userGroups : userGroupIDsToAdd : - string userGroupIDsToRemove : - string snapshottingClusterID : string status : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. allowedScaleDownModifications Optional array A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group. When scaling down a Redis cluster or replication group using ModifyCacheCluster or ModifyReplicationGroup, use a value from this list for the CacheNodeType parameter. allowedScaleDownModifications.[] Required string allowedScaleUpModifications.[] Required string authTokenLastModifiedDate Optional string The date the auth token was last modified automaticFailover Optional string Indicates the status of automatic failover for this Redis replication group. clusterEnabled Optional boolean A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups). Valid values: true conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition configurationEndpoint Optional object The configuration endpoint for this replication group. Use the configuration endpoint to connect to this replication group. configurationEndpoint.address Optional string configurationEndpoint.port Optional integer description Optional string The user supplied description of the replication group. events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string globalReplicationGroupInfo Optional object The name of the Global datastore and role of this replication group in the Global datastore. globalReplicationGroupInfo.globalReplicationGroupID Optional string globalReplicationGroupInfo.globalReplicationGroupMemberRole Optional string logDeliveryConfigurations Optional array Returns the destination, format and type of the logs. logDeliveryConfigurations.[] Required object Returns the destination, format and type of the logs. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string logDeliveryConfigurations.[].destinationType Optional string logDeliveryConfigurations.[].logFormat Optional string logDeliveryConfigurations.[].logType Optional string logDeliveryConfigurations.[].message Optional string logDeliveryConfigurations.[].status Optional string memberClusters Optional array The names of all the cache clusters that are part of this replication group. memberClusters.[] Required string memberClustersOutpostARNs.[] Required string nodeGroups Optional array A list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard). nodeGroups.[] Required object Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes. nodeGroups.[].nodeGroupMembers Optional array nodeGroups.[].nodeGroupMembers.[] Required object Represents a single node within a node group (shard). nodeGroups.[].nodeGroupMembers.[].cacheNodeID Optional string nodeGroups.[].nodeGroupMembers.[].currentRole Optional string nodeGroups.[].nodeGroupMembers.[].preferredAvailabilityZone Optional string nodeGroups.[].nodeGroupMembers.[].preferredOutpostARN Optional string nodeGroups.[].nodeGroupMembers.[].readEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].nodeGroupMembers.[].readEndpoint.address Optional string nodeGroups.[].nodeGroupMembers.[].readEndpoint.port Optional integer nodeGroups.[].primaryEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].primaryEndpoint.address Optional string nodeGroups.[].primaryEndpoint.port Optional integer nodeGroups.[].readerEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].readerEndpoint.address Optional string nodeGroups.[].readerEndpoint.port Optional integer nodeGroups.[].slots Optional string nodeGroups.[].status Optional string pendingModifiedValues Optional object A group of settings to be applied to the replication group, either immediately or during the next maintenance window. pendingModifiedValues.authTokenStatus Optional string pendingModifiedValues.automaticFailoverStatus Optional string pendingModifiedValues.logDeliveryConfigurations Optional array pendingModifiedValues.logDeliveryConfigurations.[] Required object The log delivery configurations being modified pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string pendingModifiedValues.logDeliveryConfigurations.[].destinationType Optional string pendingModifiedValues.logDeliveryConfigurations.[].logFormat Optional string pendingModifiedValues.logDeliveryConfigurations.[].logType Optional string pendingModifiedValues.primaryClusterID Optional string pendingModifiedValues.resharding Optional object The status of an online resharding operation. pendingModifiedValues.resharding.slotMigration Optional object Represents the progress of an online resharding operation. pendingModifiedValues.resharding.slotMigration.progressPercentage Optional number pendingModifiedValues.userGroups Optional object The status of the user group update. pendingModifiedValues.userGroups.userGroupIDsToAdd Optional array pendingModifiedValues.userGroups.userGroupIDsToAdd.[] Required string pendingModifiedValues.userGroups.userGroupIDsToRemove.[] Required string status Optional string The current state of this replication group - creating, available, modifying, deleting, create-failed, snapshotting.","title":"ReplicationGroup"},{"location":"reference/ElastiCache/v1alpha1/ReplicationGroup/#replicationgroup","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#ReplicationGroup","title":"ReplicationGroup"},{"location":"reference/ElastiCache/v1alpha1/ReplicationGroup/#metadata","text":"Property Value Scope Namespaced Kind ReplicationGroup ListKind ReplicationGroupList Plural replicationgroups Singular replicationgroup Contains all of the attributes of a specific Redis replication group.","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/ReplicationGroup/#spec","text":"atRestEncryptionEnabled : boolean authToken : key : string name : string namespace : string automaticFailoverEnabled : boolean cacheNodeType : string cacheParameterGroupName : string cacheSecurityGroupNames : - string cacheSubnetGroupName : string engine : string engineVersion : string kmsKeyID : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string enabled : boolean logFormat : string logType : string multiAZEnabled : boolean nodeGroupConfiguration : - nodeGroupID : string primaryAvailabilityZone : string primaryOutpostARN : string replicaAvailabilityZones : - string replicaCount : integer replicaOutpostARNs : - string slots : string notificationTopicARN : string numNodeGroups : integer port : integer preferredCacheClusterAZs : - string preferredMaintenanceWindow : string primaryClusterID : string replicasPerNodeGroup : integer replicationGroupDescription : string replicationGroupID : string securityGroupIDs : - string snapshotARNs : - string snapshotName : string snapshotRetentionLimit : integer snapshotWindow : string transitEncryptionEnabled : boolean userGroupIDs : - string Field Description atRestEncryptionEnabled Optional boolean A flag that enables encryption at rest when set to true. You cannot modify the value of AtRestEncryptionEnabled after the replication group is created. To enable encryption at rest on a replication group you must set AtRestEncryptionEnabled to true when you create the replication group. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false authToken Optional object Reserved parameter. The password used to access a password protected server. AuthToken can be specified only on replication groups where TransitEncryptionEnabled is true. For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup. Password constraints: * Must be only printable ASCII characters. * Must be at least 16 characters and no more than 128 characters in length. * The only permitted printable special characters are !, &, #, $, ^, <, >, and -. Other printable special characters cannot be used in the AUTH token. For more information, see AUTH password (http://redis.io/commands/AUTH) at http://redis.io/commands/AUTH. authToken.key Required string Key is the key within the secret authToken.name Optional string Name is unique within a namespace to reference a secret resource. authToken.namespace Optional string Namespace defines the space within which the secret name must be unique. automaticFailoverEnabled Optional boolean Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails. AutomaticFailoverEnabled must be enabled for Redis (cluster mode enabled) replication groups. Default: false cacheNodeType Optional string The compute and memory capacity of the nodes in the node group (shard). The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts. * General purpose: Current generation: M6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.m6g.large, cache.m6g.xlarge, cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge, cache.m6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types: cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous generation: (not recommended) T1 node types: cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large, cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge, cache.m3.2xlarge * Compute optimized: Previous generation: (not recommended) C1 node types: cache.c1.xlarge * Memory optimized: Current generation: R6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.r6g.large, cache.r6g.xlarge, cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge, cache.r6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge, cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types: cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge, cache.r4.16xlarge Previous generation: (not recommended) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge, cache.r3.8xlarge Additional node type info * All current generation instance types are created in Amazon VPC by default. * Redis append-only files (AOF) are not supported for T1 or T2 instances. * Redis Multi-AZ with automatic failover is not supported on T1 instances. * Redis configuration variables appendonly and appendfsync are not supported on Redis version 2.8.22 and later. cacheParameterGroupName Optional string The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. * To create a Redis (cluster mode disabled) replication group, use CacheParameterGroupName=default.redis3.2. * To create a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on. cacheSecurityGroupNames Optional array A list of cache security group names to associate with this replication group. cacheSecurityGroupNames.[] Required string engine Optional string The name of the cache engine to be used for the clusters in this replication group. Must be Redis. engineVersion Optional string The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation. Important: You can upgrade to a newer engine version (see Selecting a Cache Engine and Version (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)) in the ElastiCache User Guide, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version. kmsKeyID Optional string The ID of the KMS key used to encrypt the disk in the cluster. logDeliveryConfigurations Optional array Specifies the destination, format and type of the logs. logDeliveryConfigurations.[] Required object Specifies the destination, format and type of the logs. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string logDeliveryConfigurations.[].destinationType Optional string logDeliveryConfigurations.[].enabled Optional boolean logDeliveryConfigurations.[].logFormat Optional string logDeliveryConfigurations.[].logType Optional string multiAZEnabled Optional boolean A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see Minimizing Downtime: Multi-AZ (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html). nodeGroupConfiguration Optional array A list of node group (shard) configuration options. Each node group (shard) configuration has the following members: PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount, and Slots. If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, it is required when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each node group (shard) using this parameter because you must specify the slots for each node group. nodeGroupConfiguration.[] Required object Node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount. nodeGroupConfiguration.[].primaryAvailabilityZone Optional string nodeGroupConfiguration.[].primaryOutpostARN Optional string nodeGroupConfiguration.[].replicaAvailabilityZones Optional array nodeGroupConfiguration.[].replicaAvailabilityZones.[] Required string nodeGroupConfiguration.[].replicaOutpostARNs Optional array nodeGroupConfiguration.[].replicaOutpostARNs.[] Required string notificationTopicARN Optional string The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent. The Amazon SNS topic owner must be the same as the cluster owner. numNodeGroups Optional integer An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1. Default: 1 port Optional integer The port number on which each member of the replication group accepts connections. preferredCacheClusterAZs Optional array A list of EC2 Availability Zones in which the replication group's clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list. This parameter is not used if there is more than one node group (shard). You should use NodeGroupConfiguration instead. If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of NumCacheClusters. Default: system chosen Availability Zones. preferredCacheClusterAZs.[] Required string primaryClusterID Optional string The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of available. This parameter is not required if NumCacheClusters, NumNodeGroups, or ReplicasPerNodeGroup is specified. replicasPerNodeGroup Optional integer An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5. replicationGroupDescription Required string A user-created description for the replication group. replicationGroupID Required string The replication group identifier. This parameter is stored as a lowercase string. Constraints: * A name must contain from 1 to 40 alphanumeric characters or hyphens. * The first character must be a letter. * A name cannot end with a hyphen or contain two consecutive hyphens. securityGroupIDs Optional array One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC). securityGroupIDs.[] Required string snapshotARNs.[] Required string snapshotRetentionLimit Optional integer The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted. Default: 0 (i.e., automatic backups are disabled for this cluster). snapshotWindow Optional string The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). Example: 05:00-09:00 If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range. transitEncryptionEnabled Optional boolean A flag that enables in-transit encryption when set to true. You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster. This parameter is valid only if the Engine parameter is redis, the EngineVersion parameter is 3.2.6, 4.x or later, and the cluster is being created in an Amazon VPC. If you enable in-transit encryption, you must also specify a value for CacheSubnetGroup. Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. Default: false For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup. userGroupIDs Optional array The user group to associate with the replication group. userGroupIDs.[] Required string","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/ReplicationGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string allowedScaleDownModifications : - string allowedScaleUpModifications : - string authTokenEnabled : boolean authTokenLastModifiedDate : string automaticFailover : string clusterEnabled : boolean conditions : - lastTransitionTime : string message : string reason : string status : string type : string configurationEndpoint : address : string port : integer description : string events : - date : string message : string sourceIdentifier : string globalReplicationGroupInfo : globalReplicationGroupID : string globalReplicationGroupMemberRole : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string logFormat : string logType : string message : string status : string memberClusters : - string memberClustersOutpostARNs : - string multiAZ : string nodeGroups : - nodeGroupID : string nodeGroupMembers : - cacheClusterID : string cacheNodeID : string currentRole : string preferredAvailabilityZone : string preferredOutpostARN : string readEndpoint : address : string port : integer primaryEndpoint : address : string port : integer readerEndpoint : address : string port : integer slots : string status : string pendingModifiedValues : authTokenStatus : string automaticFailoverStatus : string logDeliveryConfigurations : destinationDetails : cloudWatchLogsDetails : logGroup : string kinesisFirehoseDetails : deliveryStream : string destinationType : string logFormat : string logType : string primaryClusterID : string resharding : slotMigration : progressPercentage : number userGroups : userGroupIDsToAdd : - string userGroupIDsToRemove : - string snapshottingClusterID : string status : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. allowedScaleDownModifications Optional array A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group. When scaling down a Redis cluster or replication group using ModifyCacheCluster or ModifyReplicationGroup, use a value from this list for the CacheNodeType parameter. allowedScaleDownModifications.[] Required string allowedScaleUpModifications.[] Required string authTokenLastModifiedDate Optional string The date the auth token was last modified automaticFailover Optional string Indicates the status of automatic failover for this Redis replication group. clusterEnabled Optional boolean A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups). Valid values: true conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition configurationEndpoint Optional object The configuration endpoint for this replication group. Use the configuration endpoint to connect to this replication group. configurationEndpoint.address Optional string configurationEndpoint.port Optional integer description Optional string The user supplied description of the replication group. events Optional array A list of events. Each element in the list contains detailed information about one event. events.[] Required object Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node. events.[].message Optional string events.[].sourceIdentifier Optional string globalReplicationGroupInfo Optional object The name of the Global datastore and role of this replication group in the Global datastore. globalReplicationGroupInfo.globalReplicationGroupID Optional string globalReplicationGroupInfo.globalReplicationGroupMemberRole Optional string logDeliveryConfigurations Optional array Returns the destination, format and type of the logs. logDeliveryConfigurations.[] Required object Returns the destination, format and type of the logs. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string logDeliveryConfigurations.[].destinationType Optional string logDeliveryConfigurations.[].logFormat Optional string logDeliveryConfigurations.[].logType Optional string logDeliveryConfigurations.[].message Optional string logDeliveryConfigurations.[].status Optional string memberClusters Optional array The names of all the cache clusters that are part of this replication group. memberClusters.[] Required string memberClustersOutpostARNs.[] Required string nodeGroups Optional array A list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard). nodeGroups.[] Required object Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes. nodeGroups.[].nodeGroupMembers Optional array nodeGroups.[].nodeGroupMembers.[] Required object Represents a single node within a node group (shard). nodeGroups.[].nodeGroupMembers.[].cacheNodeID Optional string nodeGroups.[].nodeGroupMembers.[].currentRole Optional string nodeGroups.[].nodeGroupMembers.[].preferredAvailabilityZone Optional string nodeGroups.[].nodeGroupMembers.[].preferredOutpostARN Optional string nodeGroups.[].nodeGroupMembers.[].readEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].nodeGroupMembers.[].readEndpoint.address Optional string nodeGroups.[].nodeGroupMembers.[].readEndpoint.port Optional integer nodeGroups.[].primaryEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].primaryEndpoint.address Optional string nodeGroups.[].primaryEndpoint.port Optional integer nodeGroups.[].readerEndpoint Optional object Represents the information required for client programs to connect to a cache node. nodeGroups.[].readerEndpoint.address Optional string nodeGroups.[].readerEndpoint.port Optional integer nodeGroups.[].slots Optional string nodeGroups.[].status Optional string pendingModifiedValues Optional object A group of settings to be applied to the replication group, either immediately or during the next maintenance window. pendingModifiedValues.authTokenStatus Optional string pendingModifiedValues.automaticFailoverStatus Optional string pendingModifiedValues.logDeliveryConfigurations Optional array pendingModifiedValues.logDeliveryConfigurations.[] Required object The log delivery configurations being modified pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails Optional object The configuration details of the CloudWatch Logs destination. pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.cloudWatchLogsDetails.logGroup Optional string pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails Optional object The configuration details of the Kinesis Data Firehose destination. pendingModifiedValues.logDeliveryConfigurations.[].destinationDetails.kinesisFirehoseDetails.deliveryStream Optional string pendingModifiedValues.logDeliveryConfigurations.[].destinationType Optional string pendingModifiedValues.logDeliveryConfigurations.[].logFormat Optional string pendingModifiedValues.logDeliveryConfigurations.[].logType Optional string pendingModifiedValues.primaryClusterID Optional string pendingModifiedValues.resharding Optional object The status of an online resharding operation. pendingModifiedValues.resharding.slotMigration Optional object Represents the progress of an online resharding operation. pendingModifiedValues.resharding.slotMigration.progressPercentage Optional number pendingModifiedValues.userGroups Optional object The status of the user group update. pendingModifiedValues.userGroups.userGroupIDsToAdd Optional array pendingModifiedValues.userGroups.userGroupIDsToAdd.[] Required string pendingModifiedValues.userGroups.userGroupIDsToRemove.[] Required string status Optional string The current state of this replication group - creating, available, modifying, deleting, create-failed, snapshotting.","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/Snapshot/","text":"Snapshot \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#Snapshot Metadata \u00b6 Property Value Scope Namespaced Kind Snapshot ListKind SnapshotList Plural snapshots Singular snapshot Represents a copy of an entire Redis cluster as of the time when the snapshot was taken. Spec \u00b6 cacheClusterID : string kmsKeyID : string replicationGroupID : string snapshotName : string sourceSnapshotName : string Field Description cacheClusterID Optional string The identifier of an existing cluster. The snapshot is created from this cluster. kmsKeyID Optional string The ID of the KMS key used to encrypt the snapshot. replicationGroupID Optional string The identifier of an existing replication group. The snapshot is created from this replication group. snapshotName Required string A name for the snapshot being created. sourceSnapshotName Optional string The name of an existing snapshot from which to make a copy. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string autoMinorVersionUpgrade : boolean automaticFailover : string cacheClusterCreateTime : string cacheNodeType : string cacheParameterGroupName : string cacheSubnetGroupName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string engine : string engineVersion : string nodeSnapshots : - cacheClusterID : string cacheNodeCreateTime : string cacheNodeID : string cacheSize : string nodeGroupConfiguration : nodeGroupID : string primaryAvailabilityZone : string primaryOutpostARN : string replicaAvailabilityZones : - string replicaCount : integer replicaOutpostARNs : - string slots : string nodeGroupID : string snapshotCreateTime : string numCacheNodes : integer numNodeGroups : integer port : integer preferredAvailabilityZone : string preferredMaintenanceWindow : string preferredOutpostARN : string replicationGroupDescription : string snapshotRetentionLimit : integer snapshotSource : string snapshotStatus : string snapshotWindow : string topicARN : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. autoMinorVersionUpgrade Optional boolean This parameter is currently disabled. automaticFailover Optional string Indicates the status of automatic failover for the source Redis replication group. cacheClusterCreateTime Optional string The date and time when the source cluster was created. cacheNodeType Optional string The name of the compute and memory capacity node type for the source cluster. The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts. * General purpose: Current generation: M6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.m6g.large, cache.m6g.xlarge, cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge, cache.m6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types: cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous generation: (not recommended) T1 node types: cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large, cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge, cache.m3.2xlarge * Compute optimized: Previous generation: (not recommended) C1 node types: cache.c1.xlarge * Memory optimized: Current generation: R6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.r6g.large, cache.r6g.xlarge, cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge, cache.r6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge, cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types: cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge, cache.r4.16xlarge Previous generation: (not recommended) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge, cache.r3.8xlarge Additional node type info * All current generation instance types are created in Amazon VPC by default. * Redis append-only files (AOF) are not supported for T1 or T2 instances. * Redis Multi-AZ with automatic failover is not supported on T1 instances. * Redis configuration variables appendonly and appendfsync are not supported on Redis version 2.8.22 and later. cacheParameterGroupName Optional string The cache parameter group that is associated with the source cluster. cacheSubnetGroupName Optional string The name of the cache subnet group associated with the source cluster. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition engine Optional string The name of the cache engine (memcached or redis) used by the source cluster. engineVersion Optional string The version of the cache engine version that is used by the source cluster. nodeSnapshots Optional array A list of the cache nodes in the source cluster. nodeSnapshots.[] Required object Represents an individual cache node in a snapshot of a cluster. nodeSnapshots.[].cacheNodeCreateTime Optional string nodeSnapshots.[].cacheNodeID Optional string nodeSnapshots.[].cacheSize Optional string nodeSnapshots.[].nodeGroupConfiguration Optional object Node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount. nodeSnapshots.[].nodeGroupConfiguration.nodeGroupID Optional string nodeSnapshots.[].nodeGroupConfiguration.primaryAvailabilityZone Optional string nodeSnapshots.[].nodeGroupConfiguration.primaryOutpostARN Optional string nodeSnapshots.[].nodeGroupConfiguration.replicaAvailabilityZones Optional array nodeSnapshots.[].nodeGroupConfiguration.replicaAvailabilityZones.[] Required string nodeSnapshots.[].nodeGroupConfiguration.replicaOutpostARNs Optional array nodeSnapshots.[].nodeGroupConfiguration.replicaOutpostARNs.[] Required string nodeSnapshots.[].nodeGroupID Optional string nodeSnapshots.[].snapshotCreateTime Optional string numCacheNodes Optional integer The number of cache nodes in the source cluster. For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40. numNodeGroups Optional integer The number of node groups (shards) in this snapshot. When restoring from a snapshot, the number of node groups (shards) in the snapshot and in the restored replication group must be the same. port Optional integer The port number used by each cache nodes in the source cluster. preferredAvailabilityZone Optional string The name of the Availability Zone in which the source cluster is located. preferredMaintenanceWindow Optional string Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are: * sun * mon * tue * wed * thu * fri * sat Example: sun:23:00-mon:01:30 preferredOutpostARN Optional string The ARN (Amazon Resource Name) of the preferred outpost. replicationGroupDescription Optional string A description of the source replication group. snapshotRetentionLimit Optional integer For an automatic snapshot, the number of days for which ElastiCache retains the snapshot before deleting it. For manual snapshots, this field reflects the SnapshotRetentionLimit for the source cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the DeleteSnapshot operation. Important If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. snapshotSource Optional string Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual). snapshotStatus Optional string The status of the snapshot. Valid values: creating snapshotWindow Optional string The daily time range during which ElastiCache takes daily snapshots of the source cluster. topicARN Optional string The Amazon Resource Name (ARN) for the topic used by the source cluster for publishing notifications. vpcID Optional string The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cluster.","title":"Snapshot"},{"location":"reference/ElastiCache/v1alpha1/Snapshot/#snapshot","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#Snapshot","title":"Snapshot"},{"location":"reference/ElastiCache/v1alpha1/Snapshot/#metadata","text":"Property Value Scope Namespaced Kind Snapshot ListKind SnapshotList Plural snapshots Singular snapshot Represents a copy of an entire Redis cluster as of the time when the snapshot was taken.","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/Snapshot/#spec","text":"cacheClusterID : string kmsKeyID : string replicationGroupID : string snapshotName : string sourceSnapshotName : string Field Description cacheClusterID Optional string The identifier of an existing cluster. The snapshot is created from this cluster. kmsKeyID Optional string The ID of the KMS key used to encrypt the snapshot. replicationGroupID Optional string The identifier of an existing replication group. The snapshot is created from this replication group. snapshotName Required string A name for the snapshot being created. sourceSnapshotName Optional string The name of an existing snapshot from which to make a copy.","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/Snapshot/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string autoMinorVersionUpgrade : boolean automaticFailover : string cacheClusterCreateTime : string cacheNodeType : string cacheParameterGroupName : string cacheSubnetGroupName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string engine : string engineVersion : string nodeSnapshots : - cacheClusterID : string cacheNodeCreateTime : string cacheNodeID : string cacheSize : string nodeGroupConfiguration : nodeGroupID : string primaryAvailabilityZone : string primaryOutpostARN : string replicaAvailabilityZones : - string replicaCount : integer replicaOutpostARNs : - string slots : string nodeGroupID : string snapshotCreateTime : string numCacheNodes : integer numNodeGroups : integer port : integer preferredAvailabilityZone : string preferredMaintenanceWindow : string preferredOutpostARN : string replicationGroupDescription : string snapshotRetentionLimit : integer snapshotSource : string snapshotStatus : string snapshotWindow : string topicARN : string vpcID : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. autoMinorVersionUpgrade Optional boolean This parameter is currently disabled. automaticFailover Optional string Indicates the status of automatic failover for the source Redis replication group. cacheClusterCreateTime Optional string The date and time when the source cluster was created. cacheNodeType Optional string The name of the compute and memory capacity node type for the source cluster. The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts. * General purpose: Current generation: M6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.m6g.large, cache.m6g.xlarge, cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge, cache.m6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types: cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous generation: (not recommended) T1 node types: cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large, cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge, cache.m3.2xlarge * Compute optimized: Previous generation: (not recommended) C1 node types: cache.c1.xlarge * Memory optimized: Current generation: R6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.r6g.large, cache.r6g.xlarge, cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge, cache.r6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge, cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types: cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge, cache.r4.16xlarge Previous generation: (not recommended) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge, cache.r3.8xlarge Additional node type info * All current generation instance types are created in Amazon VPC by default. * Redis append-only files (AOF) are not supported for T1 or T2 instances. * Redis Multi-AZ with automatic failover is not supported on T1 instances. * Redis configuration variables appendonly and appendfsync are not supported on Redis version 2.8.22 and later. cacheParameterGroupName Optional string The cache parameter group that is associated with the source cluster. cacheSubnetGroupName Optional string The name of the cache subnet group associated with the source cluster. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition engine Optional string The name of the cache engine (memcached or redis) used by the source cluster. engineVersion Optional string The version of the cache engine version that is used by the source cluster. nodeSnapshots Optional array A list of the cache nodes in the source cluster. nodeSnapshots.[] Required object Represents an individual cache node in a snapshot of a cluster. nodeSnapshots.[].cacheNodeCreateTime Optional string nodeSnapshots.[].cacheNodeID Optional string nodeSnapshots.[].cacheSize Optional string nodeSnapshots.[].nodeGroupConfiguration Optional object Node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount. nodeSnapshots.[].nodeGroupConfiguration.nodeGroupID Optional string nodeSnapshots.[].nodeGroupConfiguration.primaryAvailabilityZone Optional string nodeSnapshots.[].nodeGroupConfiguration.primaryOutpostARN Optional string nodeSnapshots.[].nodeGroupConfiguration.replicaAvailabilityZones Optional array nodeSnapshots.[].nodeGroupConfiguration.replicaAvailabilityZones.[] Required string nodeSnapshots.[].nodeGroupConfiguration.replicaOutpostARNs Optional array nodeSnapshots.[].nodeGroupConfiguration.replicaOutpostARNs.[] Required string nodeSnapshots.[].nodeGroupID Optional string nodeSnapshots.[].snapshotCreateTime Optional string numCacheNodes Optional integer The number of cache nodes in the source cluster. For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40. numNodeGroups Optional integer The number of node groups (shards) in this snapshot. When restoring from a snapshot, the number of node groups (shards) in the snapshot and in the restored replication group must be the same. port Optional integer The port number used by each cache nodes in the source cluster. preferredAvailabilityZone Optional string The name of the Availability Zone in which the source cluster is located. preferredMaintenanceWindow Optional string Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are: * sun * mon * tue * wed * thu * fri * sat Example: sun:23:00-mon:01:30 preferredOutpostARN Optional string The ARN (Amazon Resource Name) of the preferred outpost. replicationGroupDescription Optional string A description of the source replication group. snapshotRetentionLimit Optional integer For an automatic snapshot, the number of days for which ElastiCache retains the snapshot before deleting it. For manual snapshots, this field reflects the SnapshotRetentionLimit for the source cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the DeleteSnapshot operation. Important If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. snapshotSource Optional string Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual). snapshotStatus Optional string The status of the snapshot. Valid values: creating snapshotWindow Optional string The daily time range during which ElastiCache takes daily snapshots of the source cluster. topicARN Optional string The Amazon Resource Name (ARN) for the topic used by the source cluster for publishing notifications. vpcID Optional string The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group for the source cluster.","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/User/","text":"User \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#User Metadata \u00b6 Property Value Scope Namespaced Kind User ListKind UserList Plural users Singular user Spec \u00b6 accessString : string engine : string noPasswordRequired : boolean passwords : - key : string name : string namespace : string userID : string userName : string Field Description accessString Required string Access permissions string used for this user. engine Required string The current supported value is Redis. noPasswordRequired Optional boolean Indicates a password is not required for this user. passwords Optional array Passwords used for this user. You can create up to two passwords for each user. passwords.[] Required object SecretKeyReference combines a k8s corev1.SecretReference with a specific key within the referred-to Secret passwords.[].name Optional string Name is unique within a namespace to reference a secret resource. passwords.[].namespace Optional string Namespace defines the space within which the secret name must be unique. userID Required string The ID of the user. userName Required string The username of the user. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string authentication : passwordCount : integer type_ : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string expandedAccessString : string lastRequestedAccessString : string status : string userGroupIDs : - string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. authentication Optional object Denotes whether the user requires a password to authenticate. authentication.passwordCount Optional integer authentication.type_ Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition expandedAccessString Optional string Access permissions string used for this user. lastRequestedAccessString Optional string Access permissions string used for this user. status Optional string Indicates the user status. Can be \"active\", \"modifying\" or \"deleting\". userGroupIDs Optional array Returns a list of the user group IDs the user belongs to. userGroupIDs.[] Required string","title":"User"},{"location":"reference/ElastiCache/v1alpha1/User/#user","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#User","title":"User"},{"location":"reference/ElastiCache/v1alpha1/User/#metadata","text":"Property Value Scope Namespaced Kind User ListKind UserList Plural users Singular user","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/User/#spec","text":"accessString : string engine : string noPasswordRequired : boolean passwords : - key : string name : string namespace : string userID : string userName : string Field Description accessString Required string Access permissions string used for this user. engine Required string The current supported value is Redis. noPasswordRequired Optional boolean Indicates a password is not required for this user. passwords Optional array Passwords used for this user. You can create up to two passwords for each user. passwords.[] Required object SecretKeyReference combines a k8s corev1.SecretReference with a specific key within the referred-to Secret passwords.[].name Optional string Name is unique within a namespace to reference a secret resource. passwords.[].namespace Optional string Namespace defines the space within which the secret name must be unique. userID Required string The ID of the user. userName Required string The username of the user.","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/User/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string authentication : passwordCount : integer type_ : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string expandedAccessString : string lastRequestedAccessString : string status : string userGroupIDs : - string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. authentication Optional object Denotes whether the user requires a password to authenticate. authentication.passwordCount Optional integer authentication.type_ Optional string conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition expandedAccessString Optional string Access permissions string used for this user. lastRequestedAccessString Optional string Access permissions string used for this user. status Optional string Indicates the user status. Can be \"active\", \"modifying\" or \"deleting\". userGroupIDs Optional array Returns a list of the user group IDs the user belongs to. userGroupIDs.[] Required string","title":"Status"},{"location":"reference/ElastiCache/v1alpha1/UserGroup/","text":"UserGroup \u00b6 elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#UserGroup Metadata \u00b6 Property Value Scope Namespaced Kind UserGroup ListKind UserGroupList Plural usergroups Singular usergroup Spec \u00b6 engine : string userGroupID : string userIDs : - string Field Description engine Required string The current supported value is Redis. userGroupID Required string The ID of the user group. userIDs Optional array The list of user IDs that belong to the user group. userIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string pendingChanges : userIDsToAdd : - string userIDsToRemove : - string replicationGroups : - string status : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition pendingChanges Optional object A list of updates being applied to the user groups. pendingChanges.userIDsToAdd Optional array pendingChanges.userIDsToAdd.[] Required string pendingChanges.userIDsToRemove.[] Required string replicationGroups.[] Required string","title":"UserGroup"},{"location":"reference/ElastiCache/v1alpha1/UserGroup/#usergroup","text":"elasticache.services.k8s.aws/v1alpha1 Type Link GoDoc elasticache-controller/apis/v1alpha1#UserGroup","title":"UserGroup"},{"location":"reference/ElastiCache/v1alpha1/UserGroup/#metadata","text":"Property Value Scope Namespaced Kind UserGroup ListKind UserGroupList Plural usergroups Singular usergroup","title":"Metadata"},{"location":"reference/ElastiCache/v1alpha1/UserGroup/#spec","text":"engine : string userGroupID : string userIDs : - string Field Description engine Required string The current supported value is Redis. userGroupID Required string The ID of the user group. userIDs Optional array The list of user IDs that belong to the user group. userIDs.[] Required string","title":"Spec"},{"location":"reference/ElastiCache/v1alpha1/UserGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string pendingChanges : userIDsToAdd : - string userIDsToRemove : - string replicationGroups : - string status : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition pendingChanges Optional object A list of updates being applied to the user groups. pendingChanges.userIDsToAdd Optional array pendingChanges.userIDsToAdd.[] Required string pendingChanges.userIDsToRemove.[] Required string replicationGroups.[] Required string","title":"Status"},{"location":"reference/Elasticsearch/v1alpha1/ElasticsearchDomain/","text":"ElasticsearchDomain \u00b6 elasticsearchservice.services.k8s.aws/v1alpha1 Type Link GoDoc elasticsearchservice-controller/apis/v1alpha1#ElasticsearchDomain Metadata \u00b6 Property Value Scope Namespaced Kind ElasticsearchDomain ListKind ElasticsearchDomainList Plural elasticsearchdomains Singular elasticsearchdomain Spec \u00b6 accessPolicies : string advancedOptions : {} advancedSecurityOptions : enabled : boolean internalUserDatabaseEnabled : boolean masterUserOptions : masterUserARN : string masterUserName : string masterUserPassword : string sAMLOptions : enabled : boolean idp : entityID : string metadataContent : string masterBackendRole : string masterUserName : string rolesKey : string sessionTimeoutMinutes : integer subjectKey : string autoTuneOptions : desiredState : string maintenanceSchedules : - cronExpressionForRecurrence : string duration : unit : string value : integer startAt : string cognitoOptions : enabled : boolean identityPoolID : string roleARN : string userPoolID : string domainEndpointOptions : customEndpoint : string customEndpointCertificateARN : string customEndpointEnabled : boolean enforceHTTPS : boolean tlsSecurityPolicy : string domainName : string ebsOptions : ebsEnabled : boolean iops : integer volumeSize : integer volumeType : string elasticsearchClusterConfig : dedicatedMasterCount : integer dedicatedMasterEnabled : boolean dedicatedMasterType : string instanceCount : integer instanceType : string warmCount : integer warmEnabled : boolean warmType : string zoneAwarenessConfig : availabilityZoneCount : integer zoneAwarenessEnabled : boolean elasticsearchVersion : string encryptionAtRestOptions : enabled : boolean kmsKeyID : string logPublishingOptions : {} nodeToNodeEncryptionOptions : enabled : boolean snapshotOptions : automatedSnapshotStartHour : integer tagList : - key : string value : string vpcOptions : securityGroupIDs : - string subnetIDs : - string Field Description accessPolicies Optional string IAM access policy as a JSON-formatted string. advancedOptions Optional object Option to allow references to indices in an HTTP request body. Must be false when configuring access to individual sub-resources. By default, the value is true. See Configuration Advanced Options (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options) for more information. advancedSecurityOptions Optional object Specifies advanced security options. advancedSecurityOptions.enabled Optional boolean advancedSecurityOptions.internalUserDatabaseEnabled Optional boolean advancedSecurityOptions.masterUserOptions Optional object Credentials for the master user: username and password, ARN, or both. advancedSecurityOptions.masterUserOptions.masterUserARN Optional string The Amazon Resource Name (ARN) of the Elasticsearch domain. See Identifiers for IAM Entities (http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information. advancedSecurityOptions.masterUserOptions.masterUserName Optional string advancedSecurityOptions.masterUserOptions.masterUserPassword Optional string advancedSecurityOptions.sAMLOptions Optional object Specifies the SAML application configuration for the domain. advancedSecurityOptions.sAMLOptions.enabled Optional boolean advancedSecurityOptions.sAMLOptions.idp Optional object Specifies the SAML Identity Provider's information. advancedSecurityOptions.sAMLOptions.idp.entityID Optional string advancedSecurityOptions.sAMLOptions.idp.metadataContent Optional string advancedSecurityOptions.sAMLOptions.masterBackendRole Optional string advancedSecurityOptions.sAMLOptions.masterUserName Optional string advancedSecurityOptions.sAMLOptions.rolesKey Optional string advancedSecurityOptions.sAMLOptions.sessionTimeoutMinutes Optional integer advancedSecurityOptions.sAMLOptions.subjectKey Optional string autoTuneOptions Optional object Specifies Auto-Tune options. autoTuneOptions.desiredState Optional string Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. autoTuneOptions.maintenanceSchedules Optional array autoTuneOptions.maintenanceSchedules.[] Required object Specifies Auto-Tune maitenance schedule. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration Optional object Specifies maintenance schedule duration: duration value and duration unit. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration.unit Optional string Specifies the unit of a maintenance schedule duration. Valid value is HOUR. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration.value Optional integer Integer to specify the value of a maintenance schedule duration. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].startAt Optional string cognitoOptions Optional object Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see Amazon Cognito Authentication for Kibana (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html). cognitoOptions.enabled Optional boolean cognitoOptions.identityPoolID Optional string cognitoOptions.roleARN Optional string cognitoOptions.userPoolID Optional string domainEndpointOptions Optional object Options to specify configuration that will be applied to the domain endpoint. domainEndpointOptions.customEndpoint Optional string domainEndpointOptions.customEndpointCertificateARN Optional string The Amazon Resource Name (ARN) of the Elasticsearch domain. See Identifiers for IAM Entities (http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information. domainEndpointOptions.customEndpointEnabled Optional boolean domainEndpointOptions.enforceHTTPS Optional boolean domainEndpointOptions.tlsSecurityPolicy Optional string domainName Required string The name of the Elasticsearch domain that you are creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a lowercase letter and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). ebsOptions Optional object Options to enable, disable and specify the type and size of EBS storage volumes. ebsOptions.ebsEnabled Optional boolean ebsOptions.iops Optional integer ebsOptions.volumeSize Optional integer ebsOptions.volumeType Optional string The type of EBS volume, standard, gp2, or io1. See Configuring EBS-based Storage (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs)for more information. elasticsearchClusterConfig Optional object Configuration options for an Elasticsearch domain. Specifies the instance type and number of instances in the domain cluster. elasticsearchClusterConfig.dedicatedMasterCount Optional integer elasticsearchClusterConfig.dedicatedMasterEnabled Optional boolean elasticsearchClusterConfig.dedicatedMasterType Optional string elasticsearchClusterConfig.instanceCount Optional integer elasticsearchClusterConfig.instanceType Optional string elasticsearchClusterConfig.warmCount Optional integer elasticsearchClusterConfig.warmEnabled Optional boolean elasticsearchClusterConfig.warmType Optional string elasticsearchClusterConfig.zoneAwarenessConfig Optional object Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones. elasticsearchClusterConfig.zoneAwarenessConfig.availabilityZoneCount Optional integer elasticsearchClusterConfig.zoneAwarenessEnabled Optional boolean elasticsearchVersion Optional string String of format X.Y to specify version for the Elasticsearch domain eg. \"1.5\" or \"2.3\". For more information, see Creating Elasticsearch Domains (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains) in the Amazon Elasticsearch Service Developer Guide. encryptionAtRestOptions Optional object Specifies the Encryption At Rest Options. encryptionAtRestOptions.enabled Optional boolean encryptionAtRestOptions.kmsKeyID Optional string logPublishingOptions Optional object Map of LogType and LogPublishingOption, each containing options to publish a given type of Elasticsearch log. nodeToNodeEncryptionOptions Optional object Specifies the NodeToNodeEncryptionOptions. nodeToNodeEncryptionOptions.enabled Optional boolean snapshotOptions Optional object Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours. snapshotOptions.automatedSnapshotStartHour Optional integer tagList Optional array A list of Tag added during domain creation. tagList.[] Required object Specifies a key value pair for a resource tag. tagList.[].value Optional string A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set. vpcOptions Optional object Options to specify the subnets and security groups for VPC endpoint. For more information, see Creating a VPC (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc) in VPC Endpoints for Amazon Elasticsearch Service Domains vpcOptions.securityGroupIDs Optional array vpcOptions.securityGroupIDs.[] Required string vpcOptions.subnetIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string created : boolean deleted : boolean domainID : string endpoint : string endpoints : {} processing : boolean serviceSoftwareOptions : automatedUpdateDate : string cancellable : boolean currentVersion : string description : string newVersion : string optionalDeployment : boolean updateAvailable : boolean updateStatus : string upgradeProcessing : boolean Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition created Optional boolean The domain creation status. True if the creation of an Elasticsearch domain is complete. False if domain creation is still in progress. deleted Optional boolean The domain deletion status. True if a delete request has been received for the domain but resource cleanup is still in progress. False if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned. domainID Optional string The unique identifier for the specified Elasticsearch domain. endpoint Optional string The Elasticsearch domain endpoint that you use to submit index and search requests. endpoints Optional object Map containing the Elasticsearch domain endpoints used to submit index and search requests. Example key, value: 'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'. processing Optional boolean The status of the Elasticsearch domain configuration. True if Amazon Elasticsearch Service is processing configuration changes. False if the configuration is active. serviceSoftwareOptions Optional object The current status of the Elasticsearch domain's service software. serviceSoftwareOptions.automatedUpdateDate Optional string serviceSoftwareOptions.cancellable Optional boolean serviceSoftwareOptions.currentVersion Optional string serviceSoftwareOptions.description Optional string serviceSoftwareOptions.newVersion Optional string serviceSoftwareOptions.optionalDeployment Optional boolean serviceSoftwareOptions.updateAvailable Optional boolean serviceSoftwareOptions.updateStatus Optional string upgradeProcessing Optional boolean The status of an Elasticsearch domain version upgrade. True if Amazon Elasticsearch Service is undergoing a version upgrade. False if the configuration is active.","title":"ElasticsearchDomain"},{"location":"reference/Elasticsearch/v1alpha1/ElasticsearchDomain/#elasticsearchdomain","text":"elasticsearchservice.services.k8s.aws/v1alpha1 Type Link GoDoc elasticsearchservice-controller/apis/v1alpha1#ElasticsearchDomain","title":"ElasticsearchDomain"},{"location":"reference/Elasticsearch/v1alpha1/ElasticsearchDomain/#metadata","text":"Property Value Scope Namespaced Kind ElasticsearchDomain ListKind ElasticsearchDomainList Plural elasticsearchdomains Singular elasticsearchdomain","title":"Metadata"},{"location":"reference/Elasticsearch/v1alpha1/ElasticsearchDomain/#spec","text":"accessPolicies : string advancedOptions : {} advancedSecurityOptions : enabled : boolean internalUserDatabaseEnabled : boolean masterUserOptions : masterUserARN : string masterUserName : string masterUserPassword : string sAMLOptions : enabled : boolean idp : entityID : string metadataContent : string masterBackendRole : string masterUserName : string rolesKey : string sessionTimeoutMinutes : integer subjectKey : string autoTuneOptions : desiredState : string maintenanceSchedules : - cronExpressionForRecurrence : string duration : unit : string value : integer startAt : string cognitoOptions : enabled : boolean identityPoolID : string roleARN : string userPoolID : string domainEndpointOptions : customEndpoint : string customEndpointCertificateARN : string customEndpointEnabled : boolean enforceHTTPS : boolean tlsSecurityPolicy : string domainName : string ebsOptions : ebsEnabled : boolean iops : integer volumeSize : integer volumeType : string elasticsearchClusterConfig : dedicatedMasterCount : integer dedicatedMasterEnabled : boolean dedicatedMasterType : string instanceCount : integer instanceType : string warmCount : integer warmEnabled : boolean warmType : string zoneAwarenessConfig : availabilityZoneCount : integer zoneAwarenessEnabled : boolean elasticsearchVersion : string encryptionAtRestOptions : enabled : boolean kmsKeyID : string logPublishingOptions : {} nodeToNodeEncryptionOptions : enabled : boolean snapshotOptions : automatedSnapshotStartHour : integer tagList : - key : string value : string vpcOptions : securityGroupIDs : - string subnetIDs : - string Field Description accessPolicies Optional string IAM access policy as a JSON-formatted string. advancedOptions Optional object Option to allow references to indices in an HTTP request body. Must be false when configuring access to individual sub-resources. By default, the value is true. See Configuration Advanced Options (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options) for more information. advancedSecurityOptions Optional object Specifies advanced security options. advancedSecurityOptions.enabled Optional boolean advancedSecurityOptions.internalUserDatabaseEnabled Optional boolean advancedSecurityOptions.masterUserOptions Optional object Credentials for the master user: username and password, ARN, or both. advancedSecurityOptions.masterUserOptions.masterUserARN Optional string The Amazon Resource Name (ARN) of the Elasticsearch domain. See Identifiers for IAM Entities (http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information. advancedSecurityOptions.masterUserOptions.masterUserName Optional string advancedSecurityOptions.masterUserOptions.masterUserPassword Optional string advancedSecurityOptions.sAMLOptions Optional object Specifies the SAML application configuration for the domain. advancedSecurityOptions.sAMLOptions.enabled Optional boolean advancedSecurityOptions.sAMLOptions.idp Optional object Specifies the SAML Identity Provider's information. advancedSecurityOptions.sAMLOptions.idp.entityID Optional string advancedSecurityOptions.sAMLOptions.idp.metadataContent Optional string advancedSecurityOptions.sAMLOptions.masterBackendRole Optional string advancedSecurityOptions.sAMLOptions.masterUserName Optional string advancedSecurityOptions.sAMLOptions.rolesKey Optional string advancedSecurityOptions.sAMLOptions.sessionTimeoutMinutes Optional integer advancedSecurityOptions.sAMLOptions.subjectKey Optional string autoTuneOptions Optional object Specifies Auto-Tune options. autoTuneOptions.desiredState Optional string Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. autoTuneOptions.maintenanceSchedules Optional array autoTuneOptions.maintenanceSchedules.[] Required object Specifies Auto-Tune maitenance schedule. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration Optional object Specifies maintenance schedule duration: duration value and duration unit. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration.unit Optional string Specifies the unit of a maintenance schedule duration. Valid value is HOUR. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].duration.value Optional integer Integer to specify the value of a maintenance schedule duration. See the Developer Guide (https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html) for more information. autoTuneOptions.maintenanceSchedules.[].startAt Optional string cognitoOptions Optional object Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see Amazon Cognito Authentication for Kibana (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html). cognitoOptions.enabled Optional boolean cognitoOptions.identityPoolID Optional string cognitoOptions.roleARN Optional string cognitoOptions.userPoolID Optional string domainEndpointOptions Optional object Options to specify configuration that will be applied to the domain endpoint. domainEndpointOptions.customEndpoint Optional string domainEndpointOptions.customEndpointCertificateARN Optional string The Amazon Resource Name (ARN) of the Elasticsearch domain. See Identifiers for IAM Entities (http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html) in Using AWS Identity and Access Management for more information. domainEndpointOptions.customEndpointEnabled Optional boolean domainEndpointOptions.enforceHTTPS Optional boolean domainEndpointOptions.tlsSecurityPolicy Optional string domainName Required string The name of the Elasticsearch domain that you are creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a lowercase letter and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). ebsOptions Optional object Options to enable, disable and specify the type and size of EBS storage volumes. ebsOptions.ebsEnabled Optional boolean ebsOptions.iops Optional integer ebsOptions.volumeSize Optional integer ebsOptions.volumeType Optional string The type of EBS volume, standard, gp2, or io1. See Configuring EBS-based Storage (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs)for more information. elasticsearchClusterConfig Optional object Configuration options for an Elasticsearch domain. Specifies the instance type and number of instances in the domain cluster. elasticsearchClusterConfig.dedicatedMasterCount Optional integer elasticsearchClusterConfig.dedicatedMasterEnabled Optional boolean elasticsearchClusterConfig.dedicatedMasterType Optional string elasticsearchClusterConfig.instanceCount Optional integer elasticsearchClusterConfig.instanceType Optional string elasticsearchClusterConfig.warmCount Optional integer elasticsearchClusterConfig.warmEnabled Optional boolean elasticsearchClusterConfig.warmType Optional string elasticsearchClusterConfig.zoneAwarenessConfig Optional object Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones. elasticsearchClusterConfig.zoneAwarenessConfig.availabilityZoneCount Optional integer elasticsearchClusterConfig.zoneAwarenessEnabled Optional boolean elasticsearchVersion Optional string String of format X.Y to specify version for the Elasticsearch domain eg. \"1.5\" or \"2.3\". For more information, see Creating Elasticsearch Domains (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains) in the Amazon Elasticsearch Service Developer Guide. encryptionAtRestOptions Optional object Specifies the Encryption At Rest Options. encryptionAtRestOptions.enabled Optional boolean encryptionAtRestOptions.kmsKeyID Optional string logPublishingOptions Optional object Map of LogType and LogPublishingOption, each containing options to publish a given type of Elasticsearch log. nodeToNodeEncryptionOptions Optional object Specifies the NodeToNodeEncryptionOptions. nodeToNodeEncryptionOptions.enabled Optional boolean snapshotOptions Optional object Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours. snapshotOptions.automatedSnapshotStartHour Optional integer tagList Optional array A list of Tag added during domain creation. tagList.[] Required object Specifies a key value pair for a resource tag. tagList.[].value Optional string A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set. vpcOptions Optional object Options to specify the subnets and security groups for VPC endpoint. For more information, see Creating a VPC (http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc) in VPC Endpoints for Amazon Elasticsearch Service Domains vpcOptions.securityGroupIDs Optional array vpcOptions.securityGroupIDs.[] Required string vpcOptions.subnetIDs.[] Required string","title":"Spec"},{"location":"reference/Elasticsearch/v1alpha1/ElasticsearchDomain/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string created : boolean deleted : boolean domainID : string endpoint : string endpoints : {} processing : boolean serviceSoftwareOptions : automatedUpdateDate : string cancellable : boolean currentVersion : string description : string newVersion : string optionalDeployment : boolean updateAvailable : boolean updateStatus : string upgradeProcessing : boolean Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition created Optional boolean The domain creation status. True if the creation of an Elasticsearch domain is complete. False if domain creation is still in progress. deleted Optional boolean The domain deletion status. True if a delete request has been received for the domain but resource cleanup is still in progress. False if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned. domainID Optional string The unique identifier for the specified Elasticsearch domain. endpoint Optional string The Elasticsearch domain endpoint that you use to submit index and search requests. endpoints Optional object Map containing the Elasticsearch domain endpoints used to submit index and search requests. Example key, value: 'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'. processing Optional boolean The status of the Elasticsearch domain configuration. True if Amazon Elasticsearch Service is processing configuration changes. False if the configuration is active. serviceSoftwareOptions Optional object The current status of the Elasticsearch domain's service software. serviceSoftwareOptions.automatedUpdateDate Optional string serviceSoftwareOptions.cancellable Optional boolean serviceSoftwareOptions.currentVersion Optional string serviceSoftwareOptions.description Optional string serviceSoftwareOptions.newVersion Optional string serviceSoftwareOptions.optionalDeployment Optional boolean serviceSoftwareOptions.updateAvailable Optional boolean serviceSoftwareOptions.updateStatus Optional string upgradeProcessing Optional boolean The status of an Elasticsearch domain version upgrade. True if Amazon Elasticsearch Service is undergoing a version upgrade. False if the configuration is active.","title":"Status"},{"location":"reference/KMS/v1alpha1/Alias/","text":"Alias \u00b6 kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Alias Metadata \u00b6 Property Value Scope Namespaced Kind Alias ListKind AliasList Plural aliases Singular alias Spec \u00b6 aliasName : string targetKeyID : string Field Description aliasName Required string targetKeyID Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Alias"},{"location":"reference/KMS/v1alpha1/Alias/#alias","text":"kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Alias","title":"Alias"},{"location":"reference/KMS/v1alpha1/Alias/#metadata","text":"Property Value Scope Namespaced Kind Alias ListKind AliasList Plural aliases Singular alias","title":"Metadata"},{"location":"reference/KMS/v1alpha1/Alias/#spec","text":"aliasName : string targetKeyID : string Field Description aliasName Required string targetKeyID Required string","title":"Spec"},{"location":"reference/KMS/v1alpha1/Alias/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/KMS/v1alpha1/CustomKeyStore/","text":"CustomKeyStore \u00b6 kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#CustomKeyStore Metadata \u00b6 Property Value Scope Namespaced Kind CustomKeyStore ListKind CustomKeyStoreList Plural customkeystores Singular customkeystore Spec \u00b6 cloudHsmClusterID : string customKeyStoreName : string keyStorePassword : string trustAnchorCertificate : string Field Description cloudHsmClusterID Required string customKeyStoreName Required string keyStorePassword Required string trustAnchorCertificate Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string customKeyStoreID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition customKeyStoreID Optional string","title":"CustomKeyStore"},{"location":"reference/KMS/v1alpha1/CustomKeyStore/#customkeystore","text":"kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#CustomKeyStore","title":"CustomKeyStore"},{"location":"reference/KMS/v1alpha1/CustomKeyStore/#metadata","text":"Property Value Scope Namespaced Kind CustomKeyStore ListKind CustomKeyStoreList Plural customkeystores Singular customkeystore","title":"Metadata"},{"location":"reference/KMS/v1alpha1/CustomKeyStore/#spec","text":"cloudHsmClusterID : string customKeyStoreName : string keyStorePassword : string trustAnchorCertificate : string Field Description cloudHsmClusterID Required string customKeyStoreName Required string keyStorePassword Required string trustAnchorCertificate Required string","title":"Spec"},{"location":"reference/KMS/v1alpha1/CustomKeyStore/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string customKeyStoreID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition customKeyStoreID Optional string","title":"Status"},{"location":"reference/KMS/v1alpha1/Grant/","text":"Grant \u00b6 kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Grant Metadata \u00b6 Property Value Scope Namespaced Kind Grant ListKind GrantList Plural grants Singular grant Spec \u00b6 constraints : encryptionContextEquals : {} encryptionContextSubset : {} grantTokens : - string granteePrincipal : string keyID : string name : string operations : - string retiringPrincipal : string Field Description constraints Optional object constraints.encryptionContextEquals Optional object constraints.encryptionContextSubset Optional object grantTokens Optional array grantTokens.[] Required string keyID Required string name Optional string operations Required array operations.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string grantID : string grantToken : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition grantID Optional string grantToken Optional string","title":"Grant"},{"location":"reference/KMS/v1alpha1/Grant/#grant","text":"kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Grant","title":"Grant"},{"location":"reference/KMS/v1alpha1/Grant/#metadata","text":"Property Value Scope Namespaced Kind Grant ListKind GrantList Plural grants Singular grant","title":"Metadata"},{"location":"reference/KMS/v1alpha1/Grant/#spec","text":"constraints : encryptionContextEquals : {} encryptionContextSubset : {} grantTokens : - string granteePrincipal : string keyID : string name : string operations : - string retiringPrincipal : string Field Description constraints Optional object constraints.encryptionContextEquals Optional object constraints.encryptionContextSubset Optional object grantTokens Optional array grantTokens.[] Required string keyID Required string name Optional string operations Required array operations.[] Required string","title":"Spec"},{"location":"reference/KMS/v1alpha1/Grant/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string grantID : string grantToken : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition grantID Optional string grantToken Optional string","title":"Status"},{"location":"reference/KMS/v1alpha1/Key/","text":"Key \u00b6 kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Key Metadata \u00b6 Property Value Scope Namespaced Kind Key ListKind KeyList Plural keys Singular key Spec \u00b6 bypassPolicyLockoutSafetyCheck : boolean customKeyStoreID : string customerMasterKeySpec : string description : string keyUsage : string origin : string policy : string tags : - tagKey : string tagValue : string Field Description bypassPolicyLockoutSafetyCheck Optional boolean customKeyStoreID Optional string customerMasterKeySpec Optional string description Optional string keyUsage Optional string origin Optional string policy Optional string tags Optional array tags.[] Required object tags.[].tagValue Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string awsAccountID : string cloudHsmClusterID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string deletionDate : string enabled : boolean encryptionAlgorithms : - string expirationModel : string keyID : string keyManager : string keyState : string signingAlgorithms : - string validTo : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. awsAccountID Optional string cloudHsmClusterID Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string deletionDate Optional string enabled Optional boolean encryptionAlgorithms Optional array encryptionAlgorithms.[] Required string keyID Optional string keyManager Optional string keyState Optional string signingAlgorithms Optional array signingAlgorithms.[] Required string","title":"Key"},{"location":"reference/KMS/v1alpha1/Key/#key","text":"kms.services.k8s.aws/v1alpha1 Type Link GoDoc kms-controller/apis/v1alpha1#Key","title":"Key"},{"location":"reference/KMS/v1alpha1/Key/#metadata","text":"Property Value Scope Namespaced Kind Key ListKind KeyList Plural keys Singular key","title":"Metadata"},{"location":"reference/KMS/v1alpha1/Key/#spec","text":"bypassPolicyLockoutSafetyCheck : boolean customKeyStoreID : string customerMasterKeySpec : string description : string keyUsage : string origin : string policy : string tags : - tagKey : string tagValue : string Field Description bypassPolicyLockoutSafetyCheck Optional boolean customKeyStoreID Optional string customerMasterKeySpec Optional string description Optional string keyUsage Optional string origin Optional string policy Optional string tags Optional array tags.[] Required object tags.[].tagValue Optional string","title":"Spec"},{"location":"reference/KMS/v1alpha1/Key/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string awsAccountID : string cloudHsmClusterID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string deletionDate : string enabled : boolean encryptionAlgorithms : - string expirationModel : string keyID : string keyManager : string keyState : string signingAlgorithms : - string validTo : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. awsAccountID Optional string cloudHsmClusterID Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string deletionDate Optional string enabled Optional boolean encryptionAlgorithms Optional array encryptionAlgorithms.[] Required string keyID Optional string keyManager Optional string keyState Optional string signingAlgorithms Optional array signingAlgorithms.[] Required string","title":"Status"},{"location":"reference/MQ/v1alpha1/Broker/","text":"Broker \u00b6 mq.services.k8s.aws/v1alpha1 Type Link GoDoc mq-controller/apis/v1alpha1#Broker Metadata \u00b6 Property Value Scope Namespaced Kind Broker ListKind BrokerList Plural brokers Singular broker Spec \u00b6 authenticationStrategy : string autoMinorVersionUpgrade : boolean configuration : id : string revision : integer creatorRequestID : string deploymentMode : string encryptionOptions : kmsKeyID : string useAWSOwnedKey : boolean engineType : string engineVersion : string hostInstanceType : string ldapServerMetadata : hosts : - string roleBase : string roleName : string roleSearchMatching : string roleSearchSubtree : boolean serviceAccountPassword : string serviceAccountUsername : string userBase : string userRoleName : string userSearchMatching : string userSearchSubtree : boolean logs : audit : boolean general : boolean maintenanceWindowStartTime : dayOfWeek : string timeOfDay : string timeZone : string name : string publiclyAccessible : boolean securityGroups : - string storageType : string subnetIDs : - string tags : {} users : - consoleAccess : boolean groups : - string password : key : string name : string namespace : string username : string Field Description authenticationStrategy Optional string autoMinorVersionUpgrade Optional boolean configuration Optional object A list of information about the configuration. Does not apply to RabbitMQ brokers. configuration.id Optional string configuration.revision Optional integer creatorRequestID Optional string deploymentMode Optional string encryptionOptions Optional object Encryption options for the broker. encryptionOptions.kmsKeyID Optional string encryptionOptions.useAWSOwnedKey Optional boolean engineType Optional string engineVersion Optional string hostInstanceType Optional string ldapServerMetadata Optional object The metadata of the LDAP server used to authenticate and authorize connections to the broker. Currently not supported for RabbitMQ engine type. ldapServerMetadata.hosts Optional array ldapServerMetadata.hosts.[] Required string ldapServerMetadata.roleName Optional string ldapServerMetadata.roleSearchMatching Optional string ldapServerMetadata.roleSearchSubtree Optional boolean ldapServerMetadata.serviceAccountPassword Optional string ldapServerMetadata.serviceAccountUsername Optional string ldapServerMetadata.userBase Optional string ldapServerMetadata.userRoleName Optional string ldapServerMetadata.userSearchMatching Optional string ldapServerMetadata.userSearchSubtree Optional boolean logs Optional object The list of information about logs to be enabled for the specified broker. logs.audit Optional boolean logs.general Optional boolean maintenanceWindowStartTime Optional object The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker. maintenanceWindowStartTime.dayOfWeek Optional string maintenanceWindowStartTime.timeOfDay Optional string maintenanceWindowStartTime.timeZone Optional string name Optional string publiclyAccessible Optional boolean securityGroups Optional array securityGroups.[] Required string subnetIDs Optional array subnetIDs.[] Required string users Optional array users.[] Required object A user associated with the broker. users.[].groups Optional array users.[].groups.[] Required string users.[].password.key Required string Key is the key within the secret users.[].password.name Optional string Name is unique within a namespace to reference a secret resource. users.[].password.namespace Optional string Namespace defines the space within which the secret name must be unique. users.[].username Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string brokerID : string brokerInstances : - consoleURL : string endpoints : - string ipAddress : string brokerState : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. brokerID Optional string brokerInstances Optional array brokerInstances.[] Required object Returns information about all brokers. brokerInstances.[].endpoints Optional array brokerInstances.[].endpoints.[] Required string brokerState Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Broker"},{"location":"reference/MQ/v1alpha1/Broker/#broker","text":"mq.services.k8s.aws/v1alpha1 Type Link GoDoc mq-controller/apis/v1alpha1#Broker","title":"Broker"},{"location":"reference/MQ/v1alpha1/Broker/#metadata","text":"Property Value Scope Namespaced Kind Broker ListKind BrokerList Plural brokers Singular broker","title":"Metadata"},{"location":"reference/MQ/v1alpha1/Broker/#spec","text":"authenticationStrategy : string autoMinorVersionUpgrade : boolean configuration : id : string revision : integer creatorRequestID : string deploymentMode : string encryptionOptions : kmsKeyID : string useAWSOwnedKey : boolean engineType : string engineVersion : string hostInstanceType : string ldapServerMetadata : hosts : - string roleBase : string roleName : string roleSearchMatching : string roleSearchSubtree : boolean serviceAccountPassword : string serviceAccountUsername : string userBase : string userRoleName : string userSearchMatching : string userSearchSubtree : boolean logs : audit : boolean general : boolean maintenanceWindowStartTime : dayOfWeek : string timeOfDay : string timeZone : string name : string publiclyAccessible : boolean securityGroups : - string storageType : string subnetIDs : - string tags : {} users : - consoleAccess : boolean groups : - string password : key : string name : string namespace : string username : string Field Description authenticationStrategy Optional string autoMinorVersionUpgrade Optional boolean configuration Optional object A list of information about the configuration. Does not apply to RabbitMQ brokers. configuration.id Optional string configuration.revision Optional integer creatorRequestID Optional string deploymentMode Optional string encryptionOptions Optional object Encryption options for the broker. encryptionOptions.kmsKeyID Optional string encryptionOptions.useAWSOwnedKey Optional boolean engineType Optional string engineVersion Optional string hostInstanceType Optional string ldapServerMetadata Optional object The metadata of the LDAP server used to authenticate and authorize connections to the broker. Currently not supported for RabbitMQ engine type. ldapServerMetadata.hosts Optional array ldapServerMetadata.hosts.[] Required string ldapServerMetadata.roleName Optional string ldapServerMetadata.roleSearchMatching Optional string ldapServerMetadata.roleSearchSubtree Optional boolean ldapServerMetadata.serviceAccountPassword Optional string ldapServerMetadata.serviceAccountUsername Optional string ldapServerMetadata.userBase Optional string ldapServerMetadata.userRoleName Optional string ldapServerMetadata.userSearchMatching Optional string ldapServerMetadata.userSearchSubtree Optional boolean logs Optional object The list of information about logs to be enabled for the specified broker. logs.audit Optional boolean logs.general Optional boolean maintenanceWindowStartTime Optional object The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker. maintenanceWindowStartTime.dayOfWeek Optional string maintenanceWindowStartTime.timeOfDay Optional string maintenanceWindowStartTime.timeZone Optional string name Optional string publiclyAccessible Optional boolean securityGroups Optional array securityGroups.[] Required string subnetIDs Optional array subnetIDs.[] Required string users Optional array users.[] Required object A user associated with the broker. users.[].groups Optional array users.[].groups.[] Required string users.[].password.key Required string Key is the key within the secret users.[].password.name Optional string Name is unique within a namespace to reference a secret resource. users.[].password.namespace Optional string Namespace defines the space within which the secret name must be unique. users.[].username Optional string","title":"Spec"},{"location":"reference/MQ/v1alpha1/Broker/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string brokerID : string brokerInstances : - consoleURL : string endpoints : - string ipAddress : string brokerState : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. brokerID Optional string brokerInstances Optional array brokerInstances.[] Required object Returns information about all brokers. brokerInstances.[].endpoints Optional array brokerInstances.[].endpoints.[] Required string brokerState Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/RDS/v1alpha1/DBCluster/","text":"DBCluster \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBCluster Metadata \u00b6 Property Value Scope Namespaced Kind DBCluster ListKind DBClusterList Plural dbclusters Singular dbcluster Contains the details of an Amazon Aurora DB cluster. This data type is used as a response element in the DescribeDBClusters, StopDBCluster, and StartDBCluster actions. Spec \u00b6 availabilityZones : - string backtrackWindow : integer backupRetentionPeriod : integer characterSetName : string copyTagsToSnapshot : boolean databaseName : string dbClusterIdentifier : string dbClusterParameterGroupName : string dbSubnetGroupName : string deletionProtection : boolean destinationRegion : string domain : string domainIAMRoleName : string enableCloudwatchLogsExports : - string enableGlobalWriteForwarding : boolean enableHTTPEndpoint : boolean enableIAMDatabaseAuthentication : boolean engine : string engineMode : string engineVersion : string globalClusterIdentifier : string kmsKeyID : string masterUserPassword : key : string name : string namespace : string masterUsername : string optionGroupName : string port : integer preSignedURL : string preferredBackupWindow : string preferredMaintenanceWindow : string replicationSourceIdentifier : string scalingConfiguration : autoPause : boolean maxCapacity : integer minCapacity : integer secondsUntilAutoPause : integer timeoutAction : string sourceRegion : string storageEncrypted : boolean tags : - key : string value : string vpcSecurityGroupIDs : - string Field Description availabilityZones Optional array A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see Choosing the Regions and Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the Amazon Aurora User Guide. availabilityZones.[] Required string backupRetentionPeriod Optional integer The number of days for which automated backups are retained. Default: 1 Constraints: * Must be a value from 1 to 35 characterSetName Optional string A value that indicates that the DB cluster should be associated with the specified CharacterSet. copyTagsToSnapshot Optional boolean A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them. databaseName Optional string The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating. dbClusterIdentifier Required string The DB cluster identifier. This parameter is stored as a lowercase string. Constraints: * Must contain from 1 to 63 letters, numbers, or hyphens. * First character must be a letter. * Can't end with a hyphen or contain two consecutive hyphens. Example: my-cluster1 dbClusterParameterGroupName Optional string The name of the DB cluster parameter group to associate with this DB cluster. If you do not specify a value, then the default DB cluster parameter group for the specified DB engine and version is used. Constraints: * If supplied, must match the name of an existing DB cluster parameter group. dbSubnetGroupName Optional string A DB subnet group to associate with this DB cluster. Constraints: Must match the name of an existing DBSubnetGroup. Must not be default. Example: mySubnetgroup deletionProtection Optional boolean A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. destinationRegion Optional string DestinationRegion is used for presigning the request to a given region. domain Optional string The Active Directory directory ID to create the DB cluster in. For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the Amazon Aurora User Guide. domainIAMRoleName Optional string Specify the name of the IAM role to be used when making API calls to the Directory Service. enableCloudwatchLogsExports Optional array The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the Amazon Aurora User Guide. Aurora MySQL Possible values are audit, error, general, and slowquery. Aurora PostgreSQL Possible values are postgresql and upgrade. enableCloudwatchLogsExports.[] Required string enableHTTPEndpoint Optional boolean A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled. When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor. For more information, see Using the Data API for Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide. enableIAMDatabaseAuthentication Optional boolean A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For more information, see IAM Database Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the Amazon Aurora User Guide. engine Required string The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora), and aurora-postgresql engineMode Optional string The DB engine mode of the DB cluster, either provisioned, serverless, parallelquery, global, or multimaster. The parallelquery engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions. The global engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and global engine mode isn't required for any 2.x versions. The multimaster engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a. For Aurora PostgreSQL, the global engine mode isn't required, and both the parallelquery and the multimaster engine modes currently aren't supported. Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the Amazon Aurora User Guide: * Limitations of Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations) * Limitations of Parallel Query (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations) * Limitations of Aurora Global Databases (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations) * Limitations of Multi-Master Clusters (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations) engineVersion Optional string The version number of the database engine to use. To list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command: aws rds describe-db-engine-versions --engine aurora --query \"DBEngineVersions[].EngineVersion\" To list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command: aws rds describe-db-engine-versions --engine aurora-mysql --query \"DBEngineVersions[].EngineVersion\" To list all of the available engine versions for aurora-postgresql, use the following command: aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\" Aurora MySQL Example: 5.6.10a, 5.6.mysql_aurora.1.19.2, 5.7.12, 5.7.mysql_aurora.2.04.5 Aurora PostgreSQL Example: 9.6.3, 10.7 globalClusterIdentifier Optional string The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster. kmsKeyID Optional string The AWS KMS key identifier for an encrypted DB cluster. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). To use a CMK in a different AWS account, specify the key ARN or alias ARN. When a CMK isn't specified in KmsKeyId: * If ReplicationSourceIdentifier identifies an encrypted source, then Amazon RDS will use the CMK used to encrypt the source. Otherwise, Amazon RDS will use your default CMK. * If the StorageEncrypted parameter is enabled and ReplicationSourceIdentifier isn't specified, then Amazon RDS will use your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. If you create a read replica of an encrypted DB cluster in another AWS Region, you must set KmsKeyId to a AWS KMS key identifier that is valid in the destination AWS Region. This CMK is used to encrypt the read replica in that AWS Region. masterUserPassword Optional object The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\". Constraints: Must contain from 8 to 41 characters. masterUserPassword.key Required string Key is the key within the secret masterUserPassword.name Optional string Name is unique within a namespace to reference a secret resource. masterUserPassword.namespace Optional string Namespace defines the space within which the secret name must be unique. masterUsername Optional string The name of the master user for the DB cluster. Constraints: * Must be 1 to 16 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. optionGroupName Optional string A value that indicates that the DB cluster should be associated with the specified option group. Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster. port Optional integer The port number on which the instances in the DB cluster accept connections. Default: 3306 if engine is set as aurora or 5432 if set to aurora-postgresql. preSignedURL Optional string A URL that contains a Signature Version 4 signed request for the CreateDBCluster action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify PreSignedUrl when you are performing cross-region replication from an encrypted DB cluster. The pre-signed URL must be a valid request for the CreateDBCluster API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied. The pre-signed URL request must contain the following parameter values: * KmsKeyId - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same AWS KMS CMK for both the CreateDBCluster action that is called in the destination AWS Region, and the action contained in the pre-signed URL. * DestinationRegion - The name of the AWS Region that Aurora read replica will be created in. * ReplicationSourceIdentifier - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your ReplicationSourceIdentifier would look like Example: arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1. To learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html) and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html). If you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region. preferredBackupWindow Optional string The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the Amazon Aurora User Guide. Constraints: * Must be in the format hh24:mi-hh24:mi. * Must be in Universal Coordinated Time (UTC). * Must not conflict with the preferred maintenance window. * Must be at least 30 minutes. preferredMaintenanceWindow Optional string The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the Amazon Aurora User Guide. Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window. replicationSourceIdentifier Optional string The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica. scalingConfiguration Optional object For DB clusters in serverless DB engine mode, the scaling properties of the DB cluster. scalingConfiguration.autoPause Optional boolean scalingConfiguration.maxCapacity Optional integer scalingConfiguration.minCapacity Optional integer scalingConfiguration.secondsUntilAutoPause Optional integer scalingConfiguration.timeoutAction Optional string sourceRegion Optional string SourceRegion is the source region where the resource exists. This is not sent over the wire and is only used for presigning. This value should always have the same region as the source ARN. storageEncrypted Optional boolean A value that indicates whether the DB cluster is encrypted. tags Optional array Tags to assign to the DB cluster. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string vpcSecurityGroupIDs Optional array A list of EC2 VPC security groups to associate with this DB cluster. vpcSecurityGroupIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string activityStreamKMSKeyID : string activityStreamKinesisStreamName : string activityStreamMode : string activityStreamStatus : string allocatedStorage : integer associatedRoles : - featureName : string roleARN : string status : string backtrackConsumedChangeRecords : integer capacity : integer cloneGroupID : string clusterCreateTime : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string crossAccountClone : boolean customEndpoints : - string dbClusterMembers : - dbClusterParameterGroupStatus : string dbInstanceIdentifier : string isClusterWriter : boolean promotionTier : integer dbClusterOptionGroupMemberships : - dbClusterOptionGroupName : string status : string dbClusterParameterGroup : string dbClusterResourceID : string dbSubnetGroup : string domainMemberships : - domain : string fQDN : string iamRoleName : string status : string earliestBacktrackTime : string earliestRestorableTime : string enabledCloudwatchLogsExports : - string endpoint : string globalWriteForwardingRequested : boolean globalWriteForwardingStatus : string hostedZoneID : string httpEndpointEnabled : boolean iamDatabaseAuthenticationEnabled : boolean latestRestorableTime : string multiAZ : boolean pendingModifiedValues : dbClusterIdentifier : string engineVersion : string iamDatabaseAuthenticationEnabled : boolean masterUserPassword : string pendingCloudwatchLogsExports : logTypesToDisable : - string logTypesToEnable : - string percentProgress : string readReplicaIdentifiers : - string readerEndpoint : string scalingConfigurationInfo : autoPause : boolean maxCapacity : integer minCapacity : integer secondsUntilAutoPause : integer timeoutAction : string status : string tagList : - key : string value : string vpcSecurityGroups : - status : string vpcSecurityGroupID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. activityStreamKMSKeyID Optional string The AWS KMS key identifier used for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). activityStreamKinesisStreamName Optional string The name of the Amazon Kinesis data stream used for the database activity stream. activityStreamMode Optional string The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. activityStreamStatus Optional string The status of the database activity stream. allocatedStorage Optional integer For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed. associatedRoles Optional array Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf. associatedRoles.[] Required object Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster. associatedRoles.[].roleARN Optional string associatedRoles.[].status Optional string backtrackConsumedChangeRecords Optional integer The number of change records stored for Backtrack. capacity Optional integer The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused. For more information about Aurora Serverless, see Using Amazon Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide. cloneGroupID Optional string Identifies the clone group to which the DB cluster is associated. clusterCreateTime Optional string Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC). conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition crossAccountClone Optional boolean Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account. customEndpoints Optional array Identifies all custom endpoints associated with the cluster. customEndpoints.[] Required string dbClusterMembers.[] Required object Contains information about an instance that is part of a DB cluster. dbClusterMembers.[].dbInstanceIdentifier Optional string dbClusterMembers.[].isClusterWriter Optional boolean dbClusterMembers.[].promotionTier Optional integer dbClusterOptionGroupMemberships Optional array Provides the list of option group memberships for this DB cluster. dbClusterOptionGroupMemberships.[] Required object Contains status information for a DB cluster option group. dbClusterOptionGroupMemberships.[].status Optional string dbClusterParameterGroup Optional string Specifies the name of the DB cluster parameter group for the DB cluster. dbClusterResourceID Optional string The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS CMK for the DB cluster is accessed. dbSubnetGroup Optional string Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group. domainMemberships Optional array The Active Directory Domain membership records associated with the DB cluster. domainMemberships.[] Required object An Active Directory Domain membership record associated with the DB instance or cluster. domainMemberships.[].fQDN Optional string domainMemberships.[].iamRoleName Optional string domainMemberships.[].status Optional string earliestBacktrackTime Optional string The earliest time to which a DB cluster can be backtracked. earliestRestorableTime Optional string The earliest time to which a database can be restored with point-in-time restore. enabledCloudwatchLogsExports Optional array A list of log types that this DB cluster is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html) in the Amazon Aurora User Guide. enabledCloudwatchLogsExports.[] Required string globalWriteForwardingRequested Optional boolean Specifies whether you have requested to enable write forwarding for a secondary cluster in an Aurora global database. Because write forwarding takes time to enable, check the value of GlobalWriteForwardingStatus to confirm that the request has completed before using the write forwarding feature for this cluster. globalWriteForwardingStatus Optional string Specifies whether a secondary cluster in an Aurora global database has write forwarding enabled, not enabled, or is in the process of enabling it. hostedZoneID Optional string Specifies the ID that Amazon Route 53 assigns when you create a hosted zone. httpEndpointEnabled Optional boolean A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled. When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor. For more information, see Using the Data API for Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide. iamDatabaseAuthenticationEnabled Optional boolean A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. latestRestorableTime Optional string Specifies the latest time to which a database can be restored with point-in-time restore. multiAZ Optional boolean Specifies whether the DB cluster has instances in multiple Availability Zones. pendingModifiedValues Optional object A value that specifies that changes to the DB cluster are pending. This element is only included when changes are pending. Specific changes are identified by subelements. pendingModifiedValues.dbClusterIdentifier Optional string pendingModifiedValues.engineVersion Optional string pendingModifiedValues.iamDatabaseAuthenticationEnabled Optional boolean pendingModifiedValues.masterUserPassword Optional string pendingModifiedValues.pendingCloudwatchLogsExports Optional object A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable Optional array pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable.[] Required string pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable.[] Required string readReplicaIdentifiers Optional array Contains one or more identifiers of the read replicas associated with this DB cluster. readReplicaIdentifiers.[] Required string scalingConfigurationInfo Optional object Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode. For more information, see Using Amazon Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide. scalingConfigurationInfo.autoPause Optional boolean scalingConfigurationInfo.maxCapacity Optional integer scalingConfigurationInfo.minCapacity Optional integer scalingConfigurationInfo.secondsUntilAutoPause Optional integer scalingConfigurationInfo.timeoutAction Optional string status Optional string Specifies the current state of this DB cluster. tagList Optional array tagList.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tagList.[].value Optional string vpcSecurityGroups Optional array Provides a list of VPC security groups that the DB cluster belongs to. vpcSecurityGroups.[] Required object This data type is used as a response element for queries on VPC security group membership. vpcSecurityGroups.[].vpcSecurityGroupID Optional string","title":"DBCluster"},{"location":"reference/RDS/v1alpha1/DBCluster/#dbcluster","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBCluster","title":"DBCluster"},{"location":"reference/RDS/v1alpha1/DBCluster/#metadata","text":"Property Value Scope Namespaced Kind DBCluster ListKind DBClusterList Plural dbclusters Singular dbcluster Contains the details of an Amazon Aurora DB cluster. This data type is used as a response element in the DescribeDBClusters, StopDBCluster, and StartDBCluster actions.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBCluster/#spec","text":"availabilityZones : - string backtrackWindow : integer backupRetentionPeriod : integer characterSetName : string copyTagsToSnapshot : boolean databaseName : string dbClusterIdentifier : string dbClusterParameterGroupName : string dbSubnetGroupName : string deletionProtection : boolean destinationRegion : string domain : string domainIAMRoleName : string enableCloudwatchLogsExports : - string enableGlobalWriteForwarding : boolean enableHTTPEndpoint : boolean enableIAMDatabaseAuthentication : boolean engine : string engineMode : string engineVersion : string globalClusterIdentifier : string kmsKeyID : string masterUserPassword : key : string name : string namespace : string masterUsername : string optionGroupName : string port : integer preSignedURL : string preferredBackupWindow : string preferredMaintenanceWindow : string replicationSourceIdentifier : string scalingConfiguration : autoPause : boolean maxCapacity : integer minCapacity : integer secondsUntilAutoPause : integer timeoutAction : string sourceRegion : string storageEncrypted : boolean tags : - key : string value : string vpcSecurityGroupIDs : - string Field Description availabilityZones Optional array A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on AWS Regions and Availability Zones, see Choosing the Regions and Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the Amazon Aurora User Guide. availabilityZones.[] Required string backupRetentionPeriod Optional integer The number of days for which automated backups are retained. Default: 1 Constraints: * Must be a value from 1 to 35 characterSetName Optional string A value that indicates that the DB cluster should be associated with the specified CharacterSet. copyTagsToSnapshot Optional boolean A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them. databaseName Optional string The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating. dbClusterIdentifier Required string The DB cluster identifier. This parameter is stored as a lowercase string. Constraints: * Must contain from 1 to 63 letters, numbers, or hyphens. * First character must be a letter. * Can't end with a hyphen or contain two consecutive hyphens. Example: my-cluster1 dbClusterParameterGroupName Optional string The name of the DB cluster parameter group to associate with this DB cluster. If you do not specify a value, then the default DB cluster parameter group for the specified DB engine and version is used. Constraints: * If supplied, must match the name of an existing DB cluster parameter group. dbSubnetGroupName Optional string A DB subnet group to associate with this DB cluster. Constraints: Must match the name of an existing DBSubnetGroup. Must not be default. Example: mySubnetgroup deletionProtection Optional boolean A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. destinationRegion Optional string DestinationRegion is used for presigning the request to a given region. domain Optional string The Active Directory directory ID to create the DB cluster in. For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the Amazon Aurora User Guide. domainIAMRoleName Optional string Specify the name of the IAM role to be used when making API calls to the Directory Service. enableCloudwatchLogsExports Optional array The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the Amazon Aurora User Guide. Aurora MySQL Possible values are audit, error, general, and slowquery. Aurora PostgreSQL Possible values are postgresql and upgrade. enableCloudwatchLogsExports.[] Required string enableHTTPEndpoint Optional boolean A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled. When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor. For more information, see Using the Data API for Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide. enableIAMDatabaseAuthentication Optional boolean A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. For more information, see IAM Database Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the Amazon Aurora User Guide. engine Required string The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora), and aurora-postgresql engineMode Optional string The DB engine mode of the DB cluster, either provisioned, serverless, parallelquery, global, or multimaster. The parallelquery engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions. The global engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and global engine mode isn't required for any 2.x versions. The multimaster engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a. For Aurora PostgreSQL, the global engine mode isn't required, and both the parallelquery and the multimaster engine modes currently aren't supported. Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the Amazon Aurora User Guide: * Limitations of Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations) * Limitations of Parallel Query (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations) * Limitations of Aurora Global Databases (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations) * Limitations of Multi-Master Clusters (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations) engineVersion Optional string The version number of the database engine to use. To list all of the available engine versions for aurora (for MySQL 5.6-compatible Aurora), use the following command: aws rds describe-db-engine-versions --engine aurora --query \"DBEngineVersions[].EngineVersion\" To list all of the available engine versions for aurora-mysql (for MySQL 5.7-compatible Aurora), use the following command: aws rds describe-db-engine-versions --engine aurora-mysql --query \"DBEngineVersions[].EngineVersion\" To list all of the available engine versions for aurora-postgresql, use the following command: aws rds describe-db-engine-versions --engine aurora-postgresql --query \"DBEngineVersions[].EngineVersion\" Aurora MySQL Example: 5.6.10a, 5.6.mysql_aurora.1.19.2, 5.7.12, 5.7.mysql_aurora.2.04.5 Aurora PostgreSQL Example: 9.6.3, 10.7 globalClusterIdentifier Optional string The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster. kmsKeyID Optional string The AWS KMS key identifier for an encrypted DB cluster. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). To use a CMK in a different AWS account, specify the key ARN or alias ARN. When a CMK isn't specified in KmsKeyId: * If ReplicationSourceIdentifier identifies an encrypted source, then Amazon RDS will use the CMK used to encrypt the source. Otherwise, Amazon RDS will use your default CMK. * If the StorageEncrypted parameter is enabled and ReplicationSourceIdentifier isn't specified, then Amazon RDS will use your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. If you create a read replica of an encrypted DB cluster in another AWS Region, you must set KmsKeyId to a AWS KMS key identifier that is valid in the destination AWS Region. This CMK is used to encrypt the read replica in that AWS Region. masterUserPassword Optional object The password for the master database user. This password can contain any printable ASCII character except \"/\", \"\"\", or \"@\". Constraints: Must contain from 8 to 41 characters. masterUserPassword.key Required string Key is the key within the secret masterUserPassword.name Optional string Name is unique within a namespace to reference a secret resource. masterUserPassword.namespace Optional string Namespace defines the space within which the secret name must be unique. masterUsername Optional string The name of the master user for the DB cluster. Constraints: * Must be 1 to 16 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. optionGroupName Optional string A value that indicates that the DB cluster should be associated with the specified option group. Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster. port Optional integer The port number on which the instances in the DB cluster accept connections. Default: 3306 if engine is set as aurora or 5432 if set to aurora-postgresql. preSignedURL Optional string A URL that contains a Signature Version 4 signed request for the CreateDBCluster action to be called in the source AWS Region where the DB cluster is replicated from. You only need to specify PreSignedUrl when you are performing cross-region replication from an encrypted DB cluster. The pre-signed URL must be a valid request for the CreateDBCluster API action that can be executed in the source AWS Region that contains the encrypted DB cluster to be copied. The pre-signed URL request must contain the following parameter values: * KmsKeyId - The AWS KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination AWS Region. This should refer to the same AWS KMS CMK for both the CreateDBCluster action that is called in the destination AWS Region, and the action contained in the pre-signed URL. * DestinationRegion - The name of the AWS Region that Aurora read replica will be created in. * ReplicationSourceIdentifier - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source AWS Region. For example, if you are copying an encrypted DB cluster from the us-west-2 AWS Region, then your ReplicationSourceIdentifier would look like Example: arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1. To learn how to generate a Signature Version 4 signed request, see Authenticating Requests: Using Query Parameters (AWS Signature Version 4) (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html) and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html). If you are using an AWS SDK tool or the AWS CLI, you can specify SourceRegion (or --source-region for the AWS CLI) instead of specifying PreSignedUrl manually. Specifying SourceRegion autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source AWS Region. preferredBackupWindow Optional string The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the Amazon Aurora User Guide. Constraints: * Must be in the format hh24:mi-hh24:mi. * Must be in Universal Coordinated Time (UTC). * Must not conflict with the preferred maintenance window. * Must be at least 30 minutes. preferredMaintenanceWindow Optional string The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. To see the time blocks available, see Adjusting the Preferred DB Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the Amazon Aurora User Guide. Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window. replicationSourceIdentifier Optional string The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica. scalingConfiguration Optional object For DB clusters in serverless DB engine mode, the scaling properties of the DB cluster. scalingConfiguration.autoPause Optional boolean scalingConfiguration.maxCapacity Optional integer scalingConfiguration.minCapacity Optional integer scalingConfiguration.secondsUntilAutoPause Optional integer scalingConfiguration.timeoutAction Optional string sourceRegion Optional string SourceRegion is the source region where the resource exists. This is not sent over the wire and is only used for presigning. This value should always have the same region as the source ARN. storageEncrypted Optional boolean A value that indicates whether the DB cluster is encrypted. tags Optional array Tags to assign to the DB cluster. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string vpcSecurityGroupIDs Optional array A list of EC2 VPC security groups to associate with this DB cluster. vpcSecurityGroupIDs.[] Required string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBCluster/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string activityStreamKMSKeyID : string activityStreamKinesisStreamName : string activityStreamMode : string activityStreamStatus : string allocatedStorage : integer associatedRoles : - featureName : string roleARN : string status : string backtrackConsumedChangeRecords : integer capacity : integer cloneGroupID : string clusterCreateTime : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string crossAccountClone : boolean customEndpoints : - string dbClusterMembers : - dbClusterParameterGroupStatus : string dbInstanceIdentifier : string isClusterWriter : boolean promotionTier : integer dbClusterOptionGroupMemberships : - dbClusterOptionGroupName : string status : string dbClusterParameterGroup : string dbClusterResourceID : string dbSubnetGroup : string domainMemberships : - domain : string fQDN : string iamRoleName : string status : string earliestBacktrackTime : string earliestRestorableTime : string enabledCloudwatchLogsExports : - string endpoint : string globalWriteForwardingRequested : boolean globalWriteForwardingStatus : string hostedZoneID : string httpEndpointEnabled : boolean iamDatabaseAuthenticationEnabled : boolean latestRestorableTime : string multiAZ : boolean pendingModifiedValues : dbClusterIdentifier : string engineVersion : string iamDatabaseAuthenticationEnabled : boolean masterUserPassword : string pendingCloudwatchLogsExports : logTypesToDisable : - string logTypesToEnable : - string percentProgress : string readReplicaIdentifiers : - string readerEndpoint : string scalingConfigurationInfo : autoPause : boolean maxCapacity : integer minCapacity : integer secondsUntilAutoPause : integer timeoutAction : string status : string tagList : - key : string value : string vpcSecurityGroups : - status : string vpcSecurityGroupID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. activityStreamKMSKeyID Optional string The AWS KMS key identifier used for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). activityStreamKinesisStreamName Optional string The name of the Amazon Kinesis data stream used for the database activity stream. activityStreamMode Optional string The mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. activityStreamStatus Optional string The status of the database activity stream. allocatedStorage Optional integer For all database engines except Amazon Aurora, AllocatedStorage specifies the allocated storage size in gibibytes (GiB). For Aurora, AllocatedStorage always returns 1, because Aurora DB cluster storage size isn't fixed, but instead automatically adjusts as needed. associatedRoles Optional array Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf. associatedRoles.[] Required object Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster. associatedRoles.[].roleARN Optional string associatedRoles.[].status Optional string backtrackConsumedChangeRecords Optional integer The number of change records stored for Backtrack. capacity Optional integer The current capacity of an Aurora Serverless DB cluster. The capacity is 0 (zero) when the cluster is paused. For more information about Aurora Serverless, see Using Amazon Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide. cloneGroupID Optional string Identifies the clone group to which the DB cluster is associated. clusterCreateTime Optional string Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC). conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition crossAccountClone Optional boolean Specifies whether the DB cluster is a clone of a DB cluster owned by a different AWS account. customEndpoints Optional array Identifies all custom endpoints associated with the cluster. customEndpoints.[] Required string dbClusterMembers.[] Required object Contains information about an instance that is part of a DB cluster. dbClusterMembers.[].dbInstanceIdentifier Optional string dbClusterMembers.[].isClusterWriter Optional boolean dbClusterMembers.[].promotionTier Optional integer dbClusterOptionGroupMemberships Optional array Provides the list of option group memberships for this DB cluster. dbClusterOptionGroupMemberships.[] Required object Contains status information for a DB cluster option group. dbClusterOptionGroupMemberships.[].status Optional string dbClusterParameterGroup Optional string Specifies the name of the DB cluster parameter group for the DB cluster. dbClusterResourceID Optional string The AWS Region-unique, immutable identifier for the DB cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS CMK for the DB cluster is accessed. dbSubnetGroup Optional string Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group. domainMemberships Optional array The Active Directory Domain membership records associated with the DB cluster. domainMemberships.[] Required object An Active Directory Domain membership record associated with the DB instance or cluster. domainMemberships.[].fQDN Optional string domainMemberships.[].iamRoleName Optional string domainMemberships.[].status Optional string earliestBacktrackTime Optional string The earliest time to which a DB cluster can be backtracked. earliestRestorableTime Optional string The earliest time to which a database can be restored with point-in-time restore. enabledCloudwatchLogsExports Optional array A list of log types that this DB cluster is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html) in the Amazon Aurora User Guide. enabledCloudwatchLogsExports.[] Required string globalWriteForwardingRequested Optional boolean Specifies whether you have requested to enable write forwarding for a secondary cluster in an Aurora global database. Because write forwarding takes time to enable, check the value of GlobalWriteForwardingStatus to confirm that the request has completed before using the write forwarding feature for this cluster. globalWriteForwardingStatus Optional string Specifies whether a secondary cluster in an Aurora global database has write forwarding enabled, not enabled, or is in the process of enabling it. hostedZoneID Optional string Specifies the ID that Amazon Route 53 assigns when you create a hosted zone. httpEndpointEnabled Optional boolean A value that indicates whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled. When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor. For more information, see Using the Data API for Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the Amazon Aurora User Guide. iamDatabaseAuthenticationEnabled Optional boolean A value that indicates whether the mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. latestRestorableTime Optional string Specifies the latest time to which a database can be restored with point-in-time restore. multiAZ Optional boolean Specifies whether the DB cluster has instances in multiple Availability Zones. pendingModifiedValues Optional object A value that specifies that changes to the DB cluster are pending. This element is only included when changes are pending. Specific changes are identified by subelements. pendingModifiedValues.dbClusterIdentifier Optional string pendingModifiedValues.engineVersion Optional string pendingModifiedValues.iamDatabaseAuthenticationEnabled Optional boolean pendingModifiedValues.masterUserPassword Optional string pendingModifiedValues.pendingCloudwatchLogsExports Optional object A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable Optional array pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable.[] Required string pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable.[] Required string readReplicaIdentifiers Optional array Contains one or more identifiers of the read replicas associated with this DB cluster. readReplicaIdentifiers.[] Required string scalingConfigurationInfo Optional object Shows the scaling configuration for an Aurora DB cluster in serverless DB engine mode. For more information, see Using Amazon Aurora Serverless (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the Amazon Aurora User Guide. scalingConfigurationInfo.autoPause Optional boolean scalingConfigurationInfo.maxCapacity Optional integer scalingConfigurationInfo.minCapacity Optional integer scalingConfigurationInfo.secondsUntilAutoPause Optional integer scalingConfigurationInfo.timeoutAction Optional string status Optional string Specifies the current state of this DB cluster. tagList Optional array tagList.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tagList.[].value Optional string vpcSecurityGroups Optional array Provides a list of VPC security groups that the DB cluster belongs to. vpcSecurityGroups.[] Required object This data type is used as a response element for queries on VPC security group membership. vpcSecurityGroups.[].vpcSecurityGroupID Optional string","title":"Status"},{"location":"reference/RDS/v1alpha1/DBClusterParameterGroup/","text":"DBClusterParameterGroup \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBClusterParameterGroup Metadata \u00b6 Property Value Scope Namespaced Kind DBClusterParameterGroup ListKind DBClusterParameterGroupList Plural dbclusterparametergroups Singular dbclusterparametergroup Contains the details of an Amazon RDS DB cluster parameter group. This data type is used as a response element in the DescribeDBClusterParameterGroups action. Spec \u00b6 description : string family : string name : string parameters : - allowedValues : string applyMethod : string applyType : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string supportedEngineModes : - string tags : - key : string value : string Field Description description Required string The description for the DB cluster parameter group. family Required string The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family. Aurora MySQL Example: aurora5.6, aurora-mysql5.7 Aurora PostgreSQL Example: aurora-postgresql9.6 name Required string The name of the DB cluster parameter group. Constraints: * Must match the name of an existing DB cluster parameter group. This value is stored as a lowercase string. parameters Optional array A list of parameters in the DB cluster parameter group to modify. parameters.[] Required object This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions. parameters.[].applyMethod Optional string parameters.[].applyType Optional string parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string parameters.[].supportedEngineModes Optional array parameters.[].supportedEngineModes.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"DBClusterParameterGroup"},{"location":"reference/RDS/v1alpha1/DBClusterParameterGroup/#dbclusterparametergroup","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBClusterParameterGroup","title":"DBClusterParameterGroup"},{"location":"reference/RDS/v1alpha1/DBClusterParameterGroup/#metadata","text":"Property Value Scope Namespaced Kind DBClusterParameterGroup ListKind DBClusterParameterGroupList Plural dbclusterparametergroups Singular dbclusterparametergroup Contains the details of an Amazon RDS DB cluster parameter group. This data type is used as a response element in the DescribeDBClusterParameterGroups action.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBClusterParameterGroup/#spec","text":"description : string family : string name : string parameters : - allowedValues : string applyMethod : string applyType : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string supportedEngineModes : - string tags : - key : string value : string Field Description description Required string The description for the DB cluster parameter group. family Required string The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family. Aurora MySQL Example: aurora5.6, aurora-mysql5.7 Aurora PostgreSQL Example: aurora-postgresql9.6 name Required string The name of the DB cluster parameter group. Constraints: * Must match the name of an existing DB cluster parameter group. This value is stored as a lowercase string. parameters Optional array A list of parameters in the DB cluster parameter group to modify. parameters.[] Required object This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions. parameters.[].applyMethod Optional string parameters.[].applyType Optional string parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string parameters.[].supportedEngineModes Optional array parameters.[].supportedEngineModes.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBClusterParameterGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/RDS/v1alpha1/DBInstance/","text":"DBInstance \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBInstance Metadata \u00b6 Property Value Scope Namespaced Kind DBInstance ListKind DBInstanceList Plural dbinstances Singular dbinstance Contains the details of an Amazon RDS DB instance. This data type is used as a response element in the DescribeDBInstances action. Spec \u00b6 allocatedStorage : integer autoMinorVersionUpgrade : boolean availabilityZone : string backupRetentionPeriod : integer characterSetName : string copyTagsToSnapshot : boolean dbClusterIdentifier : string dbInstanceClass : string dbInstanceIdentifier : string dbName : string dbParameterGroupName : string dbSecurityGroupNames : - string dbSubnetGroupName : string deletionProtection : boolean domain : string domainIAMRoleName : string enableCloudwatchLogsExports : - string enableCustomerOwnedIP : boolean enableIAMDatabaseAuthentication : boolean enablePerformanceInsights : boolean engine : string engineVersion : string iops : integer kmsKeyID : string licenseModel : string masterUserPassword : key : string name : string namespace : string masterUsername : string maxAllocatedStorage : integer monitoringInterval : integer monitoringRoleARN : string multiAZ : boolean ncharCharacterSetName : string optionGroupName : string performanceInsightsKMSKeyID : string performanceInsightsRetentionPeriod : integer port : integer preferredBackupWindow : string preferredMaintenanceWindow : string processorFeatures : - name : string value : string promotionTier : integer publiclyAccessible : boolean storageEncrypted : boolean storageType : string tags : - key : string value : string tdeCredentialARN : string tdeCredentialPassword : string timezone : string vpcSecurityGroupIDs : - string Field Description allocatedStorage Optional integer The amount of storage (in gibibytes) to allocate for the DB instance. Type: Integer Amazon Aurora Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume. MySQL Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. MariaDB Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. PostgreSQL Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. Oracle Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 10 to 3072. SQL Server Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Enterprise and Standard editions: Must be an integer from 200 to 16384. Web and Express editions: Must be an integer from 20 to 16384. * Provisioned IOPS storage (io1): Enterprise and Standard editions: Must be an integer from 200 to 16384. Web and Express editions: Must be an integer from 100 to 16384. * Magnetic storage (standard): Enterprise and Standard editions: Must be an integer from 200 to 1024. Web and Express editions: Must be an integer from 20 to 1024. autoMinorVersionUpgrade Optional boolean A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically. availabilityZone Optional string The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones, see Regions and Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html). Default: A random, system-chosen Availability Zone in the endpoint's AWS Region. Example: us-east-1d Constraint: The AvailabilityZone parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint. If you're creating a DB instance in an RDS on VMware environment, specify the identifier of the custom Availability Zone to create the DB instance in. For more information about RDS on VMware, see the RDS on VMware User Guide. (https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html) backupRetentionPeriod Optional integer The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. Amazon Aurora Not applicable. The retention period for automated backups is managed by the DB cluster. Default: 1 Constraints: * Must be a value from 0 to 35 * Can't be set to 0 if the DB instance is a source to read replicas characterSetName Optional string For supported engines, indicates that the DB instance should be associated with the specified CharacterSet. Amazon Aurora Not applicable. The character set is managed by the DB cluster. For more information, see CreateDBCluster. copyTagsToSnapshot Optional boolean A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied. Amazon Aurora Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. dbClusterIdentifier Optional string The identifier of the DB cluster that the instance will belong to. dbInstanceClass Required string The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. dbInstanceIdentifier Required string The DB instance identifier. This parameter is stored as a lowercase string. Constraints: * Must contain from 1 to 63 letters, numbers, or hyphens. * First character must be a letter. * Can't end with a hyphen or contain two consecutive hyphens. Example: mydbinstance dbName Optional string The meaning of this parameter differs according to the database engine you use. MySQL The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: * Must contain 1 to 64 letters or numbers. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine MariaDB The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: * Must contain 1 to 64 letters or numbers. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine PostgreSQL The name of the database to create when the DB instance is created. If this parameter isn't specified, a database named postgres is created in the DB instance. Constraints: * Must contain 1 to 63 letters, numbers, or underscores. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine Oracle The Oracle System ID (SID) of the created DB instance. If you specify null, the default value ORCL is used. You can't specify the string NULL, or any other reserved word, for DBName. Default: ORCL Constraints: * Can't be longer than 8 characters SQL Server Not applicable. Must be null. Amazon Aurora MySQL The name of the database to create when the primary DB instance of the Aurora MySQL DB cluster is created. If this parameter isn't specified for an Aurora MySQL DB cluster, no database is created in the DB cluster. Constraints: * It must contain 1 to 64 alphanumeric characters. * It can't be a word reserved by the database engine. Amazon Aurora PostgreSQL The name of the database to create when the primary DB instance of the Aurora PostgreSQL DB cluster is created. If this parameter isn't specified for an Aurora PostgreSQL DB cluster, a database named postgres is created in the DB cluster. Constraints: * It must contain 1 to 63 alphanumeric characters. * It must begin with a letter or an underscore. Subsequent characters can be letters, underscores, or digits (0 to 9). * It can't be a word reserved by the database engine. dbParameterGroupName Optional string The name of the DB parameter group to associate with this DB instance. If you do not specify a value, then the default DB parameter group for the specified DB engine and version is used. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens dbSecurityGroupNames Optional array A list of DB security groups to associate with this DB instance. Default: The default DB security group for the database engine. dbSecurityGroupNames.[] Required string deletionProtection Optional boolean A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html). Amazon Aurora Not applicable. You can enable or disable deletion protection for the DB cluster. For more information, see CreateDBCluster. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster. domain Optional string The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain. For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in the Amazon RDS User Guide. domainIAMRoleName Optional string Specify the name of the IAM role to be used when making API calls to the Directory Service. enableCloudwatchLogsExports Optional array The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the Amazon Relational Database Service User Guide. Amazon Aurora Not applicable. CloudWatch Logs exports are managed by the DB cluster. MariaDB Possible values are audit, error, general, and slowquery. Microsoft SQL Server Possible values are agent and error. MySQL Possible values are audit, error, general, and slowquery. Oracle Possible values are alert, audit, listener, trace, and oemagent. PostgreSQL Possible values are postgresql and upgrade. enableCloudwatchLogsExports.[] Required string enableIAMDatabaseAuthentication Optional boolean A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. This setting doesn't apply to Amazon Aurora. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see IAM Database Authentication for MySQL and PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the Amazon RDS User Guide. enablePerformanceInsights Optional boolean A value that indicates whether to enable Performance Insights for the DB instance. For more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the Amazon Relational Database Service User Guide. engine Required string The name of the database engine to be used for this instance. Not every database engine is available for every AWS Region. Valid Values: * aurora (for MySQL 5.6-compatible Aurora) * aurora-mysql (for MySQL 5.7-compatible Aurora) * aurora-postgresql * mariadb * mysql * oracle-ee * oracle-se2 * oracle-se1 * oracle-se * postgres * sqlserver-ee * sqlserver-se * sqlserver-ex * sqlserver-web engineVersion Optional string The version number of the database engine to use. For a list of valid engine versions, use the DescribeDBEngineVersions action. The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region. Amazon Aurora Not applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster. MariaDB See MariaDB on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt) in the Amazon RDS User Guide. Microsoft SQL Server See Microsoft SQL Server Versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport) in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in the Amazon RDS User Guide. Oracle See Oracle Database Engine Release Notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the Amazon RDS User Guide. PostgreSQL See Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts) in the Amazon RDS User Guide. iops Optional integer The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. For information about valid Iops values, see Amazon RDS Provisioned IOPS Storage to Improve Performance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, must be a multiple between .5 and 50 of the storage amount for the DB instance. For SQL Server DB instances, must be a multiple between 1 and 50 of the storage amount for the DB instance. kmsKeyID Optional string The AWS KMS key identifier for an encrypted DB instance. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). To use a CMK in a different AWS account, specify the key ARN or alias ARN. Amazon Aurora Not applicable. The AWS KMS key identifier is managed by the DB cluster. For more information, see CreateDBCluster. If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS uses your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. licenseModel Optional string License model information for this DB instance. Valid values: license-included masterUserPassword Optional object The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\". Amazon Aurora Not applicable. The password for the master user is managed by the DB cluster. MariaDB Constraints: Must contain from 8 to 41 characters. Microsoft SQL Server Constraints: Must contain from 8 to 128 characters. MySQL Constraints: Must contain from 8 to 41 characters. Oracle Constraints: Must contain from 8 to 30 characters. PostgreSQL Constraints: Must contain from 8 to 128 characters. masterUserPassword.key Required string Key is the key within the secret masterUserPassword.name Optional string Name is unique within a namespace to reference a secret resource. masterUserPassword.namespace Optional string Namespace defines the space within which the secret name must be unique. masterUsername Optional string The name for the master user. Amazon Aurora Not applicable. The name for the master user is managed by the DB cluster. MariaDB Constraints: * Required for MariaDB. * Must be 1 to 16 letters or numbers. * Can't be a reserved word for the chosen database engine. Microsoft SQL Server Constraints: * Required for SQL Server. * Must be 1 to 128 letters or numbers. * The first character must be a letter. * Can't be a reserved word for the chosen database engine. MySQL Constraints: * Required for MySQL. * Must be 1 to 16 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. Oracle Constraints: * Required for Oracle. * Must be 1 to 30 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. PostgreSQL Constraints: * Required for PostgreSQL. * Must be 1 to 63 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. maxAllocatedStorage Optional integer The upper limit to which Amazon RDS can automatically scale the storage of the DB instance. For more information about this setting, including limitations that apply to it, see Managing capacity automatically with Amazon RDS storage autoscaling (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling) in the Amazon RDS User Guide. monitoringInterval Optional integer The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. If MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0. Valid Values: 0, 1, 5, 10, 15, 30, 60 monitoringRoleARN Optional string The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role, go to Setting Up and Enabling Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the Amazon RDS User Guide. If MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value. multiAZ Optional boolean A value that indicates whether the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment. ncharCharacterSetName Optional string The name of the NCHAR character set for the Oracle DB instance. optionGroupName Optional string A value that indicates that the DB instance should be associated with the specified option group. Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance once it is associated with a DB instance performanceInsightsKMSKeyID Optional string The AWS KMS key identifier for encryption of Performance Insights data. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). If you do not specify a value for PerformanceInsightsKMSKeyId, then Amazon RDS uses your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. performanceInsightsRetentionPeriod Optional integer The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). port Optional integer The port number on which the database accepts connections. MySQL Default: 3306 Valid values: 1150-65535 Type: Integer MariaDB Default: 3306 Valid values: 1150-65535 Type: Integer PostgreSQL Default: 5432 Valid values: 1150-65535 Type: Integer Oracle Default: 1521 Valid values: 1150-65535 SQL Server Default: 1433 Valid values: 1150-65535 except 1234, 1434, 3260, 3343, 3389, 47001, and 49152-49156. Amazon Aurora Default: 3306 Valid values: 1150-65535 Type: Integer preferredBackupWindow Optional string The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. For more information, see The Backup Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow) in the Amazon RDS User Guide. Amazon Aurora Not applicable. The daily time range for creating automated backups is managed by the DB cluster. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Instance Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow) in the Amazon RDS User Guide. Constraints: * Must be in the format hh24:mi-hh24:mi. * Must be in Universal Coordinated Time (UTC). * Must not conflict with the preferred maintenance window. * Must be at least 30 minutes. preferredMaintenanceWindow Optional string The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance). Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window. processorFeatures Optional array The number of CPU cores and the number of threads per core for the DB instance class of the DB instance. processorFeatures.[] Required object Contains the processor features of a DB instance class. To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter. You can set the processor features of the DB instance class for a DB instance when you call one of the following actions: * CreateDBInstance * ModifyDBInstance * RestoreDBInstanceFromDBSnapshot * RestoreDBInstanceFromS3 * RestoreDBInstanceToPointInTime You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter. In addition, you can use the following actions for DB instance class processor information: * DescribeDBInstances * DescribeDBSnapshots * DescribeValidDBInstanceModifications If you call DescribeDBInstances, ProcessorFeature returns non-null values only if the following conditions are met: * You are accessing an Oracle DB instance. * Your Oracle DB instance class supports configuring the number of CPU cores and threads per core. * The current number CPU cores and threads is set to a non-default value. For more information, see Configuring the Processor of the DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor) in the Amazon RDS User Guide. processorFeatures.[].value Optional string promotionTier Optional integer A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance) in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 - 15 publiclyAccessible Optional boolean A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, its DNS endpoint resolves to the private IP address from within the DB instance's VPC, and to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses, and that public access is not permitted if the security group assigned to the DB instance doesn't permit it. When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address. Default: The default behavior varies depending on whether DBSubnetGroupName is specified. If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified, the following applies: * If the default VPC in the target region doesn\u2019t have an Internet gateway attached to it, the DB instance is private. * If the default VPC in the target region has an Internet gateway attached to it, the DB instance is public. If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified, the following applies: * If the subnets are part of a VPC that doesn\u2019t have an Internet gateway attached to it, the DB instance is private. * If the subnets are part of a VPC that has an Internet gateway attached to it, the DB instance is public. storageEncrypted Optional boolean A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted. Amazon Aurora Not applicable. The encryption for DB instances is managed by the DB cluster. storageType Optional string Specifies the storage type to be associated with the DB instance. Valid values: standard tags Optional array Tags to assign to the DB instance. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string tdeCredentialARN Optional string The ARN from the key store with which to associate the instance for TDE encryption. tdeCredentialPassword Optional string The password for the given ARN from the key store in order to access the device. timezone Optional string The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone). vpcSecurityGroupIDs Optional array A list of Amazon EC2 VPC security groups to associate with this DB instance. Amazon Aurora Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. Default: The default EC2 VPC security group for the DB subnet group's VPC. vpcSecurityGroupIDs.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string associatedRoles : - featureName : string roleARN : string status : string caCertificateIdentifier : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string customerOwnedIPEnabled : boolean dbInstanceAutomatedBackupsReplications : - dbInstanceAutomatedBackupsARN : string dbInstancePort : integer dbInstanceStatus : string dbParameterGroups : - dbParameterGroupName : string parameterApplyStatus : string dbSubnetGroup : dbSubnetGroupARN : string dbSubnetGroupDescription : string dbSubnetGroupName : string subnetGroupStatus : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : arn : string subnetStatus : string vpcID : string dbiResourceID : string domainMemberships : - domain : string fQDN : string iamRoleName : string status : string enabledCloudwatchLogsExports : - string endpoint : address : string hostedZoneID : string port : integer enhancedMonitoringResourceARN : string iamDatabaseAuthenticationEnabled : boolean instanceCreateTime : string latestRestorableTime : string listenerEndpoint : address : string hostedZoneID : string port : integer optionGroupMemberships : - optionGroupName : string status : string pendingModifiedValues : allocatedStorage : integer backupRetentionPeriod : integer caCertificateIdentifier : string dbInstanceClass : string dbInstanceIdentifier : string dbSubnetGroupName : string engineVersion : string iamDatabaseAuthenticationEnabled : boolean iops : integer licenseModel : string masterUserPassword : string multiAZ : boolean pendingCloudwatchLogsExports : logTypesToDisable : - string logTypesToEnable : - string port : integer processorFeatures : - name : string value : string storageType : string performanceInsightsEnabled : boolean readReplicaDBClusterIdentifiers : - string readReplicaDBInstanceIdentifiers : - string readReplicaSourceDBInstanceIdentifier : string replicaMode : string secondaryAvailabilityZone : string statusInfos : - message : string normal : boolean status : string statusType : string tagList : - key : string value : string vpcSecurityGroups : - status : string vpcSecurityGroupID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. associatedRoles Optional array The AWS Identity and Access Management (IAM) roles associated with the DB instance. associatedRoles.[] Required object Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance. associatedRoles.[].roleARN Optional string associatedRoles.[].status Optional string caCertificateIdentifier Optional string The identifier of the CA certificate for this DB instance. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition customerOwnedIPEnabled Optional boolean Specifies whether a customer-owned IP address (CoIP) is enabled for an RDS on Outposts DB instance. A CoIP provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network. For more information about RDS on Outposts, see Working with Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing) in the AWS Outposts User Guide. dbInstanceAutomatedBackupsReplications Optional array The list of replicated automated backups associated with the DB instance. dbInstanceAutomatedBackupsReplications.[] Required object Automated backups of a DB instance replicated to another AWS Region. They consist of system backups, transaction logs, and database instance properties. dbInstancePort Optional integer Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port. dbInstanceStatus Optional string Specifies the current state of this database. For information about DB instance statuses, see DB Instance Status (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Status.html) in the Amazon RDS User Guide. dbParameterGroups Optional array Provides the list of DB parameter groups applied to this DB instance. dbParameterGroups.[] Required object The status of the DB parameter group. This data type is used as a response element in the following actions: * CreateDBInstance * CreateDBInstanceReadReplica * DeleteDBInstance * ModifyDBInstance * RebootDBInstance * RestoreDBInstanceFromDBSnapshot dbParameterGroups.[].parameterApplyStatus Optional string dbSubnetGroup Optional object Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group. dbSubnetGroup.dbSubnetGroupARN Optional string dbSubnetGroup.dbSubnetGroupDescription Optional string dbSubnetGroup.dbSubnetGroupName Optional string dbSubnetGroup.subnetGroupStatus Optional string dbSubnetGroup.subnets Optional array dbSubnetGroup.subnets.[] Required object This data type is used as a response element for the DescribeDBSubnetGroups operation. dbSubnetGroup.subnets.[].subnetAvailabilityZone.name Optional string dbSubnetGroup.subnets.[].subnetIdentifier Optional string dbSubnetGroup.subnets.[].subnetOutpost Optional object A data type that represents an Outpost. For more information about RDS on Outposts, see Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. dbSubnetGroup.subnets.[].subnetOutpost.arn Optional string dbSubnetGroup.subnets.[].subnetStatus Optional string dbSubnetGroup.vpcID Optional string dbiResourceID Optional string The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the DB instance is accessed. domainMemberships Optional array The Active Directory Domain membership records associated with the DB instance. domainMemberships.[] Required object An Active Directory Domain membership record associated with the DB instance or cluster. domainMemberships.[].fQDN Optional string domainMemberships.[].iamRoleName Optional string domainMemberships.[].status Optional string enabledCloudwatchLogsExports Optional array A list of log types that this DB instance is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html) in the Amazon RDS User Guide. enabledCloudwatchLogsExports.[] Required string endpoint.address Optional string endpoint.hostedZoneID Optional string endpoint.port Optional integer enhancedMonitoringResourceARN Optional string The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance. iamDatabaseAuthenticationEnabled Optional boolean True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false. IAM database authentication can be enabled for the following database engines * For MySQL 5.6, minor version 5.6.34 or higher * For MySQL 5.7, minor version 5.7.16 or higher * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type. instanceCreateTime Optional string Provides the date and time the DB instance was created. latestRestorableTime Optional string Specifies the latest time to which a database can be restored with point-in-time restore. listenerEndpoint Optional object Specifies the listener connection endpoint for SQL Server Always On. listenerEndpoint.address Optional string listenerEndpoint.hostedZoneID Optional string listenerEndpoint.port Optional integer optionGroupMemberships Optional array Provides the list of option group memberships for this DB instance. optionGroupMemberships.[] Required object Provides information on the option groups the DB instance is a member of. optionGroupMemberships.[].status Optional string pendingModifiedValues Optional object A value that specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. pendingModifiedValues.allocatedStorage Optional integer pendingModifiedValues.backupRetentionPeriod Optional integer pendingModifiedValues.caCertificateIdentifier Optional string pendingModifiedValues.dbInstanceClass Optional string pendingModifiedValues.dbInstanceIdentifier Optional string pendingModifiedValues.dbSubnetGroupName Optional string pendingModifiedValues.engineVersion Optional string pendingModifiedValues.iamDatabaseAuthenticationEnabled Optional boolean pendingModifiedValues.iops Optional integer pendingModifiedValues.licenseModel Optional string pendingModifiedValues.masterUserPassword Optional string pendingModifiedValues.multiAZ Optional boolean pendingModifiedValues.pendingCloudwatchLogsExports Optional object A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable Optional array pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable.[] Required string pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable.[] Required string pendingModifiedValues.processorFeatures Optional array pendingModifiedValues.processorFeatures.[] Required object Contains the processor features of a DB instance class. To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter. You can set the processor features of the DB instance class for a DB instance when you call one of the following actions: * CreateDBInstance * ModifyDBInstance * RestoreDBInstanceFromDBSnapshot * RestoreDBInstanceFromS3 * RestoreDBInstanceToPointInTime You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter. In addition, you can use the following actions for DB instance class processor information: * DescribeDBInstances * DescribeDBSnapshots * DescribeValidDBInstanceModifications If you call DescribeDBInstances, ProcessorFeature returns non-null values only if the following conditions are met: * You are accessing an Oracle DB instance. * Your Oracle DB instance class supports configuring the number of CPU cores and threads per core. * The current number CPU cores and threads is set to a non-default value. For more information, see Configuring the Processor of the DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor) in the Amazon RDS User Guide. pendingModifiedValues.processorFeatures.[].value Optional string pendingModifiedValues.storageType Optional string performanceInsightsEnabled Optional boolean True if Performance Insights is enabled for the DB instance, and otherwise false. readReplicaDBClusterIdentifiers Optional array Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas. Currently, each RDS DB instance can have only one Aurora read replica. readReplicaDBClusterIdentifiers.[] Required string readReplicaDBInstanceIdentifiers.[] Required string replicaMode Optional string The open mode of an Oracle read replica. The default is open-read-only. For more information, see Working with Oracle Read Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the Amazon RDS User Guide. This attribute is only supported in RDS for Oracle. secondaryAvailabilityZone Optional string If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. statusInfos Optional array The status of a read replica. If the instance isn't a read replica, this is blank. statusInfos.[] Required object Provides a list of status information for a DB instance. statusInfos.[].normal Optional boolean statusInfos.[].status Optional string statusInfos.[].statusType Optional string tagList Optional array tagList.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tagList.[].value Optional string vpcSecurityGroups Optional array Provides a list of VPC security group elements that the DB instance belongs to. vpcSecurityGroups.[] Required object This data type is used as a response element for queries on VPC security group membership. vpcSecurityGroups.[].vpcSecurityGroupID Optional string","title":"DBInstance"},{"location":"reference/RDS/v1alpha1/DBInstance/#dbinstance","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBInstance","title":"DBInstance"},{"location":"reference/RDS/v1alpha1/DBInstance/#metadata","text":"Property Value Scope Namespaced Kind DBInstance ListKind DBInstanceList Plural dbinstances Singular dbinstance Contains the details of an Amazon RDS DB instance. This data type is used as a response element in the DescribeDBInstances action.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBInstance/#spec","text":"allocatedStorage : integer autoMinorVersionUpgrade : boolean availabilityZone : string backupRetentionPeriod : integer characterSetName : string copyTagsToSnapshot : boolean dbClusterIdentifier : string dbInstanceClass : string dbInstanceIdentifier : string dbName : string dbParameterGroupName : string dbSecurityGroupNames : - string dbSubnetGroupName : string deletionProtection : boolean domain : string domainIAMRoleName : string enableCloudwatchLogsExports : - string enableCustomerOwnedIP : boolean enableIAMDatabaseAuthentication : boolean enablePerformanceInsights : boolean engine : string engineVersion : string iops : integer kmsKeyID : string licenseModel : string masterUserPassword : key : string name : string namespace : string masterUsername : string maxAllocatedStorage : integer monitoringInterval : integer monitoringRoleARN : string multiAZ : boolean ncharCharacterSetName : string optionGroupName : string performanceInsightsKMSKeyID : string performanceInsightsRetentionPeriod : integer port : integer preferredBackupWindow : string preferredMaintenanceWindow : string processorFeatures : - name : string value : string promotionTier : integer publiclyAccessible : boolean storageEncrypted : boolean storageType : string tags : - key : string value : string tdeCredentialARN : string tdeCredentialPassword : string timezone : string vpcSecurityGroupIDs : - string Field Description allocatedStorage Optional integer The amount of storage (in gibibytes) to allocate for the DB instance. Type: Integer Amazon Aurora Not applicable. Aurora cluster volumes automatically grow as the amount of data in your database increases, though you are only charged for the space that you use in an Aurora cluster volume. MySQL Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. MariaDB Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. PostgreSQL Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 5 to 3072. Oracle Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Must be an integer from 20 to 65536. * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536. * Magnetic storage (standard): Must be an integer from 10 to 3072. SQL Server Constraints to the amount of storage for each storage type are the following: * General Purpose (SSD) storage (gp2): Enterprise and Standard editions: Must be an integer from 200 to 16384. Web and Express editions: Must be an integer from 20 to 16384. * Provisioned IOPS storage (io1): Enterprise and Standard editions: Must be an integer from 200 to 16384. Web and Express editions: Must be an integer from 100 to 16384. * Magnetic storage (standard): Enterprise and Standard editions: Must be an integer from 200 to 1024. Web and Express editions: Must be an integer from 20 to 1024. autoMinorVersionUpgrade Optional boolean A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically. availabilityZone Optional string The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones, see Regions and Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html). Default: A random, system-chosen Availability Zone in the endpoint's AWS Region. Example: us-east-1d Constraint: The AvailabilityZone parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same AWS Region as the current endpoint. If you're creating a DB instance in an RDS on VMware environment, specify the identifier of the custom Availability Zone to create the DB instance in. For more information about RDS on VMware, see the RDS on VMware User Guide. (https://docs.aws.amazon.com/AmazonRDS/latest/RDSonVMwareUserGuide/rds-on-vmware.html) backupRetentionPeriod Optional integer The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. Amazon Aurora Not applicable. The retention period for automated backups is managed by the DB cluster. Default: 1 Constraints: * Must be a value from 0 to 35 * Can't be set to 0 if the DB instance is a source to read replicas characterSetName Optional string For supported engines, indicates that the DB instance should be associated with the specified CharacterSet. Amazon Aurora Not applicable. The character set is managed by the DB cluster. For more information, see CreateDBCluster. copyTagsToSnapshot Optional boolean A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied. Amazon Aurora Not applicable. Copying tags to snapshots is managed by the DB cluster. Setting this value for an Aurora DB instance has no effect on the DB cluster setting. dbClusterIdentifier Optional string The identifier of the DB cluster that the instance will belong to. dbInstanceClass Required string The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide. dbInstanceIdentifier Required string The DB instance identifier. This parameter is stored as a lowercase string. Constraints: * Must contain from 1 to 63 letters, numbers, or hyphens. * First character must be a letter. * Can't end with a hyphen or contain two consecutive hyphens. Example: mydbinstance dbName Optional string The meaning of this parameter differs according to the database engine you use. MySQL The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: * Must contain 1 to 64 letters or numbers. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine MariaDB The name of the database to create when the DB instance is created. If this parameter isn't specified, no database is created in the DB instance. Constraints: * Must contain 1 to 64 letters or numbers. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine PostgreSQL The name of the database to create when the DB instance is created. If this parameter isn't specified, a database named postgres is created in the DB instance. Constraints: * Must contain 1 to 63 letters, numbers, or underscores. * Must begin with a letter. Subsequent characters can be letters, underscores, or digits (0-9). * Can't be a word reserved by the specified database engine Oracle The Oracle System ID (SID) of the created DB instance. If you specify null, the default value ORCL is used. You can't specify the string NULL, or any other reserved word, for DBName. Default: ORCL Constraints: * Can't be longer than 8 characters SQL Server Not applicable. Must be null. Amazon Aurora MySQL The name of the database to create when the primary DB instance of the Aurora MySQL DB cluster is created. If this parameter isn't specified for an Aurora MySQL DB cluster, no database is created in the DB cluster. Constraints: * It must contain 1 to 64 alphanumeric characters. * It can't be a word reserved by the database engine. Amazon Aurora PostgreSQL The name of the database to create when the primary DB instance of the Aurora PostgreSQL DB cluster is created. If this parameter isn't specified for an Aurora PostgreSQL DB cluster, a database named postgres is created in the DB cluster. Constraints: * It must contain 1 to 63 alphanumeric characters. * It must begin with a letter or an underscore. Subsequent characters can be letters, underscores, or digits (0 to 9). * It can't be a word reserved by the database engine. dbParameterGroupName Optional string The name of the DB parameter group to associate with this DB instance. If you do not specify a value, then the default DB parameter group for the specified DB engine and version is used. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens dbSecurityGroupNames Optional array A list of DB security groups to associate with this DB instance. Default: The default DB security group for the database engine. dbSecurityGroupNames.[] Required string deletionProtection Optional boolean A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. For more information, see Deleting a DB Instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html). Amazon Aurora Not applicable. You can enable or disable deletion protection for the DB cluster. For more information, see CreateDBCluster. DB instances in a DB cluster can be deleted even when deletion protection is enabled for the DB cluster. domain Optional string The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain. For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html) in the Amazon RDS User Guide. domainIAMRoleName Optional string Specify the name of the IAM role to be used when making API calls to the Directory Service. enableCloudwatchLogsExports Optional array The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the Amazon Relational Database Service User Guide. Amazon Aurora Not applicable. CloudWatch Logs exports are managed by the DB cluster. MariaDB Possible values are audit, error, general, and slowquery. Microsoft SQL Server Possible values are agent and error. MySQL Possible values are audit, error, general, and slowquery. Oracle Possible values are alert, audit, listener, trace, and oemagent. PostgreSQL Possible values are postgresql and upgrade. enableCloudwatchLogsExports.[] Required string enableIAMDatabaseAuthentication Optional boolean A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled. This setting doesn't apply to Amazon Aurora. Mapping AWS IAM accounts to database accounts is managed by the DB cluster. For more information, see IAM Database Authentication for MySQL and PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html) in the Amazon RDS User Guide. enablePerformanceInsights Optional boolean A value that indicates whether to enable Performance Insights for the DB instance. For more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html) in the Amazon Relational Database Service User Guide. engine Required string The name of the database engine to be used for this instance. Not every database engine is available for every AWS Region. Valid Values: * aurora (for MySQL 5.6-compatible Aurora) * aurora-mysql (for MySQL 5.7-compatible Aurora) * aurora-postgresql * mariadb * mysql * oracle-ee * oracle-se2 * oracle-se1 * oracle-se * postgres * sqlserver-ee * sqlserver-se * sqlserver-ex * sqlserver-web engineVersion Optional string The version number of the database engine to use. For a list of valid engine versions, use the DescribeDBEngineVersions action. The following are the database engines and links to information about the major and minor versions that are available with Amazon RDS. Not every database engine is available for every AWS Region. Amazon Aurora Not applicable. The version number of the database engine to be used by the DB instance is managed by the DB cluster. MariaDB See MariaDB on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt) in the Amazon RDS User Guide. Microsoft SQL Server See Microsoft SQL Server Versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport) in the Amazon RDS User Guide. MySQL See MySQL on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt) in the Amazon RDS User Guide. Oracle See Oracle Database Engine Release Notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html) in the Amazon RDS User Guide. PostgreSQL See Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts) in the Amazon RDS User Guide. iops Optional integer The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance. For information about valid Iops values, see Amazon RDS Provisioned IOPS Storage to Improve Performance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. Constraints: For MariaDB, MySQL, Oracle, and PostgreSQL DB instances, must be a multiple between .5 and 50 of the storage amount for the DB instance. For SQL Server DB instances, must be a multiple between 1 and 50 of the storage amount for the DB instance. kmsKeyID Optional string The AWS KMS key identifier for an encrypted DB instance. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). To use a CMK in a different AWS account, specify the key ARN or alias ARN. Amazon Aurora Not applicable. The AWS KMS key identifier is managed by the DB cluster. For more information, see CreateDBCluster. If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId parameter, then Amazon RDS uses your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. licenseModel Optional string License model information for this DB instance. Valid values: license-included masterUserPassword Optional object The password for the master user. The password can include any printable ASCII character except \"/\", \"\"\", or \"@\". Amazon Aurora Not applicable. The password for the master user is managed by the DB cluster. MariaDB Constraints: Must contain from 8 to 41 characters. Microsoft SQL Server Constraints: Must contain from 8 to 128 characters. MySQL Constraints: Must contain from 8 to 41 characters. Oracle Constraints: Must contain from 8 to 30 characters. PostgreSQL Constraints: Must contain from 8 to 128 characters. masterUserPassword.key Required string Key is the key within the secret masterUserPassword.name Optional string Name is unique within a namespace to reference a secret resource. masterUserPassword.namespace Optional string Namespace defines the space within which the secret name must be unique. masterUsername Optional string The name for the master user. Amazon Aurora Not applicable. The name for the master user is managed by the DB cluster. MariaDB Constraints: * Required for MariaDB. * Must be 1 to 16 letters or numbers. * Can't be a reserved word for the chosen database engine. Microsoft SQL Server Constraints: * Required for SQL Server. * Must be 1 to 128 letters or numbers. * The first character must be a letter. * Can't be a reserved word for the chosen database engine. MySQL Constraints: * Required for MySQL. * Must be 1 to 16 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. Oracle Constraints: * Required for Oracle. * Must be 1 to 30 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. PostgreSQL Constraints: * Required for PostgreSQL. * Must be 1 to 63 letters or numbers. * First character must be a letter. * Can't be a reserved word for the chosen database engine. maxAllocatedStorage Optional integer The upper limit to which Amazon RDS can automatically scale the storage of the DB instance. For more information about this setting, including limitations that apply to it, see Managing capacity automatically with Amazon RDS storage autoscaling (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling) in the Amazon RDS User Guide. monitoringInterval Optional integer The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. If MonitoringRoleArn is specified, then you must also set MonitoringInterval to a value other than 0. Valid Values: 0, 1, 5, 10, 15, 30, 60 monitoringRoleARN Optional string The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role, go to Setting Up and Enabling Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling) in the Amazon RDS User Guide. If MonitoringInterval is set to a value other than 0, then you must supply a MonitoringRoleArn value. multiAZ Optional boolean A value that indicates whether the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment. ncharCharacterSetName Optional string The name of the NCHAR character set for the Oracle DB instance. optionGroupName Optional string A value that indicates that the DB instance should be associated with the specified option group. Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group. Also, that option group can't be removed from a DB instance once it is associated with a DB instance performanceInsightsKMSKeyID Optional string The AWS KMS key identifier for encryption of Performance Insights data. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK). If you do not specify a value for PerformanceInsightsKMSKeyId, then Amazon RDS uses your default CMK. There is a default CMK for your AWS account. Your AWS account has a different default CMK for each AWS Region. performanceInsightsRetentionPeriod Optional integer The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years). port Optional integer The port number on which the database accepts connections. MySQL Default: 3306 Valid values: 1150-65535 Type: Integer MariaDB Default: 3306 Valid values: 1150-65535 Type: Integer PostgreSQL Default: 5432 Valid values: 1150-65535 Type: Integer Oracle Default: 1521 Valid values: 1150-65535 SQL Server Default: 1433 Valid values: 1150-65535 except 1234, 1434, 3260, 3343, 3389, 47001, and 49152-49156. Amazon Aurora Default: 3306 Valid values: 1150-65535 Type: Integer preferredBackupWindow Optional string The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. For more information, see The Backup Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow) in the Amazon RDS User Guide. Amazon Aurora Not applicable. The daily time range for creating automated backups is managed by the DB cluster. The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. To see the time blocks available, see Adjusting the Preferred DB Instance Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow) in the Amazon RDS User Guide. Constraints: * Must be in the format hh24:mi-hh24:mi. * Must be in Universal Coordinated Time (UTC). * Must not conflict with the preferred maintenance window. * Must be at least 30 minutes. preferredMaintenanceWindow Optional string The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance). Format: ddd:hh24:mi-ddd:hh24:mi The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week. Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun. Constraints: Minimum 30-minute window. processorFeatures Optional array The number of CPU cores and the number of threads per core for the DB instance class of the DB instance. processorFeatures.[] Required object Contains the processor features of a DB instance class. To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter. You can set the processor features of the DB instance class for a DB instance when you call one of the following actions: * CreateDBInstance * ModifyDBInstance * RestoreDBInstanceFromDBSnapshot * RestoreDBInstanceFromS3 * RestoreDBInstanceToPointInTime You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter. In addition, you can use the following actions for DB instance class processor information: * DescribeDBInstances * DescribeDBSnapshots * DescribeValidDBInstanceModifications If you call DescribeDBInstances, ProcessorFeature returns non-null values only if the following conditions are met: * You are accessing an Oracle DB instance. * Your Oracle DB instance class supports configuring the number of CPU cores and threads per core. * The current number CPU cores and threads is set to a non-default value. For more information, see Configuring the Processor of the DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor) in the Amazon RDS User Guide. processorFeatures.[].value Optional string promotionTier Optional integer A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance. For more information, see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.FaultTolerance) in the Amazon Aurora User Guide. Default: 1 Valid Values: 0 - 15 publiclyAccessible Optional boolean A value that indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, its DNS endpoint resolves to the private IP address from within the DB instance's VPC, and to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses, and that public access is not permitted if the security group assigned to the DB instance doesn't permit it. When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address. Default: The default behavior varies depending on whether DBSubnetGroupName is specified. If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified, the following applies: * If the default VPC in the target region doesn\u2019t have an Internet gateway attached to it, the DB instance is private. * If the default VPC in the target region has an Internet gateway attached to it, the DB instance is public. If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified, the following applies: * If the subnets are part of a VPC that doesn\u2019t have an Internet gateway attached to it, the DB instance is private. * If the subnets are part of a VPC that has an Internet gateway attached to it, the DB instance is public. storageEncrypted Optional boolean A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted. Amazon Aurora Not applicable. The encryption for DB instances is managed by the DB cluster. storageType Optional string Specifies the storage type to be associated with the DB instance. Valid values: standard tags Optional array Tags to assign to the DB instance. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string tdeCredentialARN Optional string The ARN from the key store with which to associate the instance for TDE encryption. tdeCredentialPassword Optional string The password for the given ARN from the key store in order to access the device. timezone Optional string The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone). vpcSecurityGroupIDs Optional array A list of Amazon EC2 VPC security groups to associate with this DB instance. Amazon Aurora Not applicable. The associated list of EC2 VPC security groups is managed by the DB cluster. Default: The default EC2 VPC security group for the DB subnet group's VPC. vpcSecurityGroupIDs.[] Required string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBInstance/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string associatedRoles : - featureName : string roleARN : string status : string caCertificateIdentifier : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string customerOwnedIPEnabled : boolean dbInstanceAutomatedBackupsReplications : - dbInstanceAutomatedBackupsARN : string dbInstancePort : integer dbInstanceStatus : string dbParameterGroups : - dbParameterGroupName : string parameterApplyStatus : string dbSubnetGroup : dbSubnetGroupARN : string dbSubnetGroupDescription : string dbSubnetGroupName : string subnetGroupStatus : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : arn : string subnetStatus : string vpcID : string dbiResourceID : string domainMemberships : - domain : string fQDN : string iamRoleName : string status : string enabledCloudwatchLogsExports : - string endpoint : address : string hostedZoneID : string port : integer enhancedMonitoringResourceARN : string iamDatabaseAuthenticationEnabled : boolean instanceCreateTime : string latestRestorableTime : string listenerEndpoint : address : string hostedZoneID : string port : integer optionGroupMemberships : - optionGroupName : string status : string pendingModifiedValues : allocatedStorage : integer backupRetentionPeriod : integer caCertificateIdentifier : string dbInstanceClass : string dbInstanceIdentifier : string dbSubnetGroupName : string engineVersion : string iamDatabaseAuthenticationEnabled : boolean iops : integer licenseModel : string masterUserPassword : string multiAZ : boolean pendingCloudwatchLogsExports : logTypesToDisable : - string logTypesToEnable : - string port : integer processorFeatures : - name : string value : string storageType : string performanceInsightsEnabled : boolean readReplicaDBClusterIdentifiers : - string readReplicaDBInstanceIdentifiers : - string readReplicaSourceDBInstanceIdentifier : string replicaMode : string secondaryAvailabilityZone : string statusInfos : - message : string normal : boolean status : string statusType : string tagList : - key : string value : string vpcSecurityGroups : - status : string vpcSecurityGroupID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. associatedRoles Optional array The AWS Identity and Access Management (IAM) roles associated with the DB instance. associatedRoles.[] Required object Describes an AWS Identity and Access Management (IAM) role that is associated with a DB instance. associatedRoles.[].roleARN Optional string associatedRoles.[].status Optional string caCertificateIdentifier Optional string The identifier of the CA certificate for this DB instance. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition customerOwnedIPEnabled Optional boolean Specifies whether a customer-owned IP address (CoIP) is enabled for an RDS on Outposts DB instance. A CoIP provides local or external connectivity to resources in your Outpost subnets through your on-premises network. For some use cases, a CoIP can provide lower latency for connections to the DB instance from outside of its virtual private cloud (VPC) on your local network. For more information about RDS on Outposts, see Working with Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing) in the AWS Outposts User Guide. dbInstanceAutomatedBackupsReplications Optional array The list of replicated automated backups associated with the DB instance. dbInstanceAutomatedBackupsReplications.[] Required object Automated backups of a DB instance replicated to another AWS Region. They consist of system backups, transaction logs, and database instance properties. dbInstancePort Optional integer Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port. dbInstanceStatus Optional string Specifies the current state of this database. For information about DB instance statuses, see DB Instance Status (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Status.html) in the Amazon RDS User Guide. dbParameterGroups Optional array Provides the list of DB parameter groups applied to this DB instance. dbParameterGroups.[] Required object The status of the DB parameter group. This data type is used as a response element in the following actions: * CreateDBInstance * CreateDBInstanceReadReplica * DeleteDBInstance * ModifyDBInstance * RebootDBInstance * RestoreDBInstanceFromDBSnapshot dbParameterGroups.[].parameterApplyStatus Optional string dbSubnetGroup Optional object Specifies information on the subnet group associated with the DB instance, including the name, description, and subnets in the subnet group. dbSubnetGroup.dbSubnetGroupARN Optional string dbSubnetGroup.dbSubnetGroupDescription Optional string dbSubnetGroup.dbSubnetGroupName Optional string dbSubnetGroup.subnetGroupStatus Optional string dbSubnetGroup.subnets Optional array dbSubnetGroup.subnets.[] Required object This data type is used as a response element for the DescribeDBSubnetGroups operation. dbSubnetGroup.subnets.[].subnetAvailabilityZone.name Optional string dbSubnetGroup.subnets.[].subnetIdentifier Optional string dbSubnetGroup.subnets.[].subnetOutpost Optional object A data type that represents an Outpost. For more information about RDS on Outposts, see Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. dbSubnetGroup.subnets.[].subnetOutpost.arn Optional string dbSubnetGroup.subnets.[].subnetStatus Optional string dbSubnetGroup.vpcID Optional string dbiResourceID Optional string The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the DB instance is accessed. domainMemberships Optional array The Active Directory Domain membership records associated with the DB instance. domainMemberships.[] Required object An Active Directory Domain membership record associated with the DB instance or cluster. domainMemberships.[].fQDN Optional string domainMemberships.[].iamRoleName Optional string domainMemberships.[].status Optional string enabledCloudwatchLogsExports Optional array A list of log types that this DB instance is configured to export to CloudWatch Logs. Log types vary by DB engine. For information about the log types for each DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html) in the Amazon RDS User Guide. enabledCloudwatchLogsExports.[] Required string endpoint.address Optional string endpoint.hostedZoneID Optional string endpoint.port Optional integer enhancedMonitoringResourceARN Optional string The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives the Enhanced Monitoring metrics data for the DB instance. iamDatabaseAuthenticationEnabled Optional boolean True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false. IAM database authentication can be enabled for the following database engines * For MySQL 5.6, minor version 5.6.34 or higher * For MySQL 5.7, minor version 5.7.16 or higher * Aurora 5.6 or higher. To enable IAM database authentication for Aurora, see DBCluster Type. instanceCreateTime Optional string Provides the date and time the DB instance was created. latestRestorableTime Optional string Specifies the latest time to which a database can be restored with point-in-time restore. listenerEndpoint Optional object Specifies the listener connection endpoint for SQL Server Always On. listenerEndpoint.address Optional string listenerEndpoint.hostedZoneID Optional string listenerEndpoint.port Optional integer optionGroupMemberships Optional array Provides the list of option group memberships for this DB instance. optionGroupMemberships.[] Required object Provides information on the option groups the DB instance is a member of. optionGroupMemberships.[].status Optional string pendingModifiedValues Optional object A value that specifies that changes to the DB instance are pending. This element is only included when changes are pending. Specific changes are identified by subelements. pendingModifiedValues.allocatedStorage Optional integer pendingModifiedValues.backupRetentionPeriod Optional integer pendingModifiedValues.caCertificateIdentifier Optional string pendingModifiedValues.dbInstanceClass Optional string pendingModifiedValues.dbInstanceIdentifier Optional string pendingModifiedValues.dbSubnetGroupName Optional string pendingModifiedValues.engineVersion Optional string pendingModifiedValues.iamDatabaseAuthenticationEnabled Optional boolean pendingModifiedValues.iops Optional integer pendingModifiedValues.licenseModel Optional string pendingModifiedValues.masterUserPassword Optional string pendingModifiedValues.multiAZ Optional boolean pendingModifiedValues.pendingCloudwatchLogsExports Optional object A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated. pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable Optional array pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToDisable.[] Required string pendingModifiedValues.pendingCloudwatchLogsExports.logTypesToEnable.[] Required string pendingModifiedValues.processorFeatures Optional array pendingModifiedValues.processorFeatures.[] Required object Contains the processor features of a DB instance class. To specify the number of CPU cores, use the coreCount feature name for the Name parameter. To specify the number of threads per core, use the threadsPerCore feature name for the Name parameter. You can set the processor features of the DB instance class for a DB instance when you call one of the following actions: * CreateDBInstance * ModifyDBInstance * RestoreDBInstanceFromDBSnapshot * RestoreDBInstanceFromS3 * RestoreDBInstanceToPointInTime You can view the valid processor values for a particular instance class by calling the DescribeOrderableDBInstanceOptions action and specifying the instance class for the DBInstanceClass parameter. In addition, you can use the following actions for DB instance class processor information: * DescribeDBInstances * DescribeDBSnapshots * DescribeValidDBInstanceModifications If you call DescribeDBInstances, ProcessorFeature returns non-null values only if the following conditions are met: * You are accessing an Oracle DB instance. * Your Oracle DB instance class supports configuring the number of CPU cores and threads per core. * The current number CPU cores and threads is set to a non-default value. For more information, see Configuring the Processor of the DB Instance Class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor) in the Amazon RDS User Guide. pendingModifiedValues.processorFeatures.[].value Optional string pendingModifiedValues.storageType Optional string performanceInsightsEnabled Optional boolean True if Performance Insights is enabled for the DB instance, and otherwise false. readReplicaDBClusterIdentifiers Optional array Contains one or more identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica. For example, when you create an Aurora read replica of an RDS MySQL DB instance, the Aurora MySQL DB cluster for the Aurora read replica is shown. This output does not contain information about cross region Aurora read replicas. Currently, each RDS DB instance can have only one Aurora read replica. readReplicaDBClusterIdentifiers.[] Required string readReplicaDBInstanceIdentifiers.[] Required string replicaMode Optional string The open mode of an Oracle read replica. The default is open-read-only. For more information, see Working with Oracle Read Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html) in the Amazon RDS User Guide. This attribute is only supported in RDS for Oracle. secondaryAvailabilityZone Optional string If present, specifies the name of the secondary Availability Zone for a DB instance with multi-AZ support. statusInfos Optional array The status of a read replica. If the instance isn't a read replica, this is blank. statusInfos.[] Required object Provides a list of status information for a DB instance. statusInfos.[].normal Optional boolean statusInfos.[].status Optional string statusInfos.[].statusType Optional string tagList Optional array tagList.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tagList.[].value Optional string vpcSecurityGroups Optional array Provides a list of VPC security group elements that the DB instance belongs to. vpcSecurityGroups.[] Required object This data type is used as a response element for queries on VPC security group membership. vpcSecurityGroups.[].vpcSecurityGroupID Optional string","title":"Status"},{"location":"reference/RDS/v1alpha1/DBParameterGroup/","text":"DBParameterGroup \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBParameterGroup Metadata \u00b6 Property Value Scope Namespaced Kind DBParameterGroup ListKind DBParameterGroupList Plural dbparametergroups Singular dbparametergroup Contains the details of an Amazon RDS DB parameter group. This data type is used as a response element in the DescribeDBParameterGroups action. Spec \u00b6 description : string family : string name : string parameters : - allowedValues : string applyMethod : string applyType : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string supportedEngineModes : - string tags : - key : string value : string Field Description description Required string The description for the DB parameter group. family Required string The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family. To list all of the available parameter group families, use the following command: aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\" The output contains duplicates. name Required string The name of the DB parameter group. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens This value is stored as a lowercase string. parameters Optional array An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request. Valid Values (for the application method): immediate parameters.[] Required object This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions. parameters.[].applyMethod Optional string parameters.[].applyType Optional string parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string parameters.[].supportedEngineModes Optional array parameters.[].supportedEngineModes.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"DBParameterGroup"},{"location":"reference/RDS/v1alpha1/DBParameterGroup/#dbparametergroup","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBParameterGroup","title":"DBParameterGroup"},{"location":"reference/RDS/v1alpha1/DBParameterGroup/#metadata","text":"Property Value Scope Namespaced Kind DBParameterGroup ListKind DBParameterGroupList Plural dbparametergroups Singular dbparametergroup Contains the details of an Amazon RDS DB parameter group. This data type is used as a response element in the DescribeDBParameterGroups action.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBParameterGroup/#spec","text":"description : string family : string name : string parameters : - allowedValues : string applyMethod : string applyType : string dataType : string description : string isModifiable : boolean minimumEngineVersion : string parameterName : string parameterValue : string source : string supportedEngineModes : - string tags : - key : string value : string Field Description description Required string The description for the DB parameter group. family Required string The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family. To list all of the available parameter group families, use the following command: aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\" The output contains duplicates. name Required string The name of the DB parameter group. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens This value is stored as a lowercase string. parameters Optional array An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request. Valid Values (for the application method): immediate parameters.[] Required object This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions. parameters.[].applyMethod Optional string parameters.[].applyType Optional string parameters.[].dataType Optional string parameters.[].description Optional string parameters.[].isModifiable Optional boolean parameters.[].minimumEngineVersion Optional string parameters.[].parameterName Optional string parameters.[].parameterValue Optional string parameters.[].source Optional string parameters.[].supportedEngineModes Optional array parameters.[].supportedEngineModes.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBParameterGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/RDS/v1alpha1/DBSecurityGroup/","text":"DBSecurityGroup \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBSecurityGroup Metadata \u00b6 Property Value Scope Namespaced Kind DBSecurityGroup ListKind DBSecurityGroupList Plural dbsecuritygroups Singular dbsecuritygroup Contains the details for an Amazon RDS DB security group. This data type is used as a response element in the DescribeDBSecurityGroups action. Spec \u00b6 description : string name : string tags : - key : string value : string Field Description description Required string The description for the DB security group. name Required string The name for the DB security group. This value is stored as a lowercase string. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens * Must not be \"Default\" Example: mysecuritygroup tags Optional array Tags to assign to the DB security group. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string ec2SecurityGroups : - ec2SecurityGroupID : string ec2SecurityGroupName : string ec2SecurityGroupOwnerID : string status : string iPRanges : - cidrIP : string status : string ownerID : string vpcID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition ec2SecurityGroups Optional array Contains a list of EC2SecurityGroup elements. ec2SecurityGroups.[] Required object This data type is used as a response element in the following actions: * AuthorizeDBSecurityGroupIngress * DescribeDBSecurityGroups * RevokeDBSecurityGroupIngress ec2SecurityGroups.[].ec2SecurityGroupName Optional string ec2SecurityGroups.[].ec2SecurityGroupOwnerID Optional string ec2SecurityGroups.[].status Optional string iPRanges Optional array Contains a list of IPRange elements. iPRanges.[] Required object This data type is used as a response element in the DescribeDBSecurityGroups action. iPRanges.[].status Optional string ownerID Optional string Provides the AWS ID of the owner of a specific DB security group. vpcID Optional string Provides the VpcId of the DB security group.","title":"DBSecurityGroup"},{"location":"reference/RDS/v1alpha1/DBSecurityGroup/#dbsecuritygroup","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBSecurityGroup","title":"DBSecurityGroup"},{"location":"reference/RDS/v1alpha1/DBSecurityGroup/#metadata","text":"Property Value Scope Namespaced Kind DBSecurityGroup ListKind DBSecurityGroupList Plural dbsecuritygroups Singular dbsecuritygroup Contains the details for an Amazon RDS DB security group. This data type is used as a response element in the DescribeDBSecurityGroups action.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBSecurityGroup/#spec","text":"description : string name : string tags : - key : string value : string Field Description description Required string The description for the DB security group. name Required string The name for the DB security group. This value is stored as a lowercase string. Constraints: * Must be 1 to 255 letters, numbers, or hyphens. * First character must be a letter * Can't end with a hyphen or contain two consecutive hyphens * Must not be \"Default\" Example: mysecuritygroup tags Optional array Tags to assign to the DB security group. tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBSecurityGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string ec2SecurityGroups : - ec2SecurityGroupID : string ec2SecurityGroupName : string ec2SecurityGroupOwnerID : string status : string iPRanges : - cidrIP : string status : string ownerID : string vpcID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition ec2SecurityGroups Optional array Contains a list of EC2SecurityGroup elements. ec2SecurityGroups.[] Required object This data type is used as a response element in the following actions: * AuthorizeDBSecurityGroupIngress * DescribeDBSecurityGroups * RevokeDBSecurityGroupIngress ec2SecurityGroups.[].ec2SecurityGroupName Optional string ec2SecurityGroups.[].ec2SecurityGroupOwnerID Optional string ec2SecurityGroups.[].status Optional string iPRanges Optional array Contains a list of IPRange elements. iPRanges.[] Required object This data type is used as a response element in the DescribeDBSecurityGroups action. iPRanges.[].status Optional string ownerID Optional string Provides the AWS ID of the owner of a specific DB security group. vpcID Optional string Provides the VpcId of the DB security group.","title":"Status"},{"location":"reference/RDS/v1alpha1/DBSubnetGroup/","text":"DBSubnetGroup \u00b6 rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBSubnetGroup Metadata \u00b6 Property Value Scope Namespaced Kind DBSubnetGroup ListKind DBSubnetGroupList Plural dbsubnetgroups Singular dbsubnetgroup Contains the details of an Amazon RDS DB subnet group. This data type is used as a response element in the DescribeDBSubnetGroups action. Spec \u00b6 description : string name : string subnetIDs : - string tags : - key : string value : string Field Description description Required string The description for the DB subnet group. name Required string The name for the DB subnet group. This value is stored as a lowercase string. Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default. Example: mySubnetgroup subnetIDs Required array The EC2 Subnet IDs for the DB subnet group. subnetIDs.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string subnetGroupStatus : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : arn : string subnetStatus : string vpcID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition subnetGroupStatus Optional string Provides the status of the DB subnet group. subnets Optional array Contains a list of Subnet elements. subnets.[] Required object This data type is used as a response element for the DescribeDBSubnetGroups operation. subnets.[].subnetAvailabilityZone.name Optional string subnets.[].subnetIdentifier Optional string subnets.[].subnetOutpost Optional object A data type that represents an Outpost. For more information about RDS on Outposts, see Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. subnets.[].subnetOutpost.arn Optional string subnets.[].subnetStatus Optional string vpcID Optional string Provides the VpcId of the DB subnet group.","title":"DBSubnetGroup"},{"location":"reference/RDS/v1alpha1/DBSubnetGroup/#dbsubnetgroup","text":"rds.services.k8s.aws/v1alpha1 Type Link GoDoc rds-controller/apis/v1alpha1#DBSubnetGroup","title":"DBSubnetGroup"},{"location":"reference/RDS/v1alpha1/DBSubnetGroup/#metadata","text":"Property Value Scope Namespaced Kind DBSubnetGroup ListKind DBSubnetGroupList Plural dbsubnetgroups Singular dbsubnetgroup Contains the details of an Amazon RDS DB subnet group. This data type is used as a response element in the DescribeDBSubnetGroups action.","title":"Metadata"},{"location":"reference/RDS/v1alpha1/DBSubnetGroup/#spec","text":"description : string name : string subnetIDs : - string tags : - key : string value : string Field Description description Required string The description for the DB subnet group. name Required string The name for the DB subnet group. This value is stored as a lowercase string. Constraints: Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens. Must not be default. Example: mySubnetgroup subnetIDs Required array The EC2 Subnet IDs for the DB subnet group. subnetIDs.[] Required string tags.[] Required object Metadata assigned to an Amazon RDS resource consisting of a key-value pair. tags.[].value Optional string","title":"Spec"},{"location":"reference/RDS/v1alpha1/DBSubnetGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string subnetGroupStatus : string subnets : subnetAvailabilityZone : name : string subnetIdentifier : string subnetOutpost : arn : string subnetStatus : string vpcID : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition subnetGroupStatus Optional string Provides the status of the DB subnet group. subnets Optional array Contains a list of Subnet elements. subnets.[] Required object This data type is used as a response element for the DescribeDBSubnetGroups operation. subnets.[].subnetAvailabilityZone.name Optional string subnets.[].subnetIdentifier Optional string subnets.[].subnetOutpost Optional object A data type that represents an Outpost. For more information about RDS on Outposts, see Amazon RDS on AWS Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html) in the Amazon RDS User Guide. subnets.[].subnetOutpost.arn Optional string subnets.[].subnetStatus Optional string vpcID Optional string Provides the VpcId of the DB subnet group.","title":"Status"},{"location":"reference/S3/v1alpha1/Bucket/","text":"Bucket \u00b6 s3.services.k8s.aws/v1alpha1 Type Link GoDoc s3-controller/apis/v1alpha1#Bucket Metadata \u00b6 Property Value Scope Namespaced Kind Bucket ListKind BucketList Plural buckets Singular bucket In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally unique, and the namespace is shared by all AWS accounts. Spec \u00b6 accelerate : status : string acl : string cors : corsRules : allowedHeaders : - string allowedMethods : - string allowedOrigins : - string exposeHeaders : - string maxAgeSeconds : integer createBucketConfiguration : locationConstraint : string encryption : rules : applyServerSideEncryptionByDefault : kmsMasterKeyID : string sseAlgorithm : string bucketKeyEnabled : boolean grantFullControl : string grantRead : string grantReadACP : string grantWrite : string grantWriteACP : string logging : loggingEnabled : targetBucket : string targetGrants : grantee : displayName : string emailAddress : string id : string type_ : string uRI : string permission : string targetPrefix : string name : string objectLockEnabledForBucket : boolean ownershipControls : rules : - objectOwnership : string policy : string requestPayment : payer : string tagging : tagSet : - key : string value : string versioning : status : string website : errorDocument : key : string indexDocument : suffix : string redirectAllRequestsTo : hostName : string protocol : string routingRules : condition : httpErrorCodeReturnedEquals : string keyPrefixEquals : string redirect : hostName : string httpRedirectCode : string protocol : string replaceKeyPrefixWith : string replaceKeyWith : string Field Description accelerate Optional object Container for setting the transfer acceleration state. accelerate.status Optional string acl Optional string The canned ACL to apply to the bucket. cors Optional object Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the Amazon Simple Storage Service Developer Guide. cors.corsRules Optional array cors.corsRules.[] Required object Specifies a cross-origin access rule for an Amazon S3 bucket. cors.corsRules.[].allowedHeaders.[] Required string cors.corsRules.[].allowedMethods.[] Required string cors.corsRules.[].allowedOrigins.[] Required string cors.corsRules.[].exposeHeaders.[] Required string createBucketConfiguration Optional object The configuration information for the bucket. createBucketConfiguration.locationConstraint Optional string encryption Optional object Specifies the default server-side-encryption configuration. encryption.rules Optional array encryption.rules.[] Required object Specifies the default server-side encryption configuration. encryption.rules.[].applyServerSideEncryptionByDefault.kmsMasterKeyID Optional string encryption.rules.[].applyServerSideEncryptionByDefault.sseAlgorithm Optional string encryption.rules.[].bucketKeyEnabled Optional boolean grantFullControl Optional string Allows grantee the read, write, read ACP, and write ACP permissions on the bucket. grantRead Optional string Allows grantee to list the objects in the bucket. grantReadACP Optional string Allows grantee to read the bucket ACL. grantWrite Optional string Allows grantee to create, overwrite, and delete any object in the bucket. grantWriteACP Optional string Allows grantee to write the ACL for the applicable bucket. logging Optional object Container for logging status information. logging.loggingEnabled Optional object Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see PUT Bucket logging (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the Amazon Simple Storage Service API Reference. logging.loggingEnabled.targetBucket Optional string logging.loggingEnabled.targetGrants Optional array logging.loggingEnabled.targetGrants.[] Required object Container for granting information. logging.loggingEnabled.targetGrants.[].grantee.displayName Optional string logging.loggingEnabled.targetGrants.[].grantee.emailAddress Optional string logging.loggingEnabled.targetGrants.[].grantee.id Optional string logging.loggingEnabled.targetGrants.[].grantee.type_ Optional string logging.loggingEnabled.targetGrants.[].grantee.uRI Optional string logging.loggingEnabled.targetGrants.[].permission Optional string logging.loggingEnabled.targetPrefix Optional string name Required string The name of the bucket to create. objectLockEnabledForBucket Optional boolean Specifies whether you want S3 Object Lock to be enabled for the new bucket. ownershipControls Optional object The OwnershipControls (BucketOwnerPreferred or ObjectWriter) that you want to apply to this Amazon S3 bucket. ownershipControls.rules Optional array ownershipControls.rules.[] Required object The container element for an ownership control rule. policy Optional string The bucket policy as a JSON document. requestPayment Optional object Container for Payer. requestPayment.payer Optional string tagging Optional object Container for the TagSet and Tag elements. tagging.tagSet Optional array tagging.tagSet.[] Required object A container of a key value name pair. tagging.tagSet.[].value Optional string versioning Optional object Container for setting the versioning state. versioning.status Optional string website Optional object Container for the request. website.errorDocument Optional object The error information. website.errorDocument.key Optional string website.indexDocument Optional object Container for the Suffix element. website.indexDocument.suffix Optional string website.redirectAllRequestsTo Optional object Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket. website.redirectAllRequestsTo.hostName Optional string website.redirectAllRequestsTo.protocol Optional string website.routingRules Optional array website.routingRules.[] Required object Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see Configuring advanced conditional redirects (https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the Amazon Simple Storage Service Developer Guide. website.routingRules.[].condition.httpErrorCodeReturnedEquals Optional string website.routingRules.[].condition.keyPrefixEquals Optional string website.routingRules.[].redirect Optional object Specifies how requests are redirected. In the event of an error, you can specify a different error code to return. website.routingRules.[].redirect.hostName Optional string website.routingRules.[].redirect.httpRedirectCode Optional string website.routingRules.[].redirect.protocol Optional string website.routingRules.[].redirect.replaceKeyPrefixWith Optional string website.routingRules.[].redirect.replaceKeyWith Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string location : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition location Optional string Specifies the Region where the bucket will be created. If you are creating a bucket on the US East (N. Virginia) Region (us-east-1), you do not need to specify the location.","title":"Bucket"},{"location":"reference/S3/v1alpha1/Bucket/#bucket","text":"s3.services.k8s.aws/v1alpha1 Type Link GoDoc s3-controller/apis/v1alpha1#Bucket","title":"Bucket"},{"location":"reference/S3/v1alpha1/Bucket/#metadata","text":"Property Value Scope Namespaced Kind Bucket ListKind BucketList Plural buckets Singular bucket In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally unique, and the namespace is shared by all AWS accounts.","title":"Metadata"},{"location":"reference/S3/v1alpha1/Bucket/#spec","text":"accelerate : status : string acl : string cors : corsRules : allowedHeaders : - string allowedMethods : - string allowedOrigins : - string exposeHeaders : - string maxAgeSeconds : integer createBucketConfiguration : locationConstraint : string encryption : rules : applyServerSideEncryptionByDefault : kmsMasterKeyID : string sseAlgorithm : string bucketKeyEnabled : boolean grantFullControl : string grantRead : string grantReadACP : string grantWrite : string grantWriteACP : string logging : loggingEnabled : targetBucket : string targetGrants : grantee : displayName : string emailAddress : string id : string type_ : string uRI : string permission : string targetPrefix : string name : string objectLockEnabledForBucket : boolean ownershipControls : rules : - objectOwnership : string policy : string requestPayment : payer : string tagging : tagSet : - key : string value : string versioning : status : string website : errorDocument : key : string indexDocument : suffix : string redirectAllRequestsTo : hostName : string protocol : string routingRules : condition : httpErrorCodeReturnedEquals : string keyPrefixEquals : string redirect : hostName : string httpRedirectCode : string protocol : string replaceKeyPrefixWith : string replaceKeyWith : string Field Description accelerate Optional object Container for setting the transfer acceleration state. accelerate.status Optional string acl Optional string The canned ACL to apply to the bucket. cors Optional object Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the Amazon Simple Storage Service Developer Guide. cors.corsRules Optional array cors.corsRules.[] Required object Specifies a cross-origin access rule for an Amazon S3 bucket. cors.corsRules.[].allowedHeaders.[] Required string cors.corsRules.[].allowedMethods.[] Required string cors.corsRules.[].allowedOrigins.[] Required string cors.corsRules.[].exposeHeaders.[] Required string createBucketConfiguration Optional object The configuration information for the bucket. createBucketConfiguration.locationConstraint Optional string encryption Optional object Specifies the default server-side-encryption configuration. encryption.rules Optional array encryption.rules.[] Required object Specifies the default server-side encryption configuration. encryption.rules.[].applyServerSideEncryptionByDefault.kmsMasterKeyID Optional string encryption.rules.[].applyServerSideEncryptionByDefault.sseAlgorithm Optional string encryption.rules.[].bucketKeyEnabled Optional boolean grantFullControl Optional string Allows grantee the read, write, read ACP, and write ACP permissions on the bucket. grantRead Optional string Allows grantee to list the objects in the bucket. grantReadACP Optional string Allows grantee to read the bucket ACL. grantWrite Optional string Allows grantee to create, overwrite, and delete any object in the bucket. grantWriteACP Optional string Allows grantee to write the ACL for the applicable bucket. logging Optional object Container for logging status information. logging.loggingEnabled Optional object Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see PUT Bucket logging (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the Amazon Simple Storage Service API Reference. logging.loggingEnabled.targetBucket Optional string logging.loggingEnabled.targetGrants Optional array logging.loggingEnabled.targetGrants.[] Required object Container for granting information. logging.loggingEnabled.targetGrants.[].grantee.displayName Optional string logging.loggingEnabled.targetGrants.[].grantee.emailAddress Optional string logging.loggingEnabled.targetGrants.[].grantee.id Optional string logging.loggingEnabled.targetGrants.[].grantee.type_ Optional string logging.loggingEnabled.targetGrants.[].grantee.uRI Optional string logging.loggingEnabled.targetGrants.[].permission Optional string logging.loggingEnabled.targetPrefix Optional string name Required string The name of the bucket to create. objectLockEnabledForBucket Optional boolean Specifies whether you want S3 Object Lock to be enabled for the new bucket. ownershipControls Optional object The OwnershipControls (BucketOwnerPreferred or ObjectWriter) that you want to apply to this Amazon S3 bucket. ownershipControls.rules Optional array ownershipControls.rules.[] Required object The container element for an ownership control rule. policy Optional string The bucket policy as a JSON document. requestPayment Optional object Container for Payer. requestPayment.payer Optional string tagging Optional object Container for the TagSet and Tag elements. tagging.tagSet Optional array tagging.tagSet.[] Required object A container of a key value name pair. tagging.tagSet.[].value Optional string versioning Optional object Container for setting the versioning state. versioning.status Optional string website Optional object Container for the request. website.errorDocument Optional object The error information. website.errorDocument.key Optional string website.indexDocument Optional object Container for the Suffix element. website.indexDocument.suffix Optional string website.redirectAllRequestsTo Optional object Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket. website.redirectAllRequestsTo.hostName Optional string website.redirectAllRequestsTo.protocol Optional string website.routingRules Optional array website.routingRules.[] Required object Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see Configuring advanced conditional redirects (https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the Amazon Simple Storage Service Developer Guide. website.routingRules.[].condition.httpErrorCodeReturnedEquals Optional string website.routingRules.[].condition.keyPrefixEquals Optional string website.routingRules.[].redirect Optional object Specifies how requests are redirected. In the event of an error, you can specify a different error code to return. website.routingRules.[].redirect.hostName Optional string website.routingRules.[].redirect.httpRedirectCode Optional string website.routingRules.[].redirect.protocol Optional string website.routingRules.[].redirect.replaceKeyPrefixWith Optional string website.routingRules.[].redirect.replaceKeyWith Optional string","title":"Spec"},{"location":"reference/S3/v1alpha1/Bucket/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string location : string Field Description ackResourceMetadata Optional object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Optional array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition location Optional string Specifies the Region where the bucket will be created. If you are creating a bucket on the US East (N. Virginia) Region (us-east-1), you do not need to specify the location.","title":"Status"},{"location":"reference/SNS/v1alpha1/PlatformApplication/","text":"PlatformApplication \u00b6 sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#PlatformApplication Metadata \u00b6 Property Value Scope Namespaced Kind PlatformApplication ListKind PlatformApplicationList Plural platformapplications Singular platformapplication Spec \u00b6 eventDeliveryFailure : string eventEndpointCreated : string eventEndpointDeleted : string eventEndpointUpdated : string failureFeedbackRoleARN : string name : string platform : string platformCredential : string platformPrincipal : string successFeedbackRoleARN : string successFeedbackSampleRate : string Field Description eventDeliveryFailure Optional string eventEndpointCreated Optional string eventEndpointDeleted Optional string eventEndpointUpdated Optional string failureFeedbackRoleARN Optional string name Required string platform Required string platformCredential Optional string platformPrincipal Optional string successFeedbackRoleARN Optional string successFeedbackSampleRate Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"PlatformApplication"},{"location":"reference/SNS/v1alpha1/PlatformApplication/#platformapplication","text":"sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#PlatformApplication","title":"PlatformApplication"},{"location":"reference/SNS/v1alpha1/PlatformApplication/#metadata","text":"Property Value Scope Namespaced Kind PlatformApplication ListKind PlatformApplicationList Plural platformapplications Singular platformapplication","title":"Metadata"},{"location":"reference/SNS/v1alpha1/PlatformApplication/#spec","text":"eventDeliveryFailure : string eventEndpointCreated : string eventEndpointDeleted : string eventEndpointUpdated : string failureFeedbackRoleARN : string name : string platform : string platformCredential : string platformPrincipal : string successFeedbackRoleARN : string successFeedbackSampleRate : string Field Description eventDeliveryFailure Optional string eventEndpointCreated Optional string eventEndpointDeleted Optional string eventEndpointUpdated Optional string failureFeedbackRoleARN Optional string name Required string platform Required string platformCredential Optional string platformPrincipal Optional string successFeedbackRoleARN Optional string successFeedbackSampleRate Optional string","title":"Spec"},{"location":"reference/SNS/v1alpha1/PlatformApplication/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SNS/v1alpha1/PlatformEndpoint/","text":"PlatformEndpoint \u00b6 sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#PlatformEndpoint Metadata \u00b6 Property Value Scope Namespaced Kind PlatformEndpoint ListKind PlatformEndpointList Plural platformendpoints Singular platformendpoint Spec \u00b6 attributes : {} customUserData : string platformApplicationARN : string token : string Field Description attributes Optional object customUserData Optional string platformApplicationARN Required string token Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string endpointARN : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition endpointARN Optional string","title":"PlatformEndpoint"},{"location":"reference/SNS/v1alpha1/PlatformEndpoint/#platformendpoint","text":"sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#PlatformEndpoint","title":"PlatformEndpoint"},{"location":"reference/SNS/v1alpha1/PlatformEndpoint/#metadata","text":"Property Value Scope Namespaced Kind PlatformEndpoint ListKind PlatformEndpointList Plural platformendpoints Singular platformendpoint","title":"Metadata"},{"location":"reference/SNS/v1alpha1/PlatformEndpoint/#spec","text":"attributes : {} customUserData : string platformApplicationARN : string token : string Field Description attributes Optional object customUserData Optional string platformApplicationARN Required string token Required string","title":"Spec"},{"location":"reference/SNS/v1alpha1/PlatformEndpoint/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string endpointARN : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition endpointARN Optional string","title":"Status"},{"location":"reference/SNS/v1alpha1/Topic/","text":"Topic \u00b6 sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#Topic Metadata \u00b6 Property Value Scope Namespaced Kind Topic ListKind TopicList Plural topics Singular topic Spec \u00b6 deliveryPolicy : string displayName : string kmsMasterKeyID : string name : string policy : string tags : - key : string value : string Field Description deliveryPolicy Optional string displayName Optional string kmsMasterKeyID Optional string name Required string policy Optional string tags Optional array tags.[] Required object tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string effectiveDeliveryPolicy : string owner : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition effectiveDeliveryPolicy Optional string owner Optional string","title":"Topic"},{"location":"reference/SNS/v1alpha1/Topic/#topic","text":"sns.services.k8s.aws/v1alpha1 Type Link GoDoc sns-controller/apis/v1alpha1#Topic","title":"Topic"},{"location":"reference/SNS/v1alpha1/Topic/#metadata","text":"Property Value Scope Namespaced Kind Topic ListKind TopicList Plural topics Singular topic","title":"Metadata"},{"location":"reference/SNS/v1alpha1/Topic/#spec","text":"deliveryPolicy : string displayName : string kmsMasterKeyID : string name : string policy : string tags : - key : string value : string Field Description deliveryPolicy Optional string displayName Optional string kmsMasterKeyID Optional string name Required string policy Optional string tags Optional array tags.[] Required object tags.[].value Optional string","title":"Spec"},{"location":"reference/SNS/v1alpha1/Topic/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string effectiveDeliveryPolicy : string owner : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition effectiveDeliveryPolicy Optional string owner Optional string","title":"Status"},{"location":"reference/SQS/v1alpha1/Queue/","text":"Queue \u00b6 sqs.services.k8s.aws/v1alpha1 Type Link GoDoc sqs-controller/apis/v1alpha1#Queue Metadata \u00b6 Property Value Scope Namespaced Kind Queue ListKind QueueList Plural queues Singular queue Spec \u00b6 queueName : string tags : {} Field Description queueName Required string The name of the new queue. The following limits apply to this name: * A queue name can have up to 80 characters. * Valid values: alphanumeric characters, hyphens (-), and underscores (_). * A FIFO queue name must end with the .fifo suffix. Queue URLs and names are case-sensitive. tags Optional object Add cost allocation tags to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html) in the Amazon Simple Queue Service Developer Guide. When you use queue tags, keep the following guidelines in mind: * Adding more than 50 tags to a queue isn't recommended. * Tags don't have any semantic meaning. Amazon SQS interprets tags as character strings. * Tags are case-sensitive. * A new tag with a key identical to that of an existing tag overwrites the existing tag. For a full list of tag restrictions, see Limits Related to Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-limits.html#limits-queues) in the Amazon Simple Queue Service Developer Guide. To be able to tag a queue on creation, you must have the sqs:CreateQueue and sqs:TagQueue permissions. Cross-account permissions don't apply to this action. For more information, see Grant cross-account permissions to a role and a user name (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name) in the Amazon Simple Queue Service Developer Guide. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string queueURL : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition queueURL Optional string The URL of the created Amazon SQS queue.","title":"Queue"},{"location":"reference/SQS/v1alpha1/Queue/#queue","text":"sqs.services.k8s.aws/v1alpha1 Type Link GoDoc sqs-controller/apis/v1alpha1#Queue","title":"Queue"},{"location":"reference/SQS/v1alpha1/Queue/#metadata","text":"Property Value Scope Namespaced Kind Queue ListKind QueueList Plural queues Singular queue","title":"Metadata"},{"location":"reference/SQS/v1alpha1/Queue/#spec","text":"queueName : string tags : {} Field Description queueName Required string The name of the new queue. The following limits apply to this name: * A queue name can have up to 80 characters. * Valid values: alphanumeric characters, hyphens (-), and underscores (_). * A FIFO queue name must end with the .fifo suffix. Queue URLs and names are case-sensitive. tags Optional object Add cost allocation tags to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html) in the Amazon Simple Queue Service Developer Guide. When you use queue tags, keep the following guidelines in mind: * Adding more than 50 tags to a queue isn't recommended. * Tags don't have any semantic meaning. Amazon SQS interprets tags as character strings. * Tags are case-sensitive. * A new tag with a key identical to that of an existing tag overwrites the existing tag. For a full list of tag restrictions, see Limits Related to Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-limits.html#limits-queues) in the Amazon Simple Queue Service Developer Guide. To be able to tag a queue on creation, you must have the sqs:CreateQueue and sqs:TagQueue permissions. Cross-account permissions don't apply to this action. For more information, see Grant cross-account permissions to a role and a user name (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name) in the Amazon Simple Queue Service Developer Guide.","title":"Spec"},{"location":"reference/SQS/v1alpha1/Queue/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string queueURL : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition queueURL Optional string The URL of the created Amazon SQS queue.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/DataQualityJobDefinition/","text":"DataQualityJobDefinition \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#DataQualityJobDefinition Metadata \u00b6 Property Value Scope Namespaced Kind DataQualityJobDefinition ListKind DataQualityJobDefinitionList Plural dataqualityjobdefinitions Singular dataqualityjobdefinition Spec \u00b6 dataQualityAppSpecification : containerArguments : - string containerEntrypoint : - string environment : {} imageURI : string postAnalyticsProcessorSourceURI : string recordPreprocessorSourceURI : string dataQualityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string statisticsResource : s3URI : string dataQualityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string dataQualityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description dataQualityAppSpecification Required object Specifies the container that runs the monitoring job. dataQualityAppSpecification.containerArguments Optional array dataQualityAppSpecification.containerArguments.[] Required string dataQualityAppSpecification.containerEntrypoint.[] Required string dataQualityAppSpecification.imageURI Optional string dataQualityAppSpecification.postAnalyticsProcessorSourceURI Optional string dataQualityAppSpecification.recordPreprocessorSourceURI Optional string dataQualityBaselineConfig Optional object Configures the constraints and baselines for the monitoring job. dataQualityBaselineConfig.baseliningJobName Optional string dataQualityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. dataQualityBaselineConfig.constraintsResource.s3URI Optional string dataQualityBaselineConfig.statisticsResource Optional object The statistics resource for a monitoring job. dataQualityBaselineConfig.statisticsResource.s3URI Optional string dataQualityJobInput Required object A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs. dataQualityJobInput.endpointInput Optional object Input object for the endpoint dataQualityJobInput.endpointInput.endTimeOffset Optional string dataQualityJobInput.endpointInput.endpointName Optional string dataQualityJobInput.endpointInput.featuresAttribute Optional string dataQualityJobInput.endpointInput.inferenceAttribute Optional string dataQualityJobInput.endpointInput.localPath Optional string dataQualityJobInput.endpointInput.probabilityAttribute Optional string dataQualityJobInput.endpointInput.probabilityThresholdAttribute Optional number dataQualityJobInput.endpointInput.s3DataDistributionType Optional string dataQualityJobInput.endpointInput.s3InputMode Optional string dataQualityJobInput.endpointInput.startTimeOffset Optional string dataQualityJobOutputConfig Required object The output configuration for monitoring jobs. dataQualityJobOutputConfig.kmsKeyID Optional string dataQualityJobOutputConfig.monitoringOutputs Optional array dataQualityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string jobDefinitionName Required string The name for the monitoring job definition. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer networkConfig Optional object Specifies networking configuration for the monitoring job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"DataQualityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/DataQualityJobDefinition/#dataqualityjobdefinition","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#DataQualityJobDefinition","title":"DataQualityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/DataQualityJobDefinition/#metadata","text":"Property Value Scope Namespaced Kind DataQualityJobDefinition ListKind DataQualityJobDefinitionList Plural dataqualityjobdefinitions Singular dataqualityjobdefinition","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/DataQualityJobDefinition/#spec","text":"dataQualityAppSpecification : containerArguments : - string containerEntrypoint : - string environment : {} imageURI : string postAnalyticsProcessorSourceURI : string recordPreprocessorSourceURI : string dataQualityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string statisticsResource : s3URI : string dataQualityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string dataQualityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description dataQualityAppSpecification Required object Specifies the container that runs the monitoring job. dataQualityAppSpecification.containerArguments Optional array dataQualityAppSpecification.containerArguments.[] Required string dataQualityAppSpecification.containerEntrypoint.[] Required string dataQualityAppSpecification.imageURI Optional string dataQualityAppSpecification.postAnalyticsProcessorSourceURI Optional string dataQualityAppSpecification.recordPreprocessorSourceURI Optional string dataQualityBaselineConfig Optional object Configures the constraints and baselines for the monitoring job. dataQualityBaselineConfig.baseliningJobName Optional string dataQualityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. dataQualityBaselineConfig.constraintsResource.s3URI Optional string dataQualityBaselineConfig.statisticsResource Optional object The statistics resource for a monitoring job. dataQualityBaselineConfig.statisticsResource.s3URI Optional string dataQualityJobInput Required object A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs. dataQualityJobInput.endpointInput Optional object Input object for the endpoint dataQualityJobInput.endpointInput.endTimeOffset Optional string dataQualityJobInput.endpointInput.endpointName Optional string dataQualityJobInput.endpointInput.featuresAttribute Optional string dataQualityJobInput.endpointInput.inferenceAttribute Optional string dataQualityJobInput.endpointInput.localPath Optional string dataQualityJobInput.endpointInput.probabilityAttribute Optional string dataQualityJobInput.endpointInput.probabilityThresholdAttribute Optional number dataQualityJobInput.endpointInput.s3DataDistributionType Optional string dataQualityJobInput.endpointInput.s3InputMode Optional string dataQualityJobInput.endpointInput.startTimeOffset Optional string dataQualityJobOutputConfig Required object The output configuration for monitoring jobs. dataQualityJobOutputConfig.kmsKeyID Optional string dataQualityJobOutputConfig.monitoringOutputs Optional array dataQualityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string dataQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string jobDefinitionName Required string The name for the monitoring job definition. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer networkConfig Optional object Specifies networking configuration for the monitoring job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/DataQualityJobDefinition/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/Endpoint/","text":"Endpoint \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#Endpoint Metadata \u00b6 Property Value Scope Namespaced Kind Endpoint ListKind EndpointList Plural endpoints Singular endpoint A hosted endpoint for real-time inference. Spec \u00b6 endpointConfigName : string endpointName : string tags : - key : string value : string Field Description endpointConfigName Required string The name of an endpoint configuration. For more information, see CreateEndpointConfig. endpointName Required string The name of the endpoint.The name must be unique within an AWS Region in your AWS account. The name is case-insensitive in CreateEndpoint, but the case is preserved and must be matched in . tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string endpointStatus : string failureReason : string lastEndpointConfigNameForUpdate : string lastModifiedTime : string latestEndpointConfigName : string productionVariants : - currentInstanceCount : integer currentWeight : number deployedImages : - resolutionTime : string resolvedImage : string specifiedImage : string desiredInstanceCount : integer desiredWeight : number variantName : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp that shows when the endpoint was created. endpointStatus Optional string The status of the endpoint. * OutOfService: Endpoint is not available to take incoming requests. * Creating: CreateEndpoint is executing. * Updating: UpdateEndpoint or UpdateEndpointWeightsAndCapacities is executing. * SystemUpdating: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count. * RollingBack: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an InService status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an UpdateEndpointWeightsAndCapacities call or when the UpdateEndpointWeightsAndCapacities operation is called explicitly. * InService: Endpoint is available to process incoming requests. * Deleting: DeleteEndpoint is executing. * Failed: Endpoint could not be created, updated, or re-scaled. Use DescribeEndpointOutput$FailureReason for information about the failure. DeleteEndpoint is the only operation that can be performed on a failed endpoint. failureReason Optional string If the status of the endpoint is Failed, the reason why it failed. lastEndpointConfigNameForUpdate Optional string Name of the Amazon SageMaker endpoint configuration. lastModifiedTime Optional string A timestamp that shows when the endpoint was last modified. latestEndpointConfigName Optional string The name of the endpoint configuration associated with this endpoint. productionVariants Optional array An array of ProductionVariantSummary objects, one for each model hosted behind this endpoint. productionVariants.[] Required object Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the UpdateEndpointWeightsAndCapacities API and the endpoint status is Updating, you get different desired and current values. productionVariants.[].currentWeight Optional number productionVariants.[].deployedImages Optional array productionVariants.[].deployedImages.[] Required object Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this ProductionVariant. If you used the registry/repository[:tag] form to specify the image path of the primary container when you created the model hosted in this ProductionVariant, the path resolves to a path of the form registry/repository[@digest]. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see Pulling an Image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html) in the Amazon ECR User Guide. productionVariants.[].deployedImages.[].resolvedImage Optional string productionVariants.[].deployedImages.[].specifiedImage Optional string productionVariants.[].desiredInstanceCount Optional integer productionVariants.[].desiredWeight Optional number productionVariants.[].variantName Optional string","title":"Endpoint"},{"location":"reference/SageMaker/v1alpha1/Endpoint/#endpoint","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#Endpoint","title":"Endpoint"},{"location":"reference/SageMaker/v1alpha1/Endpoint/#metadata","text":"Property Value Scope Namespaced Kind Endpoint ListKind EndpointList Plural endpoints Singular endpoint A hosted endpoint for real-time inference.","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/Endpoint/#spec","text":"endpointConfigName : string endpointName : string tags : - key : string value : string Field Description endpointConfigName Required string The name of an endpoint configuration. For more information, see CreateEndpointConfig. endpointName Required string The name of the endpoint.The name must be unique within an AWS Region in your AWS account. The name is case-insensitive in CreateEndpoint, but the case is preserved and must be matched in . tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/Endpoint/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string endpointStatus : string failureReason : string lastEndpointConfigNameForUpdate : string lastModifiedTime : string latestEndpointConfigName : string productionVariants : - currentInstanceCount : integer currentWeight : number deployedImages : - resolutionTime : string resolvedImage : string specifiedImage : string desiredInstanceCount : integer desiredWeight : number variantName : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp that shows when the endpoint was created. endpointStatus Optional string The status of the endpoint. * OutOfService: Endpoint is not available to take incoming requests. * Creating: CreateEndpoint is executing. * Updating: UpdateEndpoint or UpdateEndpointWeightsAndCapacities is executing. * SystemUpdating: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count. * RollingBack: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an InService status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an UpdateEndpointWeightsAndCapacities call or when the UpdateEndpointWeightsAndCapacities operation is called explicitly. * InService: Endpoint is available to process incoming requests. * Deleting: DeleteEndpoint is executing. * Failed: Endpoint could not be created, updated, or re-scaled. Use DescribeEndpointOutput$FailureReason for information about the failure. DeleteEndpoint is the only operation that can be performed on a failed endpoint. failureReason Optional string If the status of the endpoint is Failed, the reason why it failed. lastEndpointConfigNameForUpdate Optional string Name of the Amazon SageMaker endpoint configuration. lastModifiedTime Optional string A timestamp that shows when the endpoint was last modified. latestEndpointConfigName Optional string The name of the endpoint configuration associated with this endpoint. productionVariants Optional array An array of ProductionVariantSummary objects, one for each model hosted behind this endpoint. productionVariants.[] Required object Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the UpdateEndpointWeightsAndCapacities API and the endpoint status is Updating, you get different desired and current values. productionVariants.[].currentWeight Optional number productionVariants.[].deployedImages Optional array productionVariants.[].deployedImages.[] Required object Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this ProductionVariant. If you used the registry/repository[:tag] form to specify the image path of the primary container when you created the model hosted in this ProductionVariant, the path resolves to a path of the form registry/repository[@digest]. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see Pulling an Image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html) in the Amazon ECR User Guide. productionVariants.[].deployedImages.[].resolvedImage Optional string productionVariants.[].deployedImages.[].specifiedImage Optional string productionVariants.[].desiredInstanceCount Optional integer productionVariants.[].desiredWeight Optional number productionVariants.[].variantName Optional string","title":"Status"},{"location":"reference/SageMaker/v1alpha1/EndpointConfig/","text":"EndpointConfig \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#EndpointConfig Metadata \u00b6 Property Value Scope Namespaced Kind EndpointConfig ListKind EndpointConfigList Plural endpointconfigs Singular endpointconfig Spec \u00b6 dataCaptureConfig : captureContentTypeHeader : csvContentTypes : - string jsonContentTypes : - string captureOptions : - captureMode : string destinationS3URI : string enableCapture : boolean initialSamplingPercentage : integer kmsKeyID : string endpointConfigName : string kmsKeyID : string productionVariants : - acceleratorType : string coreDumpConfig : destinationS3URI : string kmsKeyID : string initialInstanceCount : integer initialVariantWeight : number instanceType : string modelName : string variantName : string tags : - key : string value : string Field Description dataCaptureConfig Optional object dataCaptureConfig.captureContentTypeHeader Optional object dataCaptureConfig.captureContentTypeHeader.csvContentTypes Optional array dataCaptureConfig.captureContentTypeHeader.csvContentTypes.[] Required string dataCaptureConfig.captureContentTypeHeader.jsonContentTypes.[] Required string dataCaptureConfig.captureOptions.[] Required object dataCaptureConfig.destinationS3URI Optional string dataCaptureConfig.enableCapture Optional boolean dataCaptureConfig.initialSamplingPercentage Optional integer dataCaptureConfig.kmsKeyID Optional string endpointConfigName Required string The name of the endpoint configuration. You specify this name in a CreateEndpoint request. kmsKeyID Optional string The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. The KmsKeyId can be any of the following formats: * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab * Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab * Alias name: alias/ExampleAlias * Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias The KMS key policy must grant permission to the IAM role that you specify in your CreateEndpoint, UpdateEndpoint requests. For more information, refer to the AWS Key Management Service section Using Key Policies in AWS KMS (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html) Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a KmsKeyId when using an instance type with local storage. If any of the models that you specify in the ProductionVariants parameter use nitro-based instances with local storage, do not specify a value for the KmsKeyId parameter. If you specify a value for KmsKeyId when using any nitro-based instances with local storage, the call to CreateEndpointConfig fails. For a list of instance types that support local instance storage, see Instance Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes). For more information about local instance storage encryption, see SSD Instance Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html). productionVariants Required array An list of ProductionVariant objects, one for each model that you want to host at this endpoint. productionVariants.[] Required object Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. productionVariants.[].coreDumpConfig Optional object Specifies configuration for a core dump from the model container when the process crashes. productionVariants.[].coreDumpConfig.destinationS3URI Optional string productionVariants.[].coreDumpConfig.kmsKeyID Optional string productionVariants.[].initialInstanceCount Optional integer productionVariants.[].initialVariantWeight Optional number productionVariants.[].instanceType Optional string productionVariants.[].modelName Optional string productionVariants.[].variantName Optional string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"EndpointConfig"},{"location":"reference/SageMaker/v1alpha1/EndpointConfig/#endpointconfig","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#EndpointConfig","title":"EndpointConfig"},{"location":"reference/SageMaker/v1alpha1/EndpointConfig/#metadata","text":"Property Value Scope Namespaced Kind EndpointConfig ListKind EndpointConfigList Plural endpointconfigs Singular endpointconfig","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/EndpointConfig/#spec","text":"dataCaptureConfig : captureContentTypeHeader : csvContentTypes : - string jsonContentTypes : - string captureOptions : - captureMode : string destinationS3URI : string enableCapture : boolean initialSamplingPercentage : integer kmsKeyID : string endpointConfigName : string kmsKeyID : string productionVariants : - acceleratorType : string coreDumpConfig : destinationS3URI : string kmsKeyID : string initialInstanceCount : integer initialVariantWeight : number instanceType : string modelName : string variantName : string tags : - key : string value : string Field Description dataCaptureConfig Optional object dataCaptureConfig.captureContentTypeHeader Optional object dataCaptureConfig.captureContentTypeHeader.csvContentTypes Optional array dataCaptureConfig.captureContentTypeHeader.csvContentTypes.[] Required string dataCaptureConfig.captureContentTypeHeader.jsonContentTypes.[] Required string dataCaptureConfig.captureOptions.[] Required object dataCaptureConfig.destinationS3URI Optional string dataCaptureConfig.enableCapture Optional boolean dataCaptureConfig.initialSamplingPercentage Optional integer dataCaptureConfig.kmsKeyID Optional string endpointConfigName Required string The name of the endpoint configuration. You specify this name in a CreateEndpoint request. kmsKeyID Optional string The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint. The KmsKeyId can be any of the following formats: * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab * Key ARN: arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab * Alias name: alias/ExampleAlias * Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias The KMS key policy must grant permission to the IAM role that you specify in your CreateEndpoint, UpdateEndpoint requests. For more information, refer to the AWS Key Management Service section Using Key Policies in AWS KMS (https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html) Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a KmsKeyId when using an instance type with local storage. If any of the models that you specify in the ProductionVariants parameter use nitro-based instances with local storage, do not specify a value for the KmsKeyId parameter. If you specify a value for KmsKeyId when using any nitro-based instances with local storage, the call to CreateEndpointConfig fails. For a list of instance types that support local instance storage, see Instance Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes). For more information about local instance storage encryption, see SSD Instance Store Volumes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html). productionVariants Required array An list of ProductionVariant objects, one for each model that you want to host at this endpoint. productionVariants.[] Required object Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. productionVariants.[].coreDumpConfig Optional object Specifies configuration for a core dump from the model container when the process crashes. productionVariants.[].coreDumpConfig.destinationS3URI Optional string productionVariants.[].coreDumpConfig.kmsKeyID Optional string productionVariants.[].initialInstanceCount Optional integer productionVariants.[].initialVariantWeight Optional number productionVariants.[].instanceType Optional string productionVariants.[].modelName Optional string productionVariants.[].variantName Optional string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/EndpointConfig/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/FeatureGroup/","text":"FeatureGroup \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#FeatureGroup Metadata \u00b6 Property Value Scope Namespaced Kind FeatureGroup ListKind FeatureGroupList Plural featuregroups Singular featuregroup Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features. Spec \u00b6 description : string eventTimeFeatureName : string featureDefinitions : - featureName : string featureType : string featureGroupName : string offlineStoreConfig : dataCatalogConfig : catalog : string database : string tableName : string disableGlueTableCreation : boolean s3StorageConfig : kmsKeyID : string resolvedOutputS3URI : string s3URI : string onlineStoreConfig : enableOnlineStore : boolean securityConfig : kmsKeyID : string recordIdentifierFeatureName : string roleARN : string tags : - key : string value : string Field Description description Optional string A free-form description of a FeatureGroup. eventTimeFeatureName Required string The name of the feature that stores the EventTime of a Record in a FeatureGroup. An EventTime is a point in time when a new event occurs that corresponds to the creation or update of a Record in a FeatureGroup. All Records in the FeatureGroup must have a corresponding EventTime. An EventTime can be a String or Fractional. * Fractional: EventTime feature values must be a Unix timestamp in seconds. * String: EventTime feature values must be an ISO-8601 string in the format. The following formats are supported yyyy-MM-dd'T'HH:mm:ssZ and yyyy-MM-dd'T'HH:mm:ss.SSSZ where yyyy, MM, and dd represent the year, month, and day respectively and HH, mm, ss, and if applicable, SSS represent the hour, month, second and milliseconds respsectively. 'T' and Z are constants. featureDefinitions Required array A list of Feature names and types. Name and Type is compulsory per Feature. Valid feature FeatureTypes are Integral, Fractional and String. FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time You can create up to 2,500 FeatureDefinitions per FeatureGroup. featureDefinitions.[] Required object A list of features. You must include FeatureName and FeatureType. Valid feature FeatureTypes are Integral, Fractional and String. featureDefinitions.[].featureType Optional string featureGroupName Required string The name of the FeatureGroup. The name must be unique within an AWS Region in an AWS account. The name: * Must start and end with an alphanumeric character. * Can only contain alphanumeric character and hyphens. Spaces are not allowed. offlineStoreConfig Optional object Use this to configure an OfflineFeatureStore. This parameter allows you to specify: * The Amazon Simple Storage Service (Amazon S3) location of an OfflineStore. * A configuration for an AWS Glue or AWS Hive data cataolgue. * An KMS encryption key to encrypt the Amazon S3 location used for OfflineStore. To learn more about this parameter, see OfflineStoreConfig. offlineStoreConfig.dataCatalogConfig Optional object The meta data of the Glue table which serves as data catalog for the OfflineStore. offlineStoreConfig.dataCatalogConfig.catalog Optional string offlineStoreConfig.dataCatalogConfig.database Optional string offlineStoreConfig.dataCatalogConfig.tableName Optional string offlineStoreConfig.disableGlueTableCreation Optional boolean offlineStoreConfig.s3StorageConfig Optional object The Amazon Simple Storage (Amazon S3) location and and security configuration for OfflineStore. offlineStoreConfig.s3StorageConfig.kmsKeyID Optional string offlineStoreConfig.s3StorageConfig.resolvedOutputS3URI Optional string offlineStoreConfig.s3StorageConfig.s3URI Optional string onlineStoreConfig Optional object You can turn the OnlineStore on or off by specifying True for the EnableOnlineStore flag in OnlineStoreConfig; the default value is False. You can also include an AWS KMS key ID (KMSKeyId) for at-rest encryption of the OnlineStore. onlineStoreConfig.enableOnlineStore Optional boolean onlineStoreConfig.securityConfig Optional object The security configuration for OnlineStore. onlineStoreConfig.securityConfig.kmsKeyID Optional string recordIdentifierFeatureName Required string The name of the Feature whose value uniquely identifies a Record defined in the FeatureStore. Only the latest record per identifier value will be stored in the OnlineStore. RecordIdentifierFeatureName must be one of feature definitions' names. You use the RecordIdentifierFeatureName to access data in a FeatureStore. This name: * Must start and end with an alphanumeric character. * Can only contains alphanumeric characters, hyphens, underscores. Spaces are not allowed. roleARN Optional string The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the OfflineStore if an OfflineStoreConfig is provided. tags Optional array Tags used to identify Features in each FeatureGroup. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string featureGroupStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string The reason that the FeatureGroup failed to be replicated in the OfflineStore. This is failure can occur because: * The FeatureGroup could not be created in the OfflineStore. * The FeatureGroup could not be deleted from the OfflineStore. featureGroupStatus Optional string The status of the feature group.","title":"FeatureGroup"},{"location":"reference/SageMaker/v1alpha1/FeatureGroup/#featuregroup","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#FeatureGroup","title":"FeatureGroup"},{"location":"reference/SageMaker/v1alpha1/FeatureGroup/#metadata","text":"Property Value Scope Namespaced Kind FeatureGroup ListKind FeatureGroupList Plural featuregroups Singular featuregroup Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/FeatureGroup/#spec","text":"description : string eventTimeFeatureName : string featureDefinitions : - featureName : string featureType : string featureGroupName : string offlineStoreConfig : dataCatalogConfig : catalog : string database : string tableName : string disableGlueTableCreation : boolean s3StorageConfig : kmsKeyID : string resolvedOutputS3URI : string s3URI : string onlineStoreConfig : enableOnlineStore : boolean securityConfig : kmsKeyID : string recordIdentifierFeatureName : string roleARN : string tags : - key : string value : string Field Description description Optional string A free-form description of a FeatureGroup. eventTimeFeatureName Required string The name of the feature that stores the EventTime of a Record in a FeatureGroup. An EventTime is a point in time when a new event occurs that corresponds to the creation or update of a Record in a FeatureGroup. All Records in the FeatureGroup must have a corresponding EventTime. An EventTime can be a String or Fractional. * Fractional: EventTime feature values must be a Unix timestamp in seconds. * String: EventTime feature values must be an ISO-8601 string in the format. The following formats are supported yyyy-MM-dd'T'HH:mm:ssZ and yyyy-MM-dd'T'HH:mm:ss.SSSZ where yyyy, MM, and dd represent the year, month, and day respectively and HH, mm, ss, and if applicable, SSS represent the hour, month, second and milliseconds respsectively. 'T' and Z are constants. featureDefinitions Required array A list of Feature names and types. Name and Type is compulsory per Feature. Valid feature FeatureTypes are Integral, Fractional and String. FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time You can create up to 2,500 FeatureDefinitions per FeatureGroup. featureDefinitions.[] Required object A list of features. You must include FeatureName and FeatureType. Valid feature FeatureTypes are Integral, Fractional and String. featureDefinitions.[].featureType Optional string featureGroupName Required string The name of the FeatureGroup. The name must be unique within an AWS Region in an AWS account. The name: * Must start and end with an alphanumeric character. * Can only contain alphanumeric character and hyphens. Spaces are not allowed. offlineStoreConfig Optional object Use this to configure an OfflineFeatureStore. This parameter allows you to specify: * The Amazon Simple Storage Service (Amazon S3) location of an OfflineStore. * A configuration for an AWS Glue or AWS Hive data cataolgue. * An KMS encryption key to encrypt the Amazon S3 location used for OfflineStore. To learn more about this parameter, see OfflineStoreConfig. offlineStoreConfig.dataCatalogConfig Optional object The meta data of the Glue table which serves as data catalog for the OfflineStore. offlineStoreConfig.dataCatalogConfig.catalog Optional string offlineStoreConfig.dataCatalogConfig.database Optional string offlineStoreConfig.dataCatalogConfig.tableName Optional string offlineStoreConfig.disableGlueTableCreation Optional boolean offlineStoreConfig.s3StorageConfig Optional object The Amazon Simple Storage (Amazon S3) location and and security configuration for OfflineStore. offlineStoreConfig.s3StorageConfig.kmsKeyID Optional string offlineStoreConfig.s3StorageConfig.resolvedOutputS3URI Optional string offlineStoreConfig.s3StorageConfig.s3URI Optional string onlineStoreConfig Optional object You can turn the OnlineStore on or off by specifying True for the EnableOnlineStore flag in OnlineStoreConfig; the default value is False. You can also include an AWS KMS key ID (KMSKeyId) for at-rest encryption of the OnlineStore. onlineStoreConfig.enableOnlineStore Optional boolean onlineStoreConfig.securityConfig Optional object The security configuration for OnlineStore. onlineStoreConfig.securityConfig.kmsKeyID Optional string recordIdentifierFeatureName Required string The name of the Feature whose value uniquely identifies a Record defined in the FeatureStore. Only the latest record per identifier value will be stored in the OnlineStore. RecordIdentifierFeatureName must be one of feature definitions' names. You use the RecordIdentifierFeatureName to access data in a FeatureStore. This name: * Must start and end with an alphanumeric character. * Can only contains alphanumeric characters, hyphens, underscores. Spaces are not allowed. roleARN Optional string The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the OfflineStore if an OfflineStoreConfig is provided. tags Optional array Tags used to identify Features in each FeatureGroup. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/FeatureGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string featureGroupStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string The reason that the FeatureGroup failed to be replicated in the OfflineStore. This is failure can occur because: * The FeatureGroup could not be created in the OfflineStore. * The FeatureGroup could not be deleted from the OfflineStore. featureGroupStatus Optional string The status of the feature group.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/HyperParameterTuningJob/","text":"HyperParameterTuningJob \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#HyperParameterTuningJob Metadata \u00b6 Property Value Scope Namespaced Kind HyperParameterTuningJob ListKind HyperParameterTuningJobList Plural hyperparametertuningjobs Singular hyperparametertuningjob Spec \u00b6 hyperParameterTuningJobConfig : hyperParameterTuningJobObjective : metricName : string type_ : string parameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string resourceLimits : maxNumberOfTrainingJobs : integer maxParallelTrainingJobs : integer strategy : string trainingJobEarlyStoppingType : string tuningJobCompletionCriteria : targetObjectiveMetricValue : number hyperParameterTuningJobName : string tags : - key : string value : string trainingJobDefinition : algorithmSpecification : algorithmName : string metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string definitionName : string enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean hyperParameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string staticHyperParameters : {} stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tuningObjective : metricName : string type_ : string vpcConfig : securityGroupIDs : - string subnets : - string trainingJobDefinitions : algorithmSpecification : algorithmName : string metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string definitionName : string enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean hyperParameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string staticHyperParameters : {} stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tuningObjective : metricName : string type_ : string vpcConfig : securityGroupIDs : - string subnets : - string warmStartConfig : parentHyperParameterTuningJobs : - hyperParameterTuningJobName : string warmStartType : string Field Description hyperParameterTuningJobConfig Required object The HyperParameterTuningJobConfig object that describes the tuning job, including the search strategy, the objective metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job. For more information, see How Hyperparameter Tuning Works (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html). hyperParameterTuningJobConfig.hyperParameterTuningJobObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. hyperParameterTuningJobConfig.hyperParameterTuningJobObjective.metricName Optional string hyperParameterTuningJobConfig.hyperParameterTuningJobObjective.type_ Optional string hyperParameterTuningJobConfig.parameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges Optional array hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[].values Optional array hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[].values.[] Required string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].minValue Optional string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].name Optional string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].scalingType Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges Optional array hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].minValue Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].name Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].scalingType Optional string hyperParameterTuningJobConfig.resourceLimits Optional object Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch. hyperParameterTuningJobConfig.resourceLimits.maxNumberOfTrainingJobs Optional integer hyperParameterTuningJobConfig.resourceLimits.maxParallelTrainingJobs Optional integer hyperParameterTuningJobConfig.strategy Optional string The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is Bayesian. hyperParameterTuningJobConfig.trainingJobEarlyStoppingType Optional string hyperParameterTuningJobConfig.tuningJobCompletionCriteria Optional object The job completion criteria. hyperParameterTuningJobConfig.tuningJobCompletionCriteria.targetObjectiveMetricValue Optional number hyperParameterTuningJobName Required string The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. The name must have 1 to 32 characters. Valid characters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen). The name is not case sensitive. tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches. tags.[] Required object Describes a tag. tags.[].value Optional string trainingJobDefinition Optional object The HyperParameterTrainingJobDefinition object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition. trainingJobDefinition.algorithmSpecification Optional object Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor. trainingJobDefinition.algorithmSpecification.algorithmName Optional string trainingJobDefinition.algorithmSpecification.metricDefinitions Optional array trainingJobDefinition.algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. trainingJobDefinition.algorithmSpecification.metricDefinitions.[].regex Optional string trainingJobDefinition.algorithmSpecification.trainingImage Optional string trainingJobDefinition.algorithmSpecification.trainingInputMode Optional string trainingJobDefinition.checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. trainingJobDefinition.checkpointConfig.localPath Optional string trainingJobDefinition.checkpointConfig.s3URI Optional string trainingJobDefinition.definitionName Optional string trainingJobDefinition.enableInterContainerTrafficEncryption Optional boolean trainingJobDefinition.enableManagedSpotTraining Optional boolean trainingJobDefinition.enableNetworkIsolation Optional boolean trainingJobDefinition.hyperParameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges Optional array trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[].values Optional array trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[].values.[] Required string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].minValue Optional string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].name Optional string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].scalingType Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges Optional array trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].minValue Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].name Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].scalingType Optional string trainingJobDefinition.inputDataConfig Optional array trainingJobDefinition.inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. trainingJobDefinition.inputDataConfig.[].compressionType Optional string trainingJobDefinition.inputDataConfig.[].contentType Optional string trainingJobDefinition.inputDataConfig.[].dataSource Optional object Describes the location of the channel data. trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string trainingJobDefinition.inputDataConfig.[].inputMode Optional string trainingJobDefinition.inputDataConfig.[].recordWrapperType Optional string trainingJobDefinition.inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. trainingJobDefinition.inputDataConfig.[].shuffleConfig.seed Optional integer trainingJobDefinition.outputDataConfig Optional object Provides information about how to store model training results (model artifacts). trainingJobDefinition.outputDataConfig.kmsKeyID Optional string trainingJobDefinition.outputDataConfig.s3OutputPath Optional string trainingJobDefinition.resourceConfig Optional object Describes the resources, including ML compute instances and ML storage volumes, to use for model training. trainingJobDefinition.resourceConfig.instanceCount Optional integer trainingJobDefinition.resourceConfig.instanceType Optional string trainingJobDefinition.resourceConfig.volumeKMSKeyID Optional string trainingJobDefinition.resourceConfig.volumeSizeInGB Optional integer trainingJobDefinition.roleARN Optional string trainingJobDefinition.staticHyperParameters Optional object trainingJobDefinition.stoppingCondition Optional object Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel. The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete. trainingJobDefinition.stoppingCondition.maxRuntimeInSeconds Optional integer trainingJobDefinition.stoppingCondition.maxWaitTimeInSeconds Optional integer trainingJobDefinition.tuningObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. trainingJobDefinition.tuningObjective.metricName Optional string trainingJobDefinition.tuningObjective.type_ Optional string trainingJobDefinition.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). trainingJobDefinition.vpcConfig.securityGroupIDs Optional array trainingJobDefinition.vpcConfig.securityGroupIDs.[] Required string trainingJobDefinition.vpcConfig.subnets.[] Required string trainingJobDefinitions.[] Required object Defines the training jobs launched by a hyperparameter tuning job. trainingJobDefinitions.[].algorithmSpecification.algorithmName Optional string trainingJobDefinitions.[].algorithmSpecification.metricDefinitions Optional array trainingJobDefinitions.[].algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. trainingJobDefinitions.[].algorithmSpecification.metricDefinitions.[].regex Optional string trainingJobDefinitions.[].algorithmSpecification.trainingImage Optional string trainingJobDefinitions.[].algorithmSpecification.trainingInputMode Optional string trainingJobDefinitions.[].checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. trainingJobDefinitions.[].checkpointConfig.localPath Optional string trainingJobDefinitions.[].checkpointConfig.s3URI Optional string trainingJobDefinitions.[].definitionName Optional string trainingJobDefinitions.[].enableInterContainerTrafficEncryption Optional boolean trainingJobDefinitions.[].enableManagedSpotTraining Optional boolean trainingJobDefinitions.[].enableNetworkIsolation Optional boolean trainingJobDefinitions.[].hyperParameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges Optional array trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[].values Optional array trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[].values.[] Required string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].minValue Optional string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].name Optional string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].scalingType Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges Optional array trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].minValue Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].name Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].scalingType Optional string trainingJobDefinitions.[].inputDataConfig Optional array trainingJobDefinitions.[].inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. trainingJobDefinitions.[].inputDataConfig.[].compressionType Optional string trainingJobDefinitions.[].inputDataConfig.[].contentType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource Optional object Describes the location of the channel data. trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string trainingJobDefinitions.[].inputDataConfig.[].inputMode Optional string trainingJobDefinitions.[].inputDataConfig.[].recordWrapperType Optional string trainingJobDefinitions.[].inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. trainingJobDefinitions.[].inputDataConfig.[].shuffleConfig.seed Optional integer trainingJobDefinitions.[].outputDataConfig Optional object Provides information about how to store model training results (model artifacts). trainingJobDefinitions.[].outputDataConfig.kmsKeyID Optional string trainingJobDefinitions.[].outputDataConfig.s3OutputPath Optional string trainingJobDefinitions.[].resourceConfig Optional object Describes the resources, including ML compute instances and ML storage volumes, to use for model training. trainingJobDefinitions.[].resourceConfig.instanceCount Optional integer trainingJobDefinitions.[].resourceConfig.instanceType Optional string trainingJobDefinitions.[].resourceConfig.volumeKMSKeyID Optional string trainingJobDefinitions.[].resourceConfig.volumeSizeInGB Optional integer trainingJobDefinitions.[].roleARN Optional string trainingJobDefinitions.[].staticHyperParameters Optional object trainingJobDefinitions.[].stoppingCondition Optional object Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel. The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete. trainingJobDefinitions.[].stoppingCondition.maxRuntimeInSeconds Optional integer trainingJobDefinitions.[].stoppingCondition.maxWaitTimeInSeconds Optional integer trainingJobDefinitions.[].tuningObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. trainingJobDefinitions.[].tuningObjective.metricName Optional string trainingJobDefinitions.[].tuningObjective.type_ Optional string trainingJobDefinitions.[].vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). trainingJobDefinitions.[].vpcConfig.securityGroupIDs Optional array trainingJobDefinitions.[].vpcConfig.securityGroupIDs.[] Required string trainingJobDefinitions.[].vpcConfig.subnets.[] Required string warmStartConfig.parentHyperParameterTuningJobs Optional array warmStartConfig.parentHyperParameterTuningJobs.[] Required object A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job. warmStartConfig.warmStartType Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string bestTrainingJob : creationTime : string failureReason : string finalHyperParameterTuningJobObjectiveMetric : metricName : string type_ : string value : number objectiveStatus : string trainingEndTime : string trainingJobARN : string trainingJobDefinitionName : string trainingJobName : string trainingJobStatus : string trainingStartTime : string tunedHyperParameters : {} tuningJobName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string hyperParameterTuningJobStatus : string overallBestTrainingJob : creationTime : string failureReason : string finalHyperParameterTuningJobObjectiveMetric : metricName : string type_ : string value : number objectiveStatus : string trainingEndTime : string trainingJobARN : string trainingJobDefinitionName : string trainingJobName : string trainingJobStatus : string trainingStartTime : string tunedHyperParameters : {} tuningJobName : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. bestTrainingJob Optional object A TrainingJobSummary object that describes the training job that completed with the best current HyperParameterTuningJobObjective. bestTrainingJob.creationTime Optional string bestTrainingJob.failureReason Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric Optional object Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective parameter of HyperParameterTuningJobConfig. bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.metricName Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.type_ Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.value Optional number bestTrainingJob.objectiveStatus Optional string bestTrainingJob.trainingEndTime Optional string bestTrainingJob.trainingJobARN Optional string bestTrainingJob.trainingJobDefinitionName Optional string bestTrainingJob.trainingJobName Optional string bestTrainingJob.trainingJobStatus Optional string bestTrainingJob.trainingStartTime Optional string bestTrainingJob.tunedHyperParameters Optional object bestTrainingJob.tuningJobName Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If the tuning job failed, the reason it failed. hyperParameterTuningJobStatus Optional string The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped. overallBestTrainingJob Optional object If the hyperparameter tuning job is an warm start tuning job with a WarmStartType of IDENTICAL_DATA_AND_ALGORITHM, this is the TrainingJobSummary for the training job with the best objective metric value of all training jobs launched by this tuning job and all parent jobs specified for the warm start tuning job. overallBestTrainingJob.creationTime Optional string overallBestTrainingJob.failureReason Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric Optional object Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective parameter of HyperParameterTuningJobConfig. overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.metricName Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.type_ Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.value Optional number overallBestTrainingJob.objectiveStatus Optional string overallBestTrainingJob.trainingEndTime Optional string overallBestTrainingJob.trainingJobARN Optional string overallBestTrainingJob.trainingJobDefinitionName Optional string overallBestTrainingJob.trainingJobName Optional string overallBestTrainingJob.trainingJobStatus Optional string overallBestTrainingJob.trainingStartTime Optional string overallBestTrainingJob.tunedHyperParameters Optional object overallBestTrainingJob.tuningJobName Optional string","title":"HyperParameterTuningJob"},{"location":"reference/SageMaker/v1alpha1/HyperParameterTuningJob/#hyperparametertuningjob","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#HyperParameterTuningJob","title":"HyperParameterTuningJob"},{"location":"reference/SageMaker/v1alpha1/HyperParameterTuningJob/#metadata","text":"Property Value Scope Namespaced Kind HyperParameterTuningJob ListKind HyperParameterTuningJobList Plural hyperparametertuningjobs Singular hyperparametertuningjob","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/HyperParameterTuningJob/#spec","text":"hyperParameterTuningJobConfig : hyperParameterTuningJobObjective : metricName : string type_ : string parameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string resourceLimits : maxNumberOfTrainingJobs : integer maxParallelTrainingJobs : integer strategy : string trainingJobEarlyStoppingType : string tuningJobCompletionCriteria : targetObjectiveMetricValue : number hyperParameterTuningJobName : string tags : - key : string value : string trainingJobDefinition : algorithmSpecification : algorithmName : string metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string definitionName : string enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean hyperParameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string staticHyperParameters : {} stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tuningObjective : metricName : string type_ : string vpcConfig : securityGroupIDs : - string subnets : - string trainingJobDefinitions : algorithmSpecification : algorithmName : string metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string definitionName : string enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean hyperParameterRanges : categoricalParameterRanges : - name : string values : - string continuousParameterRanges : - maxValue : string minValue : string name : string scalingType : string integerParameterRanges : - maxValue : string minValue : string name : string scalingType : string inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string staticHyperParameters : {} stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tuningObjective : metricName : string type_ : string vpcConfig : securityGroupIDs : - string subnets : - string warmStartConfig : parentHyperParameterTuningJobs : - hyperParameterTuningJobName : string warmStartType : string Field Description hyperParameterTuningJobConfig Required object The HyperParameterTuningJobConfig object that describes the tuning job, including the search strategy, the objective metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job. For more information, see How Hyperparameter Tuning Works (https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html). hyperParameterTuningJobConfig.hyperParameterTuningJobObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. hyperParameterTuningJobConfig.hyperParameterTuningJobObjective.metricName Optional string hyperParameterTuningJobConfig.hyperParameterTuningJobObjective.type_ Optional string hyperParameterTuningJobConfig.parameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges Optional array hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[].values Optional array hyperParameterTuningJobConfig.parameterRanges.categoricalParameterRanges.[].values.[] Required string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].minValue Optional string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].name Optional string hyperParameterTuningJobConfig.parameterRanges.continuousParameterRanges.[].scalingType Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges Optional array hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].minValue Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].name Optional string hyperParameterTuningJobConfig.parameterRanges.integerParameterRanges.[].scalingType Optional string hyperParameterTuningJobConfig.resourceLimits Optional object Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch. hyperParameterTuningJobConfig.resourceLimits.maxNumberOfTrainingJobs Optional integer hyperParameterTuningJobConfig.resourceLimits.maxParallelTrainingJobs Optional integer hyperParameterTuningJobConfig.strategy Optional string The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is Bayesian. hyperParameterTuningJobConfig.trainingJobEarlyStoppingType Optional string hyperParameterTuningJobConfig.tuningJobCompletionCriteria Optional object The job completion criteria. hyperParameterTuningJobConfig.tuningJobCompletionCriteria.targetObjectiveMetricValue Optional number hyperParameterTuningJobName Required string The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. The name must have 1 to 32 characters. Valid characters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen). The name is not case sensitive. tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches. tags.[] Required object Describes a tag. tags.[].value Optional string trainingJobDefinition Optional object The HyperParameterTrainingJobDefinition object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition. trainingJobDefinition.algorithmSpecification Optional object Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor. trainingJobDefinition.algorithmSpecification.algorithmName Optional string trainingJobDefinition.algorithmSpecification.metricDefinitions Optional array trainingJobDefinition.algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. trainingJobDefinition.algorithmSpecification.metricDefinitions.[].regex Optional string trainingJobDefinition.algorithmSpecification.trainingImage Optional string trainingJobDefinition.algorithmSpecification.trainingInputMode Optional string trainingJobDefinition.checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. trainingJobDefinition.checkpointConfig.localPath Optional string trainingJobDefinition.checkpointConfig.s3URI Optional string trainingJobDefinition.definitionName Optional string trainingJobDefinition.enableInterContainerTrafficEncryption Optional boolean trainingJobDefinition.enableManagedSpotTraining Optional boolean trainingJobDefinition.enableNetworkIsolation Optional boolean trainingJobDefinition.hyperParameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges Optional array trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[].values Optional array trainingJobDefinition.hyperParameterRanges.categoricalParameterRanges.[].values.[] Required string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].minValue Optional string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].name Optional string trainingJobDefinition.hyperParameterRanges.continuousParameterRanges.[].scalingType Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges Optional array trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].minValue Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].name Optional string trainingJobDefinition.hyperParameterRanges.integerParameterRanges.[].scalingType Optional string trainingJobDefinition.inputDataConfig Optional array trainingJobDefinition.inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. trainingJobDefinition.inputDataConfig.[].compressionType Optional string trainingJobDefinition.inputDataConfig.[].contentType Optional string trainingJobDefinition.inputDataConfig.[].dataSource Optional object Describes the location of the channel data. trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string trainingJobDefinition.inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string trainingJobDefinition.inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string trainingJobDefinition.inputDataConfig.[].inputMode Optional string trainingJobDefinition.inputDataConfig.[].recordWrapperType Optional string trainingJobDefinition.inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. trainingJobDefinition.inputDataConfig.[].shuffleConfig.seed Optional integer trainingJobDefinition.outputDataConfig Optional object Provides information about how to store model training results (model artifacts). trainingJobDefinition.outputDataConfig.kmsKeyID Optional string trainingJobDefinition.outputDataConfig.s3OutputPath Optional string trainingJobDefinition.resourceConfig Optional object Describes the resources, including ML compute instances and ML storage volumes, to use for model training. trainingJobDefinition.resourceConfig.instanceCount Optional integer trainingJobDefinition.resourceConfig.instanceType Optional string trainingJobDefinition.resourceConfig.volumeKMSKeyID Optional string trainingJobDefinition.resourceConfig.volumeSizeInGB Optional integer trainingJobDefinition.roleARN Optional string trainingJobDefinition.staticHyperParameters Optional object trainingJobDefinition.stoppingCondition Optional object Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel. The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete. trainingJobDefinition.stoppingCondition.maxRuntimeInSeconds Optional integer trainingJobDefinition.stoppingCondition.maxWaitTimeInSeconds Optional integer trainingJobDefinition.tuningObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. trainingJobDefinition.tuningObjective.metricName Optional string trainingJobDefinition.tuningObjective.type_ Optional string trainingJobDefinition.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). trainingJobDefinition.vpcConfig.securityGroupIDs Optional array trainingJobDefinition.vpcConfig.securityGroupIDs.[] Required string trainingJobDefinition.vpcConfig.subnets.[] Required string trainingJobDefinitions.[] Required object Defines the training jobs launched by a hyperparameter tuning job. trainingJobDefinitions.[].algorithmSpecification.algorithmName Optional string trainingJobDefinitions.[].algorithmSpecification.metricDefinitions Optional array trainingJobDefinitions.[].algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. trainingJobDefinitions.[].algorithmSpecification.metricDefinitions.[].regex Optional string trainingJobDefinitions.[].algorithmSpecification.trainingImage Optional string trainingJobDefinitions.[].algorithmSpecification.trainingInputMode Optional string trainingJobDefinitions.[].checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. trainingJobDefinitions.[].checkpointConfig.localPath Optional string trainingJobDefinitions.[].checkpointConfig.s3URI Optional string trainingJobDefinitions.[].definitionName Optional string trainingJobDefinitions.[].enableInterContainerTrafficEncryption Optional boolean trainingJobDefinitions.[].enableManagedSpotTraining Optional boolean trainingJobDefinitions.[].enableNetworkIsolation Optional boolean trainingJobDefinitions.[].hyperParameterRanges Optional object Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job. You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit. trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges Optional array trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[] Required object A list of categorical hyperparameters to tune. trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[].values Optional array trainingJobDefinitions.[].hyperParameterRanges.categoricalParameterRanges.[].values.[] Required string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[] Required object A list of continuous hyperparameters to tune. trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].minValue Optional string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].name Optional string trainingJobDefinitions.[].hyperParameterRanges.continuousParameterRanges.[].scalingType Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges Optional array trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[] Required object For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches. trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].minValue Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].name Optional string trainingJobDefinitions.[].hyperParameterRanges.integerParameterRanges.[].scalingType Optional string trainingJobDefinitions.[].inputDataConfig Optional array trainingJobDefinitions.[].inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. trainingJobDefinitions.[].inputDataConfig.[].compressionType Optional string trainingJobDefinitions.[].inputDataConfig.[].contentType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource Optional object Describes the location of the channel data. trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string trainingJobDefinitions.[].inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string trainingJobDefinitions.[].inputDataConfig.[].inputMode Optional string trainingJobDefinitions.[].inputDataConfig.[].recordWrapperType Optional string trainingJobDefinitions.[].inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. trainingJobDefinitions.[].inputDataConfig.[].shuffleConfig.seed Optional integer trainingJobDefinitions.[].outputDataConfig Optional object Provides information about how to store model training results (model artifacts). trainingJobDefinitions.[].outputDataConfig.kmsKeyID Optional string trainingJobDefinitions.[].outputDataConfig.s3OutputPath Optional string trainingJobDefinitions.[].resourceConfig Optional object Describes the resources, including ML compute instances and ML storage volumes, to use for model training. trainingJobDefinitions.[].resourceConfig.instanceCount Optional integer trainingJobDefinitions.[].resourceConfig.instanceType Optional string trainingJobDefinitions.[].resourceConfig.volumeKMSKeyID Optional string trainingJobDefinitions.[].resourceConfig.volumeSizeInGB Optional integer trainingJobDefinitions.[].roleARN Optional string trainingJobDefinitions.[].staticHyperParameters Optional object trainingJobDefinitions.[].stoppingCondition Optional object Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with CreateModel. The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete. trainingJobDefinitions.[].stoppingCondition.maxRuntimeInSeconds Optional integer trainingJobDefinitions.[].stoppingCondition.maxWaitTimeInSeconds Optional integer trainingJobDefinitions.[].tuningObjective Optional object Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the Type parameter. trainingJobDefinitions.[].tuningObjective.metricName Optional string trainingJobDefinitions.[].tuningObjective.type_ Optional string trainingJobDefinitions.[].vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). trainingJobDefinitions.[].vpcConfig.securityGroupIDs Optional array trainingJobDefinitions.[].vpcConfig.securityGroupIDs.[] Required string trainingJobDefinitions.[].vpcConfig.subnets.[] Required string warmStartConfig.parentHyperParameterTuningJobs Optional array warmStartConfig.parentHyperParameterTuningJobs.[] Required object A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job. warmStartConfig.warmStartType Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/HyperParameterTuningJob/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string bestTrainingJob : creationTime : string failureReason : string finalHyperParameterTuningJobObjectiveMetric : metricName : string type_ : string value : number objectiveStatus : string trainingEndTime : string trainingJobARN : string trainingJobDefinitionName : string trainingJobName : string trainingJobStatus : string trainingStartTime : string tunedHyperParameters : {} tuningJobName : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string hyperParameterTuningJobStatus : string overallBestTrainingJob : creationTime : string failureReason : string finalHyperParameterTuningJobObjectiveMetric : metricName : string type_ : string value : number objectiveStatus : string trainingEndTime : string trainingJobARN : string trainingJobDefinitionName : string trainingJobName : string trainingJobStatus : string trainingStartTime : string tunedHyperParameters : {} tuningJobName : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. bestTrainingJob Optional object A TrainingJobSummary object that describes the training job that completed with the best current HyperParameterTuningJobObjective. bestTrainingJob.creationTime Optional string bestTrainingJob.failureReason Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric Optional object Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective parameter of HyperParameterTuningJobConfig. bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.metricName Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.type_ Optional string bestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.value Optional number bestTrainingJob.objectiveStatus Optional string bestTrainingJob.trainingEndTime Optional string bestTrainingJob.trainingJobARN Optional string bestTrainingJob.trainingJobDefinitionName Optional string bestTrainingJob.trainingJobName Optional string bestTrainingJob.trainingJobStatus Optional string bestTrainingJob.trainingStartTime Optional string bestTrainingJob.tunedHyperParameters Optional object bestTrainingJob.tuningJobName Optional string conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If the tuning job failed, the reason it failed. hyperParameterTuningJobStatus Optional string The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped. overallBestTrainingJob Optional object If the hyperparameter tuning job is an warm start tuning job with a WarmStartType of IDENTICAL_DATA_AND_ALGORITHM, this is the TrainingJobSummary for the training job with the best objective metric value of all training jobs launched by this tuning job and all parent jobs specified for the warm start tuning job. overallBestTrainingJob.creationTime Optional string overallBestTrainingJob.failureReason Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric Optional object Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the HyperParameterTuningJobObjective parameter of HyperParameterTuningJobConfig. overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.metricName Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.type_ Optional string overallBestTrainingJob.finalHyperParameterTuningJobObjectiveMetric.value Optional number overallBestTrainingJob.objectiveStatus Optional string overallBestTrainingJob.trainingEndTime Optional string overallBestTrainingJob.trainingJobARN Optional string overallBestTrainingJob.trainingJobDefinitionName Optional string overallBestTrainingJob.trainingJobName Optional string overallBestTrainingJob.trainingJobStatus Optional string overallBestTrainingJob.trainingStartTime Optional string overallBestTrainingJob.tunedHyperParameters Optional object overallBestTrainingJob.tuningJobName Optional string","title":"Status"},{"location":"reference/SageMaker/v1alpha1/Model/","text":"Model \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#Model Metadata \u00b6 Property Value Scope Namespaced Kind Model ListKind ModelList Plural models Singular model Spec \u00b6 containers : - containerHostname : string environment : {} image : string imageConfig : repositoryAccessMode : string repositoryAuthConfig : repositoryCredentialsProviderARN : string mode : string modelDataURL : string modelPackageName : string multiModelConfig : modelCacheSetting : string enableNetworkIsolation : boolean executionRoleARN : string inferenceExecutionConfig : mode : string modelName : string primaryContainer : containerHostname : string environment : {} image : string imageConfig : repositoryAccessMode : string repositoryAuthConfig : repositoryCredentialsProviderARN : string mode : string modelDataURL : string modelPackageName : string multiModelConfig : modelCacheSetting : string tags : - key : string value : string vpcConfig : securityGroupIDs : - string subnets : - string Field Description containers Optional array Specifies the containers in the inference pipeline. containers.[] Required object Describes the container, as part of model definition. containers.[].environment Optional object containers.[].image Optional string containers.[].imageConfig Optional object Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). containers.[].imageConfig.repositoryAccessMode Optional string containers.[].imageConfig.repositoryAuthConfig Optional object Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field of the ImageConfig object that you passed to a call to CreateModel and the private Docker registry where the model image is hosted requires authentication. containers.[].imageConfig.repositoryAuthConfig.repositoryCredentialsProviderARN Optional string containers.[].mode Optional string containers.[].modelDataURL Optional string containers.[].modelPackageName Optional string containers.[].multiModelConfig Optional object Specifies additional configuration for hosting multi-model endpoints. containers.[].multiModelConfig.modelCacheSetting Optional string enableNetworkIsolation Optional boolean Isolates the model container. No inbound or outbound network calls can be made to or from the model container. executionRoleARN Required string The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. inferenceExecutionConfig Optional object Specifies details of how containers in a multi-container endpoint are called. inferenceExecutionConfig.mode Optional string modelName Required string The name of the new model. primaryContainer Optional object The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions. primaryContainer.containerHostname Optional string primaryContainer.environment Optional object primaryContainer.image Optional string primaryContainer.imageConfig Optional object Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). primaryContainer.imageConfig.repositoryAccessMode Optional string primaryContainer.imageConfig.repositoryAuthConfig Optional object Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field of the ImageConfig object that you passed to a call to CreateModel and the private Docker registry where the model image is hosted requires authentication. primaryContainer.imageConfig.repositoryAuthConfig.repositoryCredentialsProviderARN Optional string primaryContainer.mode Optional string primaryContainer.modelDataURL Optional string primaryContainer.modelPackageName Optional string primaryContainer.multiModelConfig Optional object Specifies additional configuration for hosting multi-model endpoints. primaryContainer.multiModelConfig.modelCacheSetting Optional string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string vpcConfig Optional object A VpcConfig object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. VpcConfig is used in hosting services and in batch transform. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html). vpcConfig.securityGroupIDs Optional array vpcConfig.securityGroupIDs.[] Required string vpcConfig.subnets.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Model"},{"location":"reference/SageMaker/v1alpha1/Model/#model","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#Model","title":"Model"},{"location":"reference/SageMaker/v1alpha1/Model/#metadata","text":"Property Value Scope Namespaced Kind Model ListKind ModelList Plural models Singular model","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/Model/#spec","text":"containers : - containerHostname : string environment : {} image : string imageConfig : repositoryAccessMode : string repositoryAuthConfig : repositoryCredentialsProviderARN : string mode : string modelDataURL : string modelPackageName : string multiModelConfig : modelCacheSetting : string enableNetworkIsolation : boolean executionRoleARN : string inferenceExecutionConfig : mode : string modelName : string primaryContainer : containerHostname : string environment : {} image : string imageConfig : repositoryAccessMode : string repositoryAuthConfig : repositoryCredentialsProviderARN : string mode : string modelDataURL : string modelPackageName : string multiModelConfig : modelCacheSetting : string tags : - key : string value : string vpcConfig : securityGroupIDs : - string subnets : - string Field Description containers Optional array Specifies the containers in the inference pipeline. containers.[] Required object Describes the container, as part of model definition. containers.[].environment Optional object containers.[].image Optional string containers.[].imageConfig Optional object Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). containers.[].imageConfig.repositoryAccessMode Optional string containers.[].imageConfig.repositoryAuthConfig Optional object Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field of the ImageConfig object that you passed to a call to CreateModel and the private Docker registry where the model image is hosted requires authentication. containers.[].imageConfig.repositoryAuthConfig.repositoryCredentialsProviderARN Optional string containers.[].mode Optional string containers.[].modelDataURL Optional string containers.[].modelPackageName Optional string containers.[].multiModelConfig Optional object Specifies additional configuration for hosting multi-model endpoints. containers.[].multiModelConfig.modelCacheSetting Optional string enableNetworkIsolation Optional boolean Isolates the model container. No inbound or outbound network calls can be made to or from the model container. executionRoleARN Required string The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. inferenceExecutionConfig Optional object Specifies details of how containers in a multi-container endpoint are called. inferenceExecutionConfig.mode Optional string modelName Required string The name of the new model. primaryContainer Optional object The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions. primaryContainer.containerHostname Optional string primaryContainer.environment Optional object primaryContainer.image Optional string primaryContainer.imageConfig Optional object Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). primaryContainer.imageConfig.repositoryAccessMode Optional string primaryContainer.imageConfig.repositoryAuthConfig Optional object Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field of the ImageConfig object that you passed to a call to CreateModel and the private Docker registry where the model image is hosted requires authentication. primaryContainer.imageConfig.repositoryAuthConfig.repositoryCredentialsProviderARN Optional string primaryContainer.mode Optional string primaryContainer.modelDataURL Optional string primaryContainer.modelPackageName Optional string primaryContainer.multiModelConfig Optional object Specifies additional configuration for hosting multi-model endpoints. primaryContainer.multiModelConfig.modelCacheSetting Optional string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string vpcConfig Optional object A VpcConfig object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. VpcConfig is used in hosting services and in batch transform. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html). vpcConfig.securityGroupIDs Optional array vpcConfig.securityGroupIDs.[] Required string vpcConfig.subnets.[] Required string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/Model/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ModelBiasJobDefinition/","text":"ModelBiasJobDefinition \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelBiasJobDefinition Metadata \u00b6 Property Value Scope Namespaced Kind ModelBiasJobDefinition ListKind ModelBiasJobDefinitionList Plural modelbiasjobdefinitions Singular modelbiasjobdefinition Spec \u00b6 jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelBiasAppSpecification : configURI : string environment : {} imageURI : string modelBiasBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelBiasJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string groundTruthS3Input : s3URI : string modelBiasJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the bias job definition. The name must be unique within an AWS Region in the AWS account. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelBiasAppSpecification Required object Configures the model bias job to run a specified Docker container image. modelBiasAppSpecification.configURI Optional string modelBiasAppSpecification.environment Optional object modelBiasAppSpecification.imageURI Optional string modelBiasBaselineConfig Optional object The baseline configuration for a model bias job. modelBiasBaselineConfig.baseliningJobName Optional string modelBiasBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelBiasBaselineConfig.constraintsResource.s3URI Optional string modelBiasJobInput Required object Inputs for the model bias job. modelBiasJobInput.endpointInput Optional object Input object for the endpoint modelBiasJobInput.endpointInput.endTimeOffset Optional string modelBiasJobInput.endpointInput.endpointName Optional string modelBiasJobInput.endpointInput.featuresAttribute Optional string modelBiasJobInput.endpointInput.inferenceAttribute Optional string modelBiasJobInput.endpointInput.localPath Optional string modelBiasJobInput.endpointInput.probabilityAttribute Optional string modelBiasJobInput.endpointInput.probabilityThresholdAttribute Optional number modelBiasJobInput.endpointInput.s3DataDistributionType Optional string modelBiasJobInput.endpointInput.s3InputMode Optional string modelBiasJobInput.endpointInput.startTimeOffset Optional string modelBiasJobInput.groundTruthS3Input Optional object The ground truth labels for the dataset used for the monitoring job. modelBiasJobInput.groundTruthS3Input.s3URI Optional string modelBiasJobOutputConfig Required object The output configuration for monitoring jobs. modelBiasJobOutputConfig.kmsKeyID Optional string modelBiasJobOutputConfig.monitoringOutputs Optional array modelBiasJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Networking options for a model bias job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"ModelBiasJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelBiasJobDefinition/#modelbiasjobdefinition","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelBiasJobDefinition","title":"ModelBiasJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelBiasJobDefinition/#metadata","text":"Property Value Scope Namespaced Kind ModelBiasJobDefinition ListKind ModelBiasJobDefinitionList Plural modelbiasjobdefinitions Singular modelbiasjobdefinition","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ModelBiasJobDefinition/#spec","text":"jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelBiasAppSpecification : configURI : string environment : {} imageURI : string modelBiasBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelBiasJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string groundTruthS3Input : s3URI : string modelBiasJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the bias job definition. The name must be unique within an AWS Region in the AWS account. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelBiasAppSpecification Required object Configures the model bias job to run a specified Docker container image. modelBiasAppSpecification.configURI Optional string modelBiasAppSpecification.environment Optional object modelBiasAppSpecification.imageURI Optional string modelBiasBaselineConfig Optional object The baseline configuration for a model bias job. modelBiasBaselineConfig.baseliningJobName Optional string modelBiasBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelBiasBaselineConfig.constraintsResource.s3URI Optional string modelBiasJobInput Required object Inputs for the model bias job. modelBiasJobInput.endpointInput Optional object Input object for the endpoint modelBiasJobInput.endpointInput.endTimeOffset Optional string modelBiasJobInput.endpointInput.endpointName Optional string modelBiasJobInput.endpointInput.featuresAttribute Optional string modelBiasJobInput.endpointInput.inferenceAttribute Optional string modelBiasJobInput.endpointInput.localPath Optional string modelBiasJobInput.endpointInput.probabilityAttribute Optional string modelBiasJobInput.endpointInput.probabilityThresholdAttribute Optional number modelBiasJobInput.endpointInput.s3DataDistributionType Optional string modelBiasJobInput.endpointInput.s3InputMode Optional string modelBiasJobInput.endpointInput.startTimeOffset Optional string modelBiasJobInput.groundTruthS3Input Optional object The ground truth labels for the dataset used for the monitoring job. modelBiasJobInput.groundTruthS3Input.s3URI Optional string modelBiasJobOutputConfig Required object The output configuration for monitoring jobs. modelBiasJobOutputConfig.kmsKeyID Optional string modelBiasJobOutputConfig.monitoringOutputs Optional array modelBiasJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelBiasJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Networking options for a model bias job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ModelBiasJobDefinition/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ModelExplainabilityJobDefinition/","text":"ModelExplainabilityJobDefinition \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelExplainabilityJobDefinition Metadata \u00b6 Property Value Scope Namespaced Kind ModelExplainabilityJobDefinition ListKind ModelExplainabilityJobDefinitionList Plural modelexplainabilityjobdefinitions Singular modelexplainabilityjobdefinition Spec \u00b6 jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelExplainabilityAppSpecification : configURI : string environment : {} imageURI : string modelExplainabilityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelExplainabilityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string modelExplainabilityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the model explainability job definition. The name must be unique within an AWS Region in the AWS account. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelExplainabilityAppSpecification Required object Configures the model explainability job to run a specified Docker container image. modelExplainabilityAppSpecification.configURI Optional string modelExplainabilityAppSpecification.environment Optional object modelExplainabilityAppSpecification.imageURI Optional string modelExplainabilityBaselineConfig Optional object The baseline configuration for a model explainability job. modelExplainabilityBaselineConfig.baseliningJobName Optional string modelExplainabilityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelExplainabilityBaselineConfig.constraintsResource.s3URI Optional string modelExplainabilityJobInput Required object Inputs for the model explainability job. modelExplainabilityJobInput.endpointInput Optional object Input object for the endpoint modelExplainabilityJobInput.endpointInput.endTimeOffset Optional string modelExplainabilityJobInput.endpointInput.endpointName Optional string modelExplainabilityJobInput.endpointInput.featuresAttribute Optional string modelExplainabilityJobInput.endpointInput.inferenceAttribute Optional string modelExplainabilityJobInput.endpointInput.localPath Optional string modelExplainabilityJobInput.endpointInput.probabilityAttribute Optional string modelExplainabilityJobInput.endpointInput.probabilityThresholdAttribute Optional number modelExplainabilityJobInput.endpointInput.s3DataDistributionType Optional string modelExplainabilityJobInput.endpointInput.s3InputMode Optional string modelExplainabilityJobInput.endpointInput.startTimeOffset Optional string modelExplainabilityJobOutputConfig Required object The output configuration for monitoring jobs. modelExplainabilityJobOutputConfig.kmsKeyID Optional string modelExplainabilityJobOutputConfig.monitoringOutputs Optional array modelExplainabilityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Networking options for a model explainability job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"ModelExplainabilityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelExplainabilityJobDefinition/#modelexplainabilityjobdefinition","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelExplainabilityJobDefinition","title":"ModelExplainabilityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelExplainabilityJobDefinition/#metadata","text":"Property Value Scope Namespaced Kind ModelExplainabilityJobDefinition ListKind ModelExplainabilityJobDefinitionList Plural modelexplainabilityjobdefinitions Singular modelexplainabilityjobdefinition","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ModelExplainabilityJobDefinition/#spec","text":"jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelExplainabilityAppSpecification : configURI : string environment : {} imageURI : string modelExplainabilityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelExplainabilityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string modelExplainabilityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the model explainability job definition. The name must be unique within an AWS Region in the AWS account. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelExplainabilityAppSpecification Required object Configures the model explainability job to run a specified Docker container image. modelExplainabilityAppSpecification.configURI Optional string modelExplainabilityAppSpecification.environment Optional object modelExplainabilityAppSpecification.imageURI Optional string modelExplainabilityBaselineConfig Optional object The baseline configuration for a model explainability job. modelExplainabilityBaselineConfig.baseliningJobName Optional string modelExplainabilityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelExplainabilityBaselineConfig.constraintsResource.s3URI Optional string modelExplainabilityJobInput Required object Inputs for the model explainability job. modelExplainabilityJobInput.endpointInput Optional object Input object for the endpoint modelExplainabilityJobInput.endpointInput.endTimeOffset Optional string modelExplainabilityJobInput.endpointInput.endpointName Optional string modelExplainabilityJobInput.endpointInput.featuresAttribute Optional string modelExplainabilityJobInput.endpointInput.inferenceAttribute Optional string modelExplainabilityJobInput.endpointInput.localPath Optional string modelExplainabilityJobInput.endpointInput.probabilityAttribute Optional string modelExplainabilityJobInput.endpointInput.probabilityThresholdAttribute Optional number modelExplainabilityJobInput.endpointInput.s3DataDistributionType Optional string modelExplainabilityJobInput.endpointInput.s3InputMode Optional string modelExplainabilityJobInput.endpointInput.startTimeOffset Optional string modelExplainabilityJobOutputConfig Required object The output configuration for monitoring jobs. modelExplainabilityJobOutputConfig.kmsKeyID Optional string modelExplainabilityJobOutputConfig.monitoringOutputs Optional array modelExplainabilityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelExplainabilityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Networking options for a model explainability job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ModelExplainabilityJobDefinition/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ModelPackage/","text":"ModelPackage \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelPackage Metadata \u00b6 Property Value Scope Namespaced Kind ModelPackage ListKind ModelPackageList Plural modelpackages Singular modelpackage A versioned model that can be deployed for SageMaker inference. Spec \u00b6 approvalDescription : string certifyForMarketplace : boolean clientToken : string inferenceSpecification : containers : - containerHostname : string image : string imageDigest : string modelDataURL : string productID : string supportedContentTypes : - string supportedRealtimeInferenceInstanceTypes : - string supportedResponseMIMETypes : - string supportedTransformInstanceTypes : - string metadataProperties : commitID : string generatedBy : string projectID : string repository : string modelApprovalStatus : string modelMetrics : bias : report : contentDigest : string contentType : string s3URI : string explainability : report : contentDigest : string contentType : string s3URI : string modelDataQuality : constraints : contentDigest : string contentType : string s3URI : string statistics : contentDigest : string contentType : string s3URI : string modelQuality : constraints : contentDigest : string contentType : string s3URI : string statistics : contentDigest : string contentType : string s3URI : string modelPackageDescription : string modelPackageGroupName : string modelPackageName : string sourceAlgorithmSpecification : sourceAlgorithms : - algorithmName : string modelDataURL : string tags : - key : string value : string validationSpecification : validationProfiles : - profileName : string transformJobDefinition : batchStrategy : string environment : {} maxConcurrentTransforms : integer maxPayloadInMB : integer transformInput : compressionType : string contentType : string dataSource : s3DataSource : s3DataType : string s3URI : string splitType : string transformOutput : accept : string assembleWith : string kmsKeyID : string s3OutputPath : string transformResources : instanceCount : integer instanceType : string volumeKMSKeyID : string validationRole : string Field Description approvalDescription Optional string A description for the approval status of the model. certifyForMarketplace Optional boolean Whether to certify the model package for listing on AWS Marketplace. This parameter is optional for unversioned models, and does not apply to versioned models. clientToken Optional string A unique token that guarantees that the call to this API is idempotent. inferenceSpecification Optional object Specifies details about inference jobs that can be run with models based on this model package, including the following: * The Amazon ECR paths of containers that contain the inference code and model artifacts. * The instance types that the model package supports for transform jobs and real-time endpoints used for inference. * The input and output content formats that the model package supports for inference. inferenceSpecification.containers Optional array inferenceSpecification.containers.[] Required object Describes the Docker container for the model package. inferenceSpecification.containers.[].image Optional string inferenceSpecification.containers.[].imageDigest Optional string inferenceSpecification.containers.[].modelDataURL Optional string inferenceSpecification.containers.[].productID Optional string inferenceSpecification.supportedContentTypes Optional array inferenceSpecification.supportedContentTypes.[] Required string inferenceSpecification.supportedRealtimeInferenceInstanceTypes.[] Required string inferenceSpecification.supportedResponseMIMETypes.[] Required string inferenceSpecification.supportedTransformInstanceTypes.[] Required string metadataProperties.commitID Optional string metadataProperties.generatedBy Optional string metadataProperties.projectID Optional string metadataProperties.repository Optional string modelApprovalStatus Optional string Whether the model is approved for deployment. This parameter is optional for versioned models, and does not apply to unversioned models. For versioned models, the value of this parameter must be set to Approved to deploy the model. modelMetrics Optional object A structure that contains model metrics reports. modelMetrics.bias Optional object Contains bias metrics for a model. modelMetrics.bias.report Optional object modelMetrics.bias.report.contentDigest Optional string modelMetrics.bias.report.contentType Optional string modelMetrics.bias.report.s3URI Optional string modelMetrics.explainability Optional object Contains explainability metrics for a model. modelMetrics.explainability.report Optional object modelMetrics.explainability.report.contentDigest Optional string modelMetrics.explainability.report.contentType Optional string modelMetrics.explainability.report.s3URI Optional string modelMetrics.modelDataQuality Optional object Data quality constraints and statistics for a model. modelMetrics.modelDataQuality.constraints Optional object modelMetrics.modelDataQuality.constraints.contentDigest Optional string modelMetrics.modelDataQuality.constraints.contentType Optional string modelMetrics.modelDataQuality.constraints.s3URI Optional string modelMetrics.modelDataQuality.statistics Optional object modelMetrics.modelDataQuality.statistics.contentDigest Optional string modelMetrics.modelDataQuality.statistics.contentType Optional string modelMetrics.modelDataQuality.statistics.s3URI Optional string modelMetrics.modelQuality Optional object Model quality statistics and constraints. modelMetrics.modelQuality.constraints Optional object modelMetrics.modelQuality.constraints.contentDigest Optional string modelMetrics.modelQuality.constraints.contentType Optional string modelMetrics.modelQuality.constraints.s3URI Optional string modelMetrics.modelQuality.statistics Optional object modelMetrics.modelQuality.statistics.contentDigest Optional string modelMetrics.modelQuality.statistics.contentType Optional string modelMetrics.modelQuality.statistics.s3URI Optional string modelPackageDescription Optional string A description of the model package. modelPackageGroupName Optional string The name of the model group that this model version belongs to. This parameter is required for versioned models, and does not apply to unversioned models. modelPackageName Optional string The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen). This parameter is required for unversioned models. It is not applicable to versioned models. sourceAlgorithmSpecification Optional object Details about the algorithm that was used to create the model package. sourceAlgorithmSpecification.sourceAlgorithms Optional array sourceAlgorithmSpecification.sourceAlgorithms.[] Required object Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to. sourceAlgorithmSpecification.sourceAlgorithms.[].modelDataURL Optional string tags Optional array A list of key value pairs associated with the model. For more information, see Tagging AWS resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the AWS General Reference Guide. tags.[] Required object Describes a tag. tags.[].value Optional string validationSpecification Optional object Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package. validationSpecification.validationProfiles Optional array validationSpecification.validationProfiles.[] Required object Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package. The data provided in the validation profile is made available to your buyers on AWS Marketplace. validationSpecification.validationProfiles.[].transformJobDefinition Optional object Defines the input needed to run a transform job using the inference specification specified in the algorithm. validationSpecification.validationProfiles.[].transformJobDefinition.batchStrategy Optional string validationSpecification.validationProfiles.[].transformJobDefinition.environment Optional object validationSpecification.validationProfiles.[].transformJobDefinition.maxConcurrentTransforms Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.maxPayloadInMB Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.transformInput Optional object Describes the input source of a transform job and the way the transform job consumes it. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.compressionType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.contentType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource Optional object Describes the location of the channel data. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource Optional object Describes the S3 data source. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource.s3DataType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource.s3URI Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.splitType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput Optional object Describes the results of a transform job. validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.accept Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.assembleWith Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.kmsKeyID Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.s3OutputPath Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformResources Optional object Describes the resources, including ML instance types and ML instance count, to use for transform job. validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.instanceCount Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.instanceType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.volumeKMSKeyID Optional string validationSpecification.validationRole Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string lastModifiedTime : string modelApprovalStatus : string modelPackageStatus : string modelPackageStatusDetails : imageScanStatuses : - failureReason : string name : string status : string validationStatuses : - failureReason : string name : string status : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp specifying when the model package was created. lastModifiedTime Optional string The last time the model package was modified. modelApprovalStatus Optional string The approval status of the model package. modelPackageStatus Optional string The current status of the model package. modelPackageStatusDetails Optional object Details about the current status of the model package. modelPackageStatusDetails.imageScanStatuses Optional array modelPackageStatusDetails.imageScanStatuses.[] Required object Represents the overall status of a model package. modelPackageStatusDetails.imageScanStatuses.[].name Optional string modelPackageStatusDetails.imageScanStatuses.[].status Optional string modelPackageStatusDetails.validationStatuses Optional array modelPackageStatusDetails.validationStatuses.[] Required object Represents the overall status of a model package. modelPackageStatusDetails.validationStatuses.[].name Optional string modelPackageStatusDetails.validationStatuses.[].status Optional string","title":"ModelPackage"},{"location":"reference/SageMaker/v1alpha1/ModelPackage/#modelpackage","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelPackage","title":"ModelPackage"},{"location":"reference/SageMaker/v1alpha1/ModelPackage/#metadata","text":"Property Value Scope Namespaced Kind ModelPackage ListKind ModelPackageList Plural modelpackages Singular modelpackage A versioned model that can be deployed for SageMaker inference.","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ModelPackage/#spec","text":"approvalDescription : string certifyForMarketplace : boolean clientToken : string inferenceSpecification : containers : - containerHostname : string image : string imageDigest : string modelDataURL : string productID : string supportedContentTypes : - string supportedRealtimeInferenceInstanceTypes : - string supportedResponseMIMETypes : - string supportedTransformInstanceTypes : - string metadataProperties : commitID : string generatedBy : string projectID : string repository : string modelApprovalStatus : string modelMetrics : bias : report : contentDigest : string contentType : string s3URI : string explainability : report : contentDigest : string contentType : string s3URI : string modelDataQuality : constraints : contentDigest : string contentType : string s3URI : string statistics : contentDigest : string contentType : string s3URI : string modelQuality : constraints : contentDigest : string contentType : string s3URI : string statistics : contentDigest : string contentType : string s3URI : string modelPackageDescription : string modelPackageGroupName : string modelPackageName : string sourceAlgorithmSpecification : sourceAlgorithms : - algorithmName : string modelDataURL : string tags : - key : string value : string validationSpecification : validationProfiles : - profileName : string transformJobDefinition : batchStrategy : string environment : {} maxConcurrentTransforms : integer maxPayloadInMB : integer transformInput : compressionType : string contentType : string dataSource : s3DataSource : s3DataType : string s3URI : string splitType : string transformOutput : accept : string assembleWith : string kmsKeyID : string s3OutputPath : string transformResources : instanceCount : integer instanceType : string volumeKMSKeyID : string validationRole : string Field Description approvalDescription Optional string A description for the approval status of the model. certifyForMarketplace Optional boolean Whether to certify the model package for listing on AWS Marketplace. This parameter is optional for unversioned models, and does not apply to versioned models. clientToken Optional string A unique token that guarantees that the call to this API is idempotent. inferenceSpecification Optional object Specifies details about inference jobs that can be run with models based on this model package, including the following: * The Amazon ECR paths of containers that contain the inference code and model artifacts. * The instance types that the model package supports for transform jobs and real-time endpoints used for inference. * The input and output content formats that the model package supports for inference. inferenceSpecification.containers Optional array inferenceSpecification.containers.[] Required object Describes the Docker container for the model package. inferenceSpecification.containers.[].image Optional string inferenceSpecification.containers.[].imageDigest Optional string inferenceSpecification.containers.[].modelDataURL Optional string inferenceSpecification.containers.[].productID Optional string inferenceSpecification.supportedContentTypes Optional array inferenceSpecification.supportedContentTypes.[] Required string inferenceSpecification.supportedRealtimeInferenceInstanceTypes.[] Required string inferenceSpecification.supportedResponseMIMETypes.[] Required string inferenceSpecification.supportedTransformInstanceTypes.[] Required string metadataProperties.commitID Optional string metadataProperties.generatedBy Optional string metadataProperties.projectID Optional string metadataProperties.repository Optional string modelApprovalStatus Optional string Whether the model is approved for deployment. This parameter is optional for versioned models, and does not apply to unversioned models. For versioned models, the value of this parameter must be set to Approved to deploy the model. modelMetrics Optional object A structure that contains model metrics reports. modelMetrics.bias Optional object Contains bias metrics for a model. modelMetrics.bias.report Optional object modelMetrics.bias.report.contentDigest Optional string modelMetrics.bias.report.contentType Optional string modelMetrics.bias.report.s3URI Optional string modelMetrics.explainability Optional object Contains explainability metrics for a model. modelMetrics.explainability.report Optional object modelMetrics.explainability.report.contentDigest Optional string modelMetrics.explainability.report.contentType Optional string modelMetrics.explainability.report.s3URI Optional string modelMetrics.modelDataQuality Optional object Data quality constraints and statistics for a model. modelMetrics.modelDataQuality.constraints Optional object modelMetrics.modelDataQuality.constraints.contentDigest Optional string modelMetrics.modelDataQuality.constraints.contentType Optional string modelMetrics.modelDataQuality.constraints.s3URI Optional string modelMetrics.modelDataQuality.statistics Optional object modelMetrics.modelDataQuality.statistics.contentDigest Optional string modelMetrics.modelDataQuality.statistics.contentType Optional string modelMetrics.modelDataQuality.statistics.s3URI Optional string modelMetrics.modelQuality Optional object Model quality statistics and constraints. modelMetrics.modelQuality.constraints Optional object modelMetrics.modelQuality.constraints.contentDigest Optional string modelMetrics.modelQuality.constraints.contentType Optional string modelMetrics.modelQuality.constraints.s3URI Optional string modelMetrics.modelQuality.statistics Optional object modelMetrics.modelQuality.statistics.contentDigest Optional string modelMetrics.modelQuality.statistics.contentType Optional string modelMetrics.modelQuality.statistics.s3URI Optional string modelPackageDescription Optional string A description of the model package. modelPackageGroupName Optional string The name of the model group that this model version belongs to. This parameter is required for versioned models, and does not apply to unversioned models. modelPackageName Optional string The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen). This parameter is required for unversioned models. It is not applicable to versioned models. sourceAlgorithmSpecification Optional object Details about the algorithm that was used to create the model package. sourceAlgorithmSpecification.sourceAlgorithms Optional array sourceAlgorithmSpecification.sourceAlgorithms.[] Required object Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to. sourceAlgorithmSpecification.sourceAlgorithms.[].modelDataURL Optional string tags Optional array A list of key value pairs associated with the model. For more information, see Tagging AWS resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the AWS General Reference Guide. tags.[] Required object Describes a tag. tags.[].value Optional string validationSpecification Optional object Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package. validationSpecification.validationProfiles Optional array validationSpecification.validationProfiles.[] Required object Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package. The data provided in the validation profile is made available to your buyers on AWS Marketplace. validationSpecification.validationProfiles.[].transformJobDefinition Optional object Defines the input needed to run a transform job using the inference specification specified in the algorithm. validationSpecification.validationProfiles.[].transformJobDefinition.batchStrategy Optional string validationSpecification.validationProfiles.[].transformJobDefinition.environment Optional object validationSpecification.validationProfiles.[].transformJobDefinition.maxConcurrentTransforms Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.maxPayloadInMB Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.transformInput Optional object Describes the input source of a transform job and the way the transform job consumes it. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.compressionType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.contentType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource Optional object Describes the location of the channel data. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource Optional object Describes the S3 data source. validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource.s3DataType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.dataSource.s3DataSource.s3URI Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformInput.splitType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput Optional object Describes the results of a transform job. validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.accept Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.assembleWith Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.kmsKeyID Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformOutput.s3OutputPath Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformResources Optional object Describes the resources, including ML instance types and ML instance count, to use for transform job. validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.instanceCount Optional integer validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.instanceType Optional string validationSpecification.validationProfiles.[].transformJobDefinition.transformResources.volumeKMSKeyID Optional string validationSpecification.validationRole Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ModelPackage/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string lastModifiedTime : string modelApprovalStatus : string modelPackageStatus : string modelPackageStatusDetails : imageScanStatuses : - failureReason : string name : string status : string validationStatuses : - failureReason : string name : string status : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp specifying when the model package was created. lastModifiedTime Optional string The last time the model package was modified. modelApprovalStatus Optional string The approval status of the model package. modelPackageStatus Optional string The current status of the model package. modelPackageStatusDetails Optional object Details about the current status of the model package. modelPackageStatusDetails.imageScanStatuses Optional array modelPackageStatusDetails.imageScanStatuses.[] Required object Represents the overall status of a model package. modelPackageStatusDetails.imageScanStatuses.[].name Optional string modelPackageStatusDetails.imageScanStatuses.[].status Optional string modelPackageStatusDetails.validationStatuses Optional array modelPackageStatusDetails.validationStatuses.[] Required object Represents the overall status of a model package. modelPackageStatusDetails.validationStatuses.[].name Optional string modelPackageStatusDetails.validationStatuses.[].status Optional string","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ModelPackageGroup/","text":"ModelPackageGroup \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelPackageGroup Metadata \u00b6 Property Value Scope Namespaced Kind ModelPackageGroup ListKind ModelPackageGroupList Plural modelpackagegroups Singular modelpackagegroup A group of versioned models in the model registry. Spec \u00b6 modelPackageGroupDescription : string modelPackageGroupName : string tags : - key : string value : string Field Description modelPackageGroupDescription Optional string A description for the model group. modelPackageGroupName Required string The name of the model group. tags Optional array A list of key value pairs associated with the model group. For more information, see Tagging AWS resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the AWS General Reference Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string modelPackageGroupStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition modelPackageGroupStatus Optional string The status of the model group.","title":"ModelPackageGroup"},{"location":"reference/SageMaker/v1alpha1/ModelPackageGroup/#modelpackagegroup","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelPackageGroup","title":"ModelPackageGroup"},{"location":"reference/SageMaker/v1alpha1/ModelPackageGroup/#metadata","text":"Property Value Scope Namespaced Kind ModelPackageGroup ListKind ModelPackageGroupList Plural modelpackagegroups Singular modelpackagegroup A group of versioned models in the model registry.","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ModelPackageGroup/#spec","text":"modelPackageGroupDescription : string modelPackageGroupName : string tags : - key : string value : string Field Description modelPackageGroupDescription Optional string A description for the model group. modelPackageGroupName Required string The name of the model group. tags Optional array A list of key value pairs associated with the model group. For more information, see Tagging AWS resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the AWS General Reference Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ModelPackageGroup/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string modelPackageGroupStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition modelPackageGroupStatus Optional string The status of the model group.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ModelQualityJobDefinition/","text":"ModelQualityJobDefinition \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelQualityJobDefinition Metadata \u00b6 Property Value Scope Namespaced Kind ModelQualityJobDefinition ListKind ModelQualityJobDefinitionList Plural modelqualityjobdefinitions Singular modelqualityjobdefinition Spec \u00b6 jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelQualityAppSpecification : containerArguments : - string containerEntrypoint : - string environment : {} imageURI : string postAnalyticsProcessorSourceURI : string problemType : string recordPreprocessorSourceURI : string modelQualityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelQualityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string groundTruthS3Input : s3URI : string modelQualityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the monitoring job definition. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelQualityAppSpecification Required object The container that runs the monitoring job. modelQualityAppSpecification.containerArguments Optional array modelQualityAppSpecification.containerArguments.[] Required string modelQualityAppSpecification.containerEntrypoint.[] Required string modelQualityAppSpecification.imageURI Optional string modelQualityAppSpecification.postAnalyticsProcessorSourceURI Optional string modelQualityAppSpecification.problemType Optional string modelQualityAppSpecification.recordPreprocessorSourceURI Optional string modelQualityBaselineConfig Optional object Specifies the constraints and baselines for the monitoring job. modelQualityBaselineConfig.baseliningJobName Optional string modelQualityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelQualityBaselineConfig.constraintsResource.s3URI Optional string modelQualityJobInput Required object A list of the inputs that are monitored. Currently endpoints are supported. modelQualityJobInput.endpointInput Optional object Input object for the endpoint modelQualityJobInput.endpointInput.endTimeOffset Optional string modelQualityJobInput.endpointInput.endpointName Optional string modelQualityJobInput.endpointInput.featuresAttribute Optional string modelQualityJobInput.endpointInput.inferenceAttribute Optional string modelQualityJobInput.endpointInput.localPath Optional string modelQualityJobInput.endpointInput.probabilityAttribute Optional string modelQualityJobInput.endpointInput.probabilityThresholdAttribute Optional number modelQualityJobInput.endpointInput.s3DataDistributionType Optional string modelQualityJobInput.endpointInput.s3InputMode Optional string modelQualityJobInput.endpointInput.startTimeOffset Optional string modelQualityJobInput.groundTruthS3Input Optional object The ground truth labels for the dataset used for the monitoring job. modelQualityJobInput.groundTruthS3Input.s3URI Optional string modelQualityJobOutputConfig Required object The output configuration for monitoring jobs. modelQualityJobOutputConfig.kmsKeyID Optional string modelQualityJobOutputConfig.monitoringOutputs Optional array modelQualityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Specifies the network configuration for the monitoring job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"ModelQualityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelQualityJobDefinition/#modelqualityjobdefinition","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ModelQualityJobDefinition","title":"ModelQualityJobDefinition"},{"location":"reference/SageMaker/v1alpha1/ModelQualityJobDefinition/#metadata","text":"Property Value Scope Namespaced Kind ModelQualityJobDefinition ListKind ModelQualityJobDefinitionList Plural modelqualityjobdefinitions Singular modelqualityjobdefinition","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ModelQualityJobDefinition/#spec","text":"jobDefinitionName : string jobResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer modelQualityAppSpecification : containerArguments : - string containerEntrypoint : - string environment : {} imageURI : string postAnalyticsProcessorSourceURI : string problemType : string recordPreprocessorSourceURI : string modelQualityBaselineConfig : baseliningJobName : string constraintsResource : s3URI : string modelQualityJobInput : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string groundTruthS3Input : s3URI : string modelQualityJobOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description jobDefinitionName Required string The name of the monitoring job definition. jobResources Required object Identifies the resources to deploy for a monitoring job. jobResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. jobResources.clusterConfig.instanceCount Optional integer jobResources.clusterConfig.instanceType Optional string jobResources.clusterConfig.volumeKMSKeyID Optional string jobResources.clusterConfig.volumeSizeInGB Optional integer modelQualityAppSpecification Required object The container that runs the monitoring job. modelQualityAppSpecification.containerArguments Optional array modelQualityAppSpecification.containerArguments.[] Required string modelQualityAppSpecification.containerEntrypoint.[] Required string modelQualityAppSpecification.imageURI Optional string modelQualityAppSpecification.postAnalyticsProcessorSourceURI Optional string modelQualityAppSpecification.problemType Optional string modelQualityAppSpecification.recordPreprocessorSourceURI Optional string modelQualityBaselineConfig Optional object Specifies the constraints and baselines for the monitoring job. modelQualityBaselineConfig.baseliningJobName Optional string modelQualityBaselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. modelQualityBaselineConfig.constraintsResource.s3URI Optional string modelQualityJobInput Required object A list of the inputs that are monitored. Currently endpoints are supported. modelQualityJobInput.endpointInput Optional object Input object for the endpoint modelQualityJobInput.endpointInput.endTimeOffset Optional string modelQualityJobInput.endpointInput.endpointName Optional string modelQualityJobInput.endpointInput.featuresAttribute Optional string modelQualityJobInput.endpointInput.inferenceAttribute Optional string modelQualityJobInput.endpointInput.localPath Optional string modelQualityJobInput.endpointInput.probabilityAttribute Optional string modelQualityJobInput.endpointInput.probabilityThresholdAttribute Optional number modelQualityJobInput.endpointInput.s3DataDistributionType Optional string modelQualityJobInput.endpointInput.s3InputMode Optional string modelQualityJobInput.endpointInput.startTimeOffset Optional string modelQualityJobInput.groundTruthS3Input Optional object The ground truth labels for the dataset used for the monitoring job. modelQualityJobInput.groundTruthS3Input.s3URI Optional string modelQualityJobOutputConfig Required object The output configuration for monitoring jobs. modelQualityJobOutputConfig.kmsKeyID Optional string modelQualityJobOutputConfig.monitoringOutputs Optional array modelQualityJobOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string modelQualityJobOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string networkConfig Optional object Specifies the network configuration for the monitoring job. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ModelQualityJobDefinition/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition","title":"Status"},{"location":"reference/SageMaker/v1alpha1/MonitoringSchedule/","text":"MonitoringSchedule \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#MonitoringSchedule Metadata \u00b6 Property Value Scope Namespaced Kind MonitoringSchedule ListKind MonitoringScheduleList Plural monitoringschedules Singular monitoringschedule A schedule for a model monitoring job. For information about model monitor, see Amazon SageMaker Model Monitor (https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html). Spec \u00b6 monitoringScheduleConfig : monitoringJobDefinition : baselineConfig : baseliningJobName : string constraintsResource : s3URI : string statisticsResource : s3URI : string environment : {} monitoringAppSpecification : containerArguments : - string containerEntrypoint : - string imageURI : string postAnalyticsProcessorSourceURI : string recordPreprocessorSourceURI : string monitoringInputs : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string monitoringOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string monitoringResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer monitoringJobDefinitionName : string monitoringType : string scheduleConfig : scheduleExpression : string monitoringScheduleName : string tags : - key : string value : string Field Description monitoringScheduleConfig Required object The configuration object that specifies the monitoring schedule and defines the monitoring job. monitoringScheduleConfig.monitoringJobDefinition Optional object Defines the monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig Optional object Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.baseliningJobName Optional string monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.constraintsResource.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.statisticsResource Optional object The statistics resource for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.statisticsResource.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.environment Optional object monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification Optional object Container image configuration object for the monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerArguments Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerArguments.[] Required string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerEntrypoint.[] Required string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.postAnalyticsProcessorSourceURI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.recordPreprocessorSourceURI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[] Required object The inputs for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.endTimeOffset Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.endpointName Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.featuresAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.inferenceAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.localPath Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.probabilityAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.probabilityThresholdAttribute Optional number monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.s3DataDistributionType Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.s3InputMode Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.startTimeOffset Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig Optional object The output configuration for monitoring jobs. monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.kmsKeyID Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources Optional object Identifies the resources to deploy for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.instanceCount Optional integer monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.instanceType Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.volumeKMSKeyID Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.volumeSizeInGB Optional integer monitoringScheduleConfig.monitoringJobDefinition.networkConfig Optional object Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs. monitoringScheduleConfig.monitoringJobDefinition.networkConfig.enableInterContainerTrafficEncryption Optional boolean monitoringScheduleConfig.monitoringJobDefinition.networkConfig.enableNetworkIsolation Optional boolean monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.securityGroupIDs Optional array monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.securityGroupIDs.[] Required string monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.subnets.[] Required string monitoringScheduleConfig.monitoringJobDefinition.stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. monitoringScheduleConfig.monitoringJobDefinition.stoppingCondition.maxRuntimeInSeconds Optional integer monitoringScheduleConfig.monitoringJobDefinitionName Optional string monitoringScheduleConfig.monitoringType Optional string monitoringScheduleConfig.scheduleConfig Optional object Configuration details about the monitoring schedule. monitoringScheduleConfig.scheduleConfig.scheduleExpression Optional string monitoringScheduleName Required string The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account. tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string failureReason : string lastModifiedTime : string lastMonitoringExecutionSummary : creationTime : string endpointName : string failureReason : string lastModifiedTime : string monitoringExecutionStatus : string monitoringJobDefinitionName : string monitoringScheduleName : string monitoringType : string processingJobARN : string scheduledTime : string monitoringScheduleStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string The time at which the monitoring job was created. failureReason Optional string A string, up to one KB in size, that contains the reason a monitoring job failed, if it failed. lastModifiedTime Optional string The time at which the monitoring job was last modified. lastMonitoringExecutionSummary Optional object Describes metadata on the last execution to run, if there was one. lastMonitoringExecutionSummary.creationTime Optional string lastMonitoringExecutionSummary.endpointName Optional string lastMonitoringExecutionSummary.failureReason Optional string lastMonitoringExecutionSummary.lastModifiedTime Optional string lastMonitoringExecutionSummary.monitoringExecutionStatus Optional string lastMonitoringExecutionSummary.monitoringJobDefinitionName Optional string lastMonitoringExecutionSummary.monitoringScheduleName Optional string lastMonitoringExecutionSummary.monitoringType Optional string lastMonitoringExecutionSummary.processingJobARN Optional string lastMonitoringExecutionSummary.scheduledTime Optional string monitoringScheduleStatus Optional string The status of an monitoring job.","title":"MonitoringSchedule"},{"location":"reference/SageMaker/v1alpha1/MonitoringSchedule/#monitoringschedule","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#MonitoringSchedule","title":"MonitoringSchedule"},{"location":"reference/SageMaker/v1alpha1/MonitoringSchedule/#metadata","text":"Property Value Scope Namespaced Kind MonitoringSchedule ListKind MonitoringScheduleList Plural monitoringschedules Singular monitoringschedule A schedule for a model monitoring job. For information about model monitor, see Amazon SageMaker Model Monitor (https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html).","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/MonitoringSchedule/#spec","text":"monitoringScheduleConfig : monitoringJobDefinition : baselineConfig : baseliningJobName : string constraintsResource : s3URI : string statisticsResource : s3URI : string environment : {} monitoringAppSpecification : containerArguments : - string containerEntrypoint : - string imageURI : string postAnalyticsProcessorSourceURI : string recordPreprocessorSourceURI : string monitoringInputs : endpointInput : endTimeOffset : string endpointName : string featuresAttribute : string inferenceAttribute : string localPath : string probabilityAttribute : string probabilityThresholdAttribute : number s3DataDistributionType : string s3InputMode : string startTimeOffset : string monitoringOutputConfig : kmsKeyID : string monitoringOutputs : s3Output : localPath : string s3URI : string s3UploadMode : string monitoringResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string roleARN : string stoppingCondition : maxRuntimeInSeconds : integer monitoringJobDefinitionName : string monitoringType : string scheduleConfig : scheduleExpression : string monitoringScheduleName : string tags : - key : string value : string Field Description monitoringScheduleConfig Required object The configuration object that specifies the monitoring schedule and defines the monitoring job. monitoringScheduleConfig.monitoringJobDefinition Optional object Defines the monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig Optional object Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.baseliningJobName Optional string monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.constraintsResource Optional object The constraints resource for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.constraintsResource.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.statisticsResource Optional object The statistics resource for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.baselineConfig.statisticsResource.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.environment Optional object monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification Optional object Container image configuration object for the monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerArguments Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerArguments.[] Required string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.containerEntrypoint.[] Required string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.postAnalyticsProcessorSourceURI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringAppSpecification.recordPreprocessorSourceURI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[] Required object The inputs for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.endTimeOffset Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.endpointName Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.featuresAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.inferenceAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.localPath Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.probabilityAttribute Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.probabilityThresholdAttribute Optional number monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.s3DataDistributionType Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.s3InputMode Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringInputs.[].endpointInput.startTimeOffset Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig Optional object The output configuration for monitoring jobs. monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.kmsKeyID Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs Optional array monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[] Required object The output object for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.localPath Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.s3URI Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringOutputConfig.monitoringOutputs.[].s3Output.s3UploadMode Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources Optional object Identifies the resources to deploy for a monitoring job. monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig Optional object Configuration for the cluster used to run model monitoring jobs. monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.instanceCount Optional integer monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.instanceType Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.volumeKMSKeyID Optional string monitoringScheduleConfig.monitoringJobDefinition.monitoringResources.clusterConfig.volumeSizeInGB Optional integer monitoringScheduleConfig.monitoringJobDefinition.networkConfig Optional object Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs. monitoringScheduleConfig.monitoringJobDefinition.networkConfig.enableInterContainerTrafficEncryption Optional boolean monitoringScheduleConfig.monitoringJobDefinition.networkConfig.enableNetworkIsolation Optional boolean monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.securityGroupIDs Optional array monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.securityGroupIDs.[] Required string monitoringScheduleConfig.monitoringJobDefinition.networkConfig.vpcConfig.subnets.[] Required string monitoringScheduleConfig.monitoringJobDefinition.stoppingCondition Optional object A time limit for how long the monitoring job is allowed to run before stopping. monitoringScheduleConfig.monitoringJobDefinition.stoppingCondition.maxRuntimeInSeconds Optional integer monitoringScheduleConfig.monitoringJobDefinitionName Optional string monitoringScheduleConfig.monitoringType Optional string monitoringScheduleConfig.scheduleConfig Optional object Configuration details about the monitoring schedule. monitoringScheduleConfig.scheduleConfig.scheduleExpression Optional string monitoringScheduleName Required string The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account. tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/MonitoringSchedule/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string failureReason : string lastModifiedTime : string lastMonitoringExecutionSummary : creationTime : string endpointName : string failureReason : string lastModifiedTime : string monitoringExecutionStatus : string monitoringJobDefinitionName : string monitoringScheduleName : string monitoringType : string processingJobARN : string scheduledTime : string monitoringScheduleStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string The time at which the monitoring job was created. failureReason Optional string A string, up to one KB in size, that contains the reason a monitoring job failed, if it failed. lastModifiedTime Optional string The time at which the monitoring job was last modified. lastMonitoringExecutionSummary Optional object Describes metadata on the last execution to run, if there was one. lastMonitoringExecutionSummary.creationTime Optional string lastMonitoringExecutionSummary.endpointName Optional string lastMonitoringExecutionSummary.failureReason Optional string lastMonitoringExecutionSummary.lastModifiedTime Optional string lastMonitoringExecutionSummary.monitoringExecutionStatus Optional string lastMonitoringExecutionSummary.monitoringJobDefinitionName Optional string lastMonitoringExecutionSummary.monitoringScheduleName Optional string lastMonitoringExecutionSummary.monitoringType Optional string lastMonitoringExecutionSummary.processingJobARN Optional string lastMonitoringExecutionSummary.scheduledTime Optional string monitoringScheduleStatus Optional string The status of an monitoring job.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/NotebookInstance/","text":"NotebookInstance \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#NotebookInstance Metadata \u00b6 Property Value Scope Namespaced Kind NotebookInstance ListKind NotebookInstanceList Plural notebookinstances Singular notebookinstance Spec \u00b6 acceleratorTypes : - string additionalCodeRepositories : - string defaultCodeRepository : string directInternetAccess : string instanceType : string kmsKeyID : string lifecycleConfigName : string notebookInstanceName : string roleARN : string rootAccess : string securityGroupIDs : - string subnetID : string tags : - key : string value : string volumeSizeInGB : integer Field Description acceleratorTypes Optional array A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see Using Elastic Inference in Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html). acceleratorTypes.[] Required string additionalCodeRepositories.[] Required string directInternetAccess Optional string Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to Disabled this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC. For more information, see Notebook Instances Are Internet-Enabled by Default (https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access). You can set the value of this parameter to Disabled only if you set a value for the SubnetId parameter. instanceType Required string The type of ML compute instance to launch for the notebook instance. kmsKeyID Optional string The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see Enabling and Disabling Keys (https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html) in the AWS Key Management Service Developer Guide. lifecycleConfigName Optional string The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html). notebookInstanceName Required string The name of the new notebook instance. roleARN Required string When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. rootAccess Optional string Whether root access is enabled or disabled for users of the notebook instance. The default value is Enabled. Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users. securityGroupIDs Optional array The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. securityGroupIDs.[] Required string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string volumeSizeInGB Optional integer The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB. Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string notebookInstanceStatus : string stoppedByControllerMetadata : string url : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If status is Failed, the reason it failed. notebookInstanceStatus Optional string The status of the notebook instance. stoppedByControllerMetadata Optional string The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. url Optional string The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.","title":"NotebookInstance"},{"location":"reference/SageMaker/v1alpha1/NotebookInstance/#notebookinstance","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#NotebookInstance","title":"NotebookInstance"},{"location":"reference/SageMaker/v1alpha1/NotebookInstance/#metadata","text":"Property Value Scope Namespaced Kind NotebookInstance ListKind NotebookInstanceList Plural notebookinstances Singular notebookinstance","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/NotebookInstance/#spec","text":"acceleratorTypes : - string additionalCodeRepositories : - string defaultCodeRepository : string directInternetAccess : string instanceType : string kmsKeyID : string lifecycleConfigName : string notebookInstanceName : string roleARN : string rootAccess : string securityGroupIDs : - string subnetID : string tags : - key : string value : string volumeSizeInGB : integer Field Description acceleratorTypes Optional array A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see Using Elastic Inference in Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html). acceleratorTypes.[] Required string additionalCodeRepositories.[] Required string directInternetAccess Optional string Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to Disabled this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC. For more information, see Notebook Instances Are Internet-Enabled by Default (https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access). You can set the value of this parameter to Disabled only if you set a value for the SubnetId parameter. instanceType Required string The type of ML compute instance to launch for the notebook instance. kmsKeyID Optional string The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see Enabling and Disabling Keys (https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html) in the AWS Key Management Service Developer Guide. lifecycleConfigName Optional string The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html). notebookInstanceName Required string The name of the new notebook instance. roleARN Required string When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. rootAccess Optional string Whether root access is enabled or disabled for users of the notebook instance. The default value is Enabled. Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users. securityGroupIDs Optional array The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. securityGroupIDs.[] Required string tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string volumeSizeInGB Optional integer The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/NotebookInstance/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string notebookInstanceStatus : string stoppedByControllerMetadata : string url : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If status is Failed, the reason it failed. notebookInstanceStatus Optional string The status of the notebook instance. stoppedByControllerMetadata Optional string The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. url Optional string The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/NotebookInstanceLifecycleConfig/","text":"NotebookInstanceLifecycleConfig \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#NotebookInstanceLifecycleConfig Metadata \u00b6 Property Value Scope Namespaced Kind NotebookInstanceLifecycleConfig ListKind NotebookInstanceLifecycleConfigList Plural notebookinstancelifecycleconfigs Singular notebookinstancelifecycleconfig Spec \u00b6 notebookInstanceLifecycleConfigName : string onCreate : - content : string onStart : - content : string Field Description notebookInstanceLifecycleConfigName Required string The name of the lifecycle configuration. onCreate Optional array A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string. onCreate.[] Required object Contains the notebook instance lifecycle configuration script. Each lifecycle configuration script has a limit of 16384 characters. The value of the $PATH environment variable that is available to both scripts is /sbin:bin:/usr/sbin:/usr/bin. View CloudWatch Logs for notebook instance lifecycle configurations in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook]. Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started. For information about notebook instance lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html). onStart Optional array A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string. onStart.[] Required object Contains the notebook instance lifecycle configuration script. Each lifecycle configuration script has a limit of 16384 characters. The value of the $PATH environment variable that is available to both scripts is /sbin:bin:/usr/sbin:/usr/bin. View CloudWatch Logs for notebook instance lifecycle configurations in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook]. Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started. For information about notebook instance lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html). Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string lastModifiedTime : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp that tells when the lifecycle configuration was created. lastModifiedTime Optional string A timestamp that tells when the lifecycle configuration was last modified.","title":"NotebookInstanceLifecycleConfig"},{"location":"reference/SageMaker/v1alpha1/NotebookInstanceLifecycleConfig/#notebookinstancelifecycleconfig","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#NotebookInstanceLifecycleConfig","title":"NotebookInstanceLifecycleConfig"},{"location":"reference/SageMaker/v1alpha1/NotebookInstanceLifecycleConfig/#metadata","text":"Property Value Scope Namespaced Kind NotebookInstanceLifecycleConfig ListKind NotebookInstanceLifecycleConfigList Plural notebookinstancelifecycleconfigs Singular notebookinstancelifecycleconfig","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/NotebookInstanceLifecycleConfig/#spec","text":"notebookInstanceLifecycleConfigName : string onCreate : - content : string onStart : - content : string Field Description notebookInstanceLifecycleConfigName Required string The name of the lifecycle configuration. onCreate Optional array A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string. onCreate.[] Required object Contains the notebook instance lifecycle configuration script. Each lifecycle configuration script has a limit of 16384 characters. The value of the $PATH environment variable that is available to both scripts is /sbin:bin:/usr/sbin:/usr/bin. View CloudWatch Logs for notebook instance lifecycle configurations in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook]. Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started. For information about notebook instance lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html). onStart Optional array A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string. onStart.[] Required object Contains the notebook instance lifecycle configuration script. Each lifecycle configuration script has a limit of 16384 characters. The value of the $PATH environment variable that is available to both scripts is /sbin:bin:/usr/sbin:/usr/bin. View CloudWatch Logs for notebook instance lifecycle configurations in log group /aws/sagemaker/NotebookInstances in log stream [notebook-instance-name]/[LifecycleConfigHook]. Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started. For information about notebook instance lifestyle configurations, see Step 2.1: (Optional) Customize a Notebook Instance (https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html).","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/NotebookInstanceLifecycleConfig/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationTime : string lastModifiedTime : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationTime Optional string A timestamp that tells when the lifecycle configuration was created. lastModifiedTime Optional string A timestamp that tells when the lifecycle configuration was last modified.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/ProcessingJob/","text":"ProcessingJob \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ProcessingJob Metadata \u00b6 Property Value Scope Namespaced Kind ProcessingJob ListKind ProcessingJobList Plural processingjobs Singular processingjob An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see Process Data and Evaluate Models (https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html). Spec \u00b6 appSpecification : containerArguments : - string containerEntrypoint : - string imageURI : string environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string processingInputs : - appManaged : boolean datasetDefinition : athenaDatasetDefinition : catalog : string database : string kmsKeyID : string outputCompression : string outputFormat : string outputS3URI : string queryString : string workGroup : string dataDistributionType : string inputMode : string localPath : string redshiftDatasetDefinition : clusterID : string clusterRoleARN : string database : string dbUser : string kmsKeyID : string outputCompression : string outputFormat : string outputS3URI : string queryString : string inputName : string s3Input : localPath : string s3CompressionType : string s3DataDistributionType : string s3DataType : string s3InputMode : string s3URI : string processingJobName : string processingOutputConfig : kmsKeyID : string outputs : - appManaged : boolean featureStoreOutput : featureGroupName : string outputName : string s3Output : localPath : string s3URI : string s3UploadMode : string processingResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description appSpecification Required object Configures the processing job to run a specified Docker container image. appSpecification.containerArguments Optional array appSpecification.containerArguments.[] Required string appSpecification.containerEntrypoint.[] Required string environment Optional object The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string networkConfig Optional object Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string processingInputs.[] Required object The inputs for a processing job. The processing input must specify exactly one of either S3Input or DatasetDefinition types. processingInputs.[].datasetDefinition Optional object Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either AthenaDatasetDefinition or RedshiftDatasetDefinition types. processingInputs.[].datasetDefinition.athenaDatasetDefinition Optional object Configuration for Athena Dataset Definition input. processingInputs.[].datasetDefinition.athenaDatasetDefinition.catalog Optional string The name of the data catalog used in Athena query execution. processingInputs.[].datasetDefinition.athenaDatasetDefinition.database Optional string The name of the database used in the Athena query execution. processingInputs.[].datasetDefinition.athenaDatasetDefinition.kmsKeyID Optional string processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputCompression Optional string The compression used for Athena query results. processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputFormat Optional string The data storage format for Athena query results. processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputS3URI Optional string processingInputs.[].datasetDefinition.athenaDatasetDefinition.queryString Optional string The SQL query statements, to be executed. processingInputs.[].datasetDefinition.athenaDatasetDefinition.workGroup Optional string The name of the workgroup in which the Athena query is being started. processingInputs.[].datasetDefinition.dataDistributionType Optional string processingInputs.[].datasetDefinition.inputMode Optional string processingInputs.[].datasetDefinition.localPath Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition Optional object Configuration for Redshift Dataset Definition input. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.clusterID Optional string The Redshift cluster Identifier. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.clusterRoleARN Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.database Optional string The name of the Redshift database used in Redshift query execution. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.dbUser Optional string The database user name used in Redshift query execution. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.kmsKeyID Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputCompression Optional string The compression used for Redshift query results. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputFormat Optional string The data storage format for Redshift query results. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputS3URI Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.queryString Optional string The SQL query statements to be executed. processingInputs.[].inputName Optional string processingInputs.[].s3Input Optional object Configuration for downloading input data from Amazon S3 into the processing container. processingInputs.[].s3Input.localPath Optional string processingInputs.[].s3Input.s3CompressionType Optional string processingInputs.[].s3Input.s3DataDistributionType Optional string processingInputs.[].s3Input.s3DataType Optional string processingInputs.[].s3Input.s3InputMode Optional string processingInputs.[].s3Input.s3URI Optional string processingJobName Required string The name of the processing job. The name must be unique within an AWS Region in the AWS account. processingOutputConfig Optional object Output configuration for the processing job. processingOutputConfig.kmsKeyID Optional string processingOutputConfig.outputs Optional array processingOutputConfig.outputs.[] Required object Describes the results of a processing job. The processing output must specify exactly one of either S3Output or FeatureStoreOutput types. processingOutputConfig.outputs.[].featureStoreOutput Optional object Configuration for processing job outputs in Amazon SageMaker Feature Store. processingOutputConfig.outputs.[].featureStoreOutput.featureGroupName Optional string processingOutputConfig.outputs.[].outputName Optional string processingOutputConfig.outputs.[].s3Output Optional object Configuration for uploading output data to Amazon S3 from the processing container. processingOutputConfig.outputs.[].s3Output.localPath Optional string processingOutputConfig.outputs.[].s3Output.s3URI Optional string processingOutputConfig.outputs.[].s3Output.s3UploadMode Optional string processingResources Required object Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance. processingResources.clusterConfig Optional object Configuration for the cluster used to run a processing job. processingResources.clusterConfig.instanceCount Optional integer processingResources.clusterConfig.instanceType Optional string processingResources.clusterConfig.volumeKMSKeyID Optional string processingResources.clusterConfig.volumeSizeInGB Optional integer roleARN Required string The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. stoppingCondition Optional object The time limit for how long the processing job is allowed to run. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string processingJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string A string, up to one KB in size, that contains the reason a processing job failed, if it failed. processingJobStatus Optional string Provides the status of a processing job.","title":"ProcessingJob"},{"location":"reference/SageMaker/v1alpha1/ProcessingJob/#processingjob","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#ProcessingJob","title":"ProcessingJob"},{"location":"reference/SageMaker/v1alpha1/ProcessingJob/#metadata","text":"Property Value Scope Namespaced Kind ProcessingJob ListKind ProcessingJobList Plural processingjobs Singular processingjob An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see Process Data and Evaluate Models (https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html).","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/ProcessingJob/#spec","text":"appSpecification : containerArguments : - string containerEntrypoint : - string imageURI : string environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string networkConfig : enableInterContainerTrafficEncryption : boolean enableNetworkIsolation : boolean vpcConfig : securityGroupIDs : - string subnets : - string processingInputs : - appManaged : boolean datasetDefinition : athenaDatasetDefinition : catalog : string database : string kmsKeyID : string outputCompression : string outputFormat : string outputS3URI : string queryString : string workGroup : string dataDistributionType : string inputMode : string localPath : string redshiftDatasetDefinition : clusterID : string clusterRoleARN : string database : string dbUser : string kmsKeyID : string outputCompression : string outputFormat : string outputS3URI : string queryString : string inputName : string s3Input : localPath : string s3CompressionType : string s3DataDistributionType : string s3DataType : string s3InputMode : string s3URI : string processingJobName : string processingOutputConfig : kmsKeyID : string outputs : - appManaged : boolean featureStoreOutput : featureGroupName : string outputName : string s3Output : localPath : string s3URI : string s3UploadMode : string processingResources : clusterConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string stoppingCondition : maxRuntimeInSeconds : integer tags : - key : string value : string Field Description appSpecification Required object Configures the processing job to run a specified Docker container image. appSpecification.containerArguments Optional array appSpecification.containerArguments.[] Required string appSpecification.containerEntrypoint.[] Required string environment Optional object The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string networkConfig Optional object Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs. networkConfig.enableInterContainerTrafficEncryption Optional boolean networkConfig.enableNetworkIsolation Optional boolean networkConfig.vpcConfig Optional object Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). networkConfig.vpcConfig.securityGroupIDs Optional array networkConfig.vpcConfig.securityGroupIDs.[] Required string networkConfig.vpcConfig.subnets.[] Required string processingInputs.[] Required object The inputs for a processing job. The processing input must specify exactly one of either S3Input or DatasetDefinition types. processingInputs.[].datasetDefinition Optional object Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either AthenaDatasetDefinition or RedshiftDatasetDefinition types. processingInputs.[].datasetDefinition.athenaDatasetDefinition Optional object Configuration for Athena Dataset Definition input. processingInputs.[].datasetDefinition.athenaDatasetDefinition.catalog Optional string The name of the data catalog used in Athena query execution. processingInputs.[].datasetDefinition.athenaDatasetDefinition.database Optional string The name of the database used in the Athena query execution. processingInputs.[].datasetDefinition.athenaDatasetDefinition.kmsKeyID Optional string processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputCompression Optional string The compression used for Athena query results. processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputFormat Optional string The data storage format for Athena query results. processingInputs.[].datasetDefinition.athenaDatasetDefinition.outputS3URI Optional string processingInputs.[].datasetDefinition.athenaDatasetDefinition.queryString Optional string The SQL query statements, to be executed. processingInputs.[].datasetDefinition.athenaDatasetDefinition.workGroup Optional string The name of the workgroup in which the Athena query is being started. processingInputs.[].datasetDefinition.dataDistributionType Optional string processingInputs.[].datasetDefinition.inputMode Optional string processingInputs.[].datasetDefinition.localPath Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition Optional object Configuration for Redshift Dataset Definition input. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.clusterID Optional string The Redshift cluster Identifier. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.clusterRoleARN Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.database Optional string The name of the Redshift database used in Redshift query execution. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.dbUser Optional string The database user name used in Redshift query execution. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.kmsKeyID Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputCompression Optional string The compression used for Redshift query results. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputFormat Optional string The data storage format for Redshift query results. processingInputs.[].datasetDefinition.redshiftDatasetDefinition.outputS3URI Optional string processingInputs.[].datasetDefinition.redshiftDatasetDefinition.queryString Optional string The SQL query statements to be executed. processingInputs.[].inputName Optional string processingInputs.[].s3Input Optional object Configuration for downloading input data from Amazon S3 into the processing container. processingInputs.[].s3Input.localPath Optional string processingInputs.[].s3Input.s3CompressionType Optional string processingInputs.[].s3Input.s3DataDistributionType Optional string processingInputs.[].s3Input.s3DataType Optional string processingInputs.[].s3Input.s3InputMode Optional string processingInputs.[].s3Input.s3URI Optional string processingJobName Required string The name of the processing job. The name must be unique within an AWS Region in the AWS account. processingOutputConfig Optional object Output configuration for the processing job. processingOutputConfig.kmsKeyID Optional string processingOutputConfig.outputs Optional array processingOutputConfig.outputs.[] Required object Describes the results of a processing job. The processing output must specify exactly one of either S3Output or FeatureStoreOutput types. processingOutputConfig.outputs.[].featureStoreOutput Optional object Configuration for processing job outputs in Amazon SageMaker Feature Store. processingOutputConfig.outputs.[].featureStoreOutput.featureGroupName Optional string processingOutputConfig.outputs.[].outputName Optional string processingOutputConfig.outputs.[].s3Output Optional object Configuration for uploading output data to Amazon S3 from the processing container. processingOutputConfig.outputs.[].s3Output.localPath Optional string processingOutputConfig.outputs.[].s3Output.s3URI Optional string processingOutputConfig.outputs.[].s3Output.s3UploadMode Optional string processingResources Required object Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance. processingResources.clusterConfig Optional object Configuration for the cluster used to run a processing job. processingResources.clusterConfig.instanceCount Optional integer processingResources.clusterConfig.instanceType Optional string processingResources.clusterConfig.volumeKMSKeyID Optional string processingResources.clusterConfig.volumeSizeInGB Optional integer roleARN Required string The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. stoppingCondition Optional object The time limit for how long the processing job is allowed to run. stoppingCondition.maxRuntimeInSeconds Optional integer tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/ProcessingJob/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string processingJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string A string, up to one KB in size, that contains the reason a processing job failed, if it failed. processingJobStatus Optional string Provides the status of a processing job.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/TrainingJob/","text":"TrainingJob \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#TrainingJob Metadata \u00b6 Property Value Scope Namespaced Kind TrainingJob ListKind TrainingJobList Plural trainingjobs Singular trainingjob Contains information about a training job. Spec \u00b6 algorithmSpecification : algorithmName : string enableSageMakerMetricsTimeSeries : boolean metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string debugHookConfig : collectionConfigurations : - collectionName : string collectionParameters : {} hookParameters : {} localPath : string s3OutputPath : string debugRuleConfigurations : - instanceType : string localPath : string ruleConfigurationName : string ruleEvaluatorImage : string ruleParameters : {} s3OutputPath : string volumeSizeInGB : integer enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string hyperParameters : {} inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string profilerConfig : profilingIntervalInMilliseconds : integer profilingParameters : {} s3OutputPath : string profilerRuleConfigurations : - instanceType : string localPath : string ruleConfigurationName : string ruleEvaluatorImage : string ruleParameters : {} s3OutputPath : string volumeSizeInGB : integer resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tags : - key : string value : string tensorBoardOutputConfig : localPath : string s3OutputPath : string trainingJobName : string vpcConfig : securityGroupIDs : - string subnets : - string Field Description algorithmSpecification Required object The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html). For information about providing your own algorithms, see Using Your Own Algorithms with Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html). algorithmSpecification.algorithmName Optional string algorithmSpecification.enableSageMakerMetricsTimeSeries Optional boolean algorithmSpecification.metricDefinitions Optional array algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. algorithmSpecification.metricDefinitions.[].regex Optional string algorithmSpecification.trainingImage Optional string algorithmSpecification.trainingInputMode Optional string checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. checkpointConfig.localPath Optional string checkpointConfig.s3URI Optional string debugHookConfig Optional object Configuration information for the Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the DebugHookConfig parameter, see Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html). debugHookConfig.collectionConfigurations Optional array debugHookConfig.collectionConfigurations.[] Required object Configuration information for the Debugger output tensor collections. debugHookConfig.collectionConfigurations.[].collectionParameters Optional object debugHookConfig.hookParameters Optional object debugHookConfig.localPath Optional string debugHookConfig.s3OutputPath Optional string debugRuleConfigurations Optional array Configuration information for Debugger rules for debugging output tensors. debugRuleConfigurations.[] Required object Configuration information for SageMaker Debugger rules for debugging. To learn more about how to configure the DebugRuleConfiguration parameter, see Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html). debugRuleConfigurations.[].localPath Optional string debugRuleConfigurations.[].ruleConfigurationName Optional string debugRuleConfigurations.[].ruleEvaluatorImage Optional string debugRuleConfigurations.[].ruleParameters Optional object debugRuleConfigurations.[].s3OutputPath Optional string debugRuleConfigurations.[].volumeSizeInGB Optional integer enableInterContainerTrafficEncryption Optional boolean To encrypt all communications between ML compute instances in distributed training, choose True. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training. For more information, see Protect Communications Between ML Compute Instances in a Distributed Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html). enableManagedSpotTraining Optional boolean To train models using managed spot training, choose True. Managed spot training provides a fully managed and scalable infrastructure for training machine learning models. this option is useful when training jobs can be interrupted and when there is flexibility when the training job is run. The complete and intermediate results of jobs are stored in an Amazon S3 bucket, and can be used as a starting point to train models incrementally. Amazon SageMaker provides metrics and logs in CloudWatch. They can be used to see when managed spot training jobs are running, interrupted, resumed, or completed. enableNetworkIsolation Optional boolean Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access. environment Optional object The environment variables to set in the Docker container. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string hyperParameters Optional object Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html). You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the Length Constraint. inputDataConfig Optional array An array of Channel objects. Each channel is a named input source. InputDataConfig describes the input data and its location. Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, training_data and validation_data. The configuration for each channel provides the S3, EFS, or FSx location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. For example, if you specify an EFS location, input data files will be made available as input streams. They do not need to be downloaded. inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. inputDataConfig.[].compressionType Optional string inputDataConfig.[].contentType Optional string inputDataConfig.[].dataSource Optional object Describes the location of the channel data. inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string inputDataConfig.[].inputMode Optional string inputDataConfig.[].recordWrapperType Optional string inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. inputDataConfig.[].shuffleConfig.seed Optional integer outputDataConfig Required object Specifies the path to the S3 location where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. outputDataConfig.kmsKeyID Optional string outputDataConfig.s3OutputPath Optional string profilerConfig Optional object Configuration information for Debugger system monitoring, framework profiling, and storage paths. profilerConfig.profilingIntervalInMilliseconds Optional integer profilerConfig.profilingParameters Optional object profilerConfig.s3OutputPath Optional string profilerRuleConfigurations Optional array Configuration information for Debugger rules for profiling system and framework metrics. profilerRuleConfigurations.[] Required object Configuration information for profiling rules. profilerRuleConfigurations.[].localPath Optional string profilerRuleConfigurations.[].ruleConfigurationName Optional string profilerRuleConfigurations.[].ruleEvaluatorImage Optional string profilerRuleConfigurations.[].ruleParameters Optional object profilerRuleConfigurations.[].s3OutputPath Optional string profilerRuleConfigurations.[].volumeSizeInGB Optional integer resourceConfig Required object The resources, including the ML compute instances and ML storage volumes, to use for model training. ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose File as the TrainingInputMode in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1. resourceConfig.instanceCount Optional integer resourceConfig.instanceType Optional string resourceConfig.volumeKMSKeyID Optional string resourceConfig.volumeSizeInGB Optional integer roleARN Required string The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. stoppingCondition Required object Specifies a limit to how long a model training job can run. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. stoppingCondition.maxRuntimeInSeconds Optional integer stoppingCondition.maxWaitTimeInSeconds Optional integer tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string tensorBoardOutputConfig Optional object Configuration of storage locations for the Debugger TensorBoard output data. tensorBoardOutputConfig.localPath Optional string tensorBoardOutputConfig.s3OutputPath Optional string trainingJobName Required string The name of the training job. The name must be unique within an AWS Region in an AWS account. vpcConfig Optional object A VpcConfig object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). vpcConfig.securityGroupIDs Optional array vpcConfig.securityGroupIDs.[] Required string vpcConfig.subnets.[] Required string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string debugRuleEvaluationStatuses : - lastModifiedTime : string ruleConfigurationName : string ruleEvaluationJobARN : string ruleEvaluationStatus : string statusDetails : string failureReason : string modelArtifacts : s3ModelArtifacts : string profilerRuleEvaluationStatuses : - lastModifiedTime : string ruleConfigurationName : string ruleEvaluationJobARN : string ruleEvaluationStatus : string statusDetails : string secondaryStatus : string trainingJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition debugRuleEvaluationStatuses Optional array Evaluation status of Debugger rules for debugging on a training job. debugRuleEvaluationStatuses.[] Required object Information about the status of the rule evaluation. debugRuleEvaluationStatuses.[].ruleConfigurationName Optional string debugRuleEvaluationStatuses.[].ruleEvaluationJobARN Optional string debugRuleEvaluationStatuses.[].ruleEvaluationStatus Optional string debugRuleEvaluationStatuses.[].statusDetails Optional string failureReason Optional string If the training job failed, the reason it failed. modelArtifacts Optional object Information about the Amazon S3 location that is configured for storing model artifacts. modelArtifacts.s3ModelArtifacts Optional string profilerRuleEvaluationStatuses Optional array Evaluation status of Debugger rules for profiling on a training job. profilerRuleEvaluationStatuses.[] Required object Information about the status of the rule evaluation. profilerRuleEvaluationStatuses.[].ruleConfigurationName Optional string profilerRuleEvaluationStatuses.[].ruleEvaluationJobARN Optional string profilerRuleEvaluationStatuses.[].ruleEvaluationStatus Optional string profilerRuleEvaluationStatuses.[].statusDetails Optional string secondaryStatus Optional string Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see StatusMessage under SecondaryStatusTransition. Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them: InProgress * Starting - Starting the training job. * Downloading - An optional stage for algorithms that support File training input mode. It indicates that data is being downloaded to the ML storage volumes. * Training - Training is in progress. * Interrupted - The job stopped because the managed spot training instances were interrupted. * Uploading - Training is complete and the model artifacts are being uploaded to the S3 location. Completed * Completed - The training job has completed. Failed * Failed - The training job has failed. The reason for the failure is returned in the FailureReason field of DescribeTrainingJobResponse. Stopped * MaxRuntimeExceeded - The job stopped because it exceeded the maximum allowed runtime. * MaxWaitTimeExceeded - The job stopped because it exceeded the maximum allowed wait time. * Stopped - The training job has stopped. Stopping * Stopping - Stopping the training job. Valid values for SecondaryStatus are subject to change. We no longer support the following secondary statuses: * LaunchingMLInstances * PreparingTrainingStack * DownloadingTrainingImage trainingJobStatus Optional string The status of the training job. Amazon SageMaker provides the following training job statuses: * InProgress - The training is in progress. * Completed - The training job has completed. * Failed - The training job has failed. To see the reason for the failure, see the FailureReason field in the response to a DescribeTrainingJobResponse call. * Stopping - The training job is stopping. * Stopped - The training job has stopped. For more detailed information, see SecondaryStatus.","title":"TrainingJob"},{"location":"reference/SageMaker/v1alpha1/TrainingJob/#trainingjob","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#TrainingJob","title":"TrainingJob"},{"location":"reference/SageMaker/v1alpha1/TrainingJob/#metadata","text":"Property Value Scope Namespaced Kind TrainingJob ListKind TrainingJobList Plural trainingjobs Singular trainingjob Contains information about a training job.","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/TrainingJob/#spec","text":"algorithmSpecification : algorithmName : string enableSageMakerMetricsTimeSeries : boolean metricDefinitions : - name : string regex : string trainingImage : string trainingInputMode : string checkpointConfig : localPath : string s3URI : string debugHookConfig : collectionConfigurations : - collectionName : string collectionParameters : {} hookParameters : {} localPath : string s3OutputPath : string debugRuleConfigurations : - instanceType : string localPath : string ruleConfigurationName : string ruleEvaluatorImage : string ruleParameters : {} s3OutputPath : string volumeSizeInGB : integer enableInterContainerTrafficEncryption : boolean enableManagedSpotTraining : boolean enableNetworkIsolation : boolean environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string hyperParameters : {} inputDataConfig : - channelName : string compressionType : string contentType : string dataSource : fileSystemDataSource : directoryPath : string fileSystemAccessMode : string fileSystemID : string fileSystemType : string s3DataSource : attributeNames : - string s3DataDistributionType : string s3DataType : string s3URI : string inputMode : string recordWrapperType : string shuffleConfig : seed : integer outputDataConfig : kmsKeyID : string s3OutputPath : string profilerConfig : profilingIntervalInMilliseconds : integer profilingParameters : {} s3OutputPath : string profilerRuleConfigurations : - instanceType : string localPath : string ruleConfigurationName : string ruleEvaluatorImage : string ruleParameters : {} s3OutputPath : string volumeSizeInGB : integer resourceConfig : instanceCount : integer instanceType : string volumeKMSKeyID : string volumeSizeInGB : integer roleARN : string stoppingCondition : maxRuntimeInSeconds : integer maxWaitTimeInSeconds : integer tags : - key : string value : string tensorBoardOutputConfig : localPath : string s3OutputPath : string trainingJobName : string vpcConfig : securityGroupIDs : - string subnets : - string Field Description algorithmSpecification Required object The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html). For information about providing your own algorithms, see Using Your Own Algorithms with Amazon SageMaker (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html). algorithmSpecification.algorithmName Optional string algorithmSpecification.enableSageMakerMetricsTimeSeries Optional boolean algorithmSpecification.metricDefinitions Optional array algorithmSpecification.metricDefinitions.[] Required object Specifies a metric that the training algorithm writes to stderr or stdout . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job. algorithmSpecification.metricDefinitions.[].regex Optional string algorithmSpecification.trainingImage Optional string algorithmSpecification.trainingInputMode Optional string checkpointConfig Optional object Contains information about the output location for managed spot training checkpoint data. checkpointConfig.localPath Optional string checkpointConfig.s3URI Optional string debugHookConfig Optional object Configuration information for the Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the DebugHookConfig parameter, see Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html). debugHookConfig.collectionConfigurations Optional array debugHookConfig.collectionConfigurations.[] Required object Configuration information for the Debugger output tensor collections. debugHookConfig.collectionConfigurations.[].collectionParameters Optional object debugHookConfig.hookParameters Optional object debugHookConfig.localPath Optional string debugHookConfig.s3OutputPath Optional string debugRuleConfigurations Optional array Configuration information for Debugger rules for debugging output tensors. debugRuleConfigurations.[] Required object Configuration information for SageMaker Debugger rules for debugging. To learn more about how to configure the DebugRuleConfiguration parameter, see Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html). debugRuleConfigurations.[].localPath Optional string debugRuleConfigurations.[].ruleConfigurationName Optional string debugRuleConfigurations.[].ruleEvaluatorImage Optional string debugRuleConfigurations.[].ruleParameters Optional object debugRuleConfigurations.[].s3OutputPath Optional string debugRuleConfigurations.[].volumeSizeInGB Optional integer enableInterContainerTrafficEncryption Optional boolean To encrypt all communications between ML compute instances in distributed training, choose True. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training. For more information, see Protect Communications Between ML Compute Instances in a Distributed Training Job (https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html). enableManagedSpotTraining Optional boolean To train models using managed spot training, choose True. Managed spot training provides a fully managed and scalable infrastructure for training machine learning models. this option is useful when training jobs can be interrupted and when there is flexibility when the training job is run. The complete and intermediate results of jobs are stored in an Amazon S3 bucket, and can be used as a starting point to train models incrementally. Amazon SageMaker provides metrics and logs in CloudWatch. They can be used to see when managed spot training jobs are running, interrupted, resumed, or completed. enableNetworkIsolation Optional boolean Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access. environment Optional object The environment variables to set in the Docker container. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string hyperParameters Optional object Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see Algorithms (https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html). You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the Length Constraint. inputDataConfig Optional array An array of Channel objects. Each channel is a named input source. InputDataConfig describes the input data and its location. Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, training_data and validation_data. The configuration for each channel provides the S3, EFS, or FSx location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. For example, if you specify an EFS location, input data files will be made available as input streams. They do not need to be downloaded. inputDataConfig.[] Required object A channel is a named input source that training algorithms can consume. inputDataConfig.[].compressionType Optional string inputDataConfig.[].contentType Optional string inputDataConfig.[].dataSource Optional object Describes the location of the channel data. inputDataConfig.[].dataSource.fileSystemDataSource Optional object Specifies a file system data source for a channel. inputDataConfig.[].dataSource.fileSystemDataSource.directoryPath Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemAccessMode Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemID Optional string inputDataConfig.[].dataSource.fileSystemDataSource.fileSystemType Optional string inputDataConfig.[].dataSource.s3DataSource Optional object Describes the S3 data source. inputDataConfig.[].dataSource.s3DataSource.attributeNames Optional array inputDataConfig.[].dataSource.s3DataSource.attributeNames.[] Required string inputDataConfig.[].dataSource.s3DataSource.s3DataType Optional string inputDataConfig.[].dataSource.s3DataSource.s3URI Optional string inputDataConfig.[].inputMode Optional string inputDataConfig.[].recordWrapperType Optional string inputDataConfig.[].shuffleConfig Optional object A configuration for a shuffle option for input data in a channel. If you use S3Prefix for S3DataType, the results of the S3 key prefix matches are shuffled. If you use ManifestFile, the order of the S3 object references in the ManifestFile is shuffled. If you use AugmentedManifestFile, the order of the JSON lines in the AugmentedManifestFile is shuffled. The shuffling order is determined using the Seed value. For Pipe input mode, when ShuffleConfig is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with S3DataDistributionType of ShardedByS3Key, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch. inputDataConfig.[].shuffleConfig.seed Optional integer outputDataConfig Required object Specifies the path to the S3 location where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. outputDataConfig.kmsKeyID Optional string outputDataConfig.s3OutputPath Optional string profilerConfig Optional object Configuration information for Debugger system monitoring, framework profiling, and storage paths. profilerConfig.profilingIntervalInMilliseconds Optional integer profilerConfig.profilingParameters Optional object profilerConfig.s3OutputPath Optional string profilerRuleConfigurations Optional array Configuration information for Debugger rules for profiling system and framework metrics. profilerRuleConfigurations.[] Required object Configuration information for profiling rules. profilerRuleConfigurations.[].localPath Optional string profilerRuleConfigurations.[].ruleConfigurationName Optional string profilerRuleConfigurations.[].ruleEvaluatorImage Optional string profilerRuleConfigurations.[].ruleParameters Optional object profilerRuleConfigurations.[].s3OutputPath Optional string profilerRuleConfigurations.[].volumeSizeInGB Optional integer resourceConfig Required object The resources, including the ML compute instances and ML storage volumes, to use for model training. ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose File as the TrainingInputMode in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1. resourceConfig.instanceCount Optional integer resourceConfig.instanceType Optional string resourceConfig.volumeKMSKeyID Optional string resourceConfig.volumeSizeInGB Optional integer roleARN Required string The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see Amazon SageMaker Roles (https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html). To be able to pass this role to Amazon SageMaker, the caller of this API must have the iam:PassRole permission. stoppingCondition Required object Specifies a limit to how long a model training job can run. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. stoppingCondition.maxRuntimeInSeconds Optional integer stoppingCondition.maxWaitTimeInSeconds Optional integer tags Optional array An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see Tagging AWS Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). tags.[] Required object Describes a tag. tags.[].value Optional string tensorBoardOutputConfig Optional object Configuration of storage locations for the Debugger TensorBoard output data. tensorBoardOutputConfig.localPath Optional string tensorBoardOutputConfig.s3OutputPath Optional string trainingJobName Required string The name of the training job. The name must be unique within an AWS Region in an AWS account. vpcConfig Optional object A VpcConfig object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html). vpcConfig.securityGroupIDs Optional array vpcConfig.securityGroupIDs.[] Required string vpcConfig.subnets.[] Required string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/TrainingJob/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string debugRuleEvaluationStatuses : - lastModifiedTime : string ruleConfigurationName : string ruleEvaluationJobARN : string ruleEvaluationStatus : string statusDetails : string failureReason : string modelArtifacts : s3ModelArtifacts : string profilerRuleEvaluationStatuses : - lastModifiedTime : string ruleConfigurationName : string ruleEvaluationJobARN : string ruleEvaluationStatus : string statusDetails : string secondaryStatus : string trainingJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition debugRuleEvaluationStatuses Optional array Evaluation status of Debugger rules for debugging on a training job. debugRuleEvaluationStatuses.[] Required object Information about the status of the rule evaluation. debugRuleEvaluationStatuses.[].ruleConfigurationName Optional string debugRuleEvaluationStatuses.[].ruleEvaluationJobARN Optional string debugRuleEvaluationStatuses.[].ruleEvaluationStatus Optional string debugRuleEvaluationStatuses.[].statusDetails Optional string failureReason Optional string If the training job failed, the reason it failed. modelArtifacts Optional object Information about the Amazon S3 location that is configured for storing model artifacts. modelArtifacts.s3ModelArtifacts Optional string profilerRuleEvaluationStatuses Optional array Evaluation status of Debugger rules for profiling on a training job. profilerRuleEvaluationStatuses.[] Required object Information about the status of the rule evaluation. profilerRuleEvaluationStatuses.[].ruleConfigurationName Optional string profilerRuleEvaluationStatuses.[].ruleEvaluationJobARN Optional string profilerRuleEvaluationStatuses.[].ruleEvaluationStatus Optional string profilerRuleEvaluationStatuses.[].statusDetails Optional string secondaryStatus Optional string Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see StatusMessage under SecondaryStatusTransition. Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them: InProgress * Starting - Starting the training job. * Downloading - An optional stage for algorithms that support File training input mode. It indicates that data is being downloaded to the ML storage volumes. * Training - Training is in progress. * Interrupted - The job stopped because the managed spot training instances were interrupted. * Uploading - Training is complete and the model artifacts are being uploaded to the S3 location. Completed * Completed - The training job has completed. Failed * Failed - The training job has failed. The reason for the failure is returned in the FailureReason field of DescribeTrainingJobResponse. Stopped * MaxRuntimeExceeded - The job stopped because it exceeded the maximum allowed runtime. * MaxWaitTimeExceeded - The job stopped because it exceeded the maximum allowed wait time. * Stopped - The training job has stopped. Stopping * Stopping - Stopping the training job. Valid values for SecondaryStatus are subject to change. We no longer support the following secondary statuses: * LaunchingMLInstances * PreparingTrainingStack * DownloadingTrainingImage trainingJobStatus Optional string The status of the training job. Amazon SageMaker provides the following training job statuses: * InProgress - The training is in progress. * Completed - The training job has completed. * Failed - The training job has failed. To see the reason for the failure, see the FailureReason field in the response to a DescribeTrainingJobResponse call. * Stopping - The training job is stopping. * Stopped - The training job has stopped. For more detailed information, see SecondaryStatus.","title":"Status"},{"location":"reference/SageMaker/v1alpha1/TransformJob/","text":"TransformJob \u00b6 sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#TransformJob Metadata \u00b6 Property Value Scope Namespaced Kind TransformJob ListKind TransformJobList Plural transformjobs Singular transformjob A batch transform job. For information about SageMaker batch transform, see Use Batch Transform (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html). Spec \u00b6 batchStrategy : string dataProcessing : inputFilter : string joinSource : string outputFilter : string environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string maxConcurrentTransforms : integer maxPayloadInMB : integer modelClientConfig : invocationsMaxRetries : integer invocationsTimeoutInSeconds : integer modelName : string tags : - key : string value : string transformInput : compressionType : string contentType : string dataSource : s3DataSource : s3DataType : string s3URI : string splitType : string transformJobName : string transformOutput : accept : string assembleWith : string kmsKeyID : string s3OutputPath : string transformResources : instanceCount : integer instanceType : string volumeKMSKeyID : string Field Description batchStrategy Optional string Specifies the number of records to include in a mini-batch for an HTTP inference request. A record is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. To enable the batch strategy, you must set the SplitType property to Line, RecordIO, or TFRecord. To use only one record when making an HTTP invocation request to a container, set BatchStrategy to SingleRecord and SplitType to Line. To fit as many records in a mini-batch as can fit within the MaxPayloadInMB limit, set BatchStrategy to MultiRecord and SplitType to Line. dataProcessing Optional object The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see Associate Prediction Results with their Corresponding Input Records (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html). dataProcessing.inputFilter Optional string dataProcessing.joinSource Optional string dataProcessing.outputFilter Optional string environment Optional object The environment variables to set in the Docker container. We support up to 16 key and values entries in the map. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string maxConcurrentTransforms Optional integer The maximum number of parallel requests that can be sent to each instance in a transform job. If MaxConcurrentTransforms is set to 0 or left unset, Amazon SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm. If the execution-parameters endpoint is not enabled, the default value is 1. For more information on execution-parameters, see How Containers Serve Requests (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-batch-code.html#your-algorithms-batch-code-how-containe-serves-requests). For built-in algorithms, you don't need to set a value for MaxConcurrentTransforms. maxPayloadInMB Optional integer The maximum allowed size of the payload, in MB. A payload is the data portion of a record (without metadata). The value in MaxPayloadInMB must be greater than, or equal to, the size of a single record. To estimate the size of a record in MB, divide the size of your dataset by the number of records. To ensure that the records fit within the maximum payload size, we recommend using a slightly larger value. The default value is 6 MB. For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to 0. This feature works only in supported algorithms. Currently, Amazon SageMaker built-in algorithms do not support HTTP chunked encoding. modelClientConfig Optional object Configures the timeout and maximum number of retries for processing a transform job invocation. modelClientConfig.invocationsMaxRetries Optional integer modelClientConfig.invocationsTimeoutInSeconds Optional integer modelName Required string The name of the model that you want to use for the transform job. ModelName must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account. tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string transformInput Required object Describes the input source and the way the transform job consumes it. transformInput.compressionType Optional string transformInput.contentType Optional string transformInput.dataSource Optional object Describes the location of the channel data. transformInput.dataSource.s3DataSource Optional object Describes the S3 data source. transformInput.dataSource.s3DataSource.s3DataType Optional string transformInput.dataSource.s3DataSource.s3URI Optional string transformInput.splitType Optional string transformJobName Required string The name of the transform job. The name must be unique within an AWS Region in an AWS account. transformOutput Required object Describes the results of the transform job. transformOutput.accept Optional string transformOutput.assembleWith Optional string transformOutput.kmsKeyID Optional string transformOutput.s3OutputPath Optional string transformResources Required object Describes the resources, including ML instance types and ML instance count, to use for the transform job. transformResources.instanceCount Optional integer transformResources.instanceType Optional string transformResources.volumeKMSKeyID Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string transformJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If the transform job failed, FailureReason describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see Log Amazon SageMaker Events with Amazon CloudWatch (https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html). transformJobStatus Optional string The status of the transform job. If the transform job failed, the reason is returned in the FailureReason field.","title":"TransformJob"},{"location":"reference/SageMaker/v1alpha1/TransformJob/#transformjob","text":"sagemaker.services.k8s.aws/v1alpha1 Type Link GoDoc sagemaker-controller/apis/v1alpha1#TransformJob","title":"TransformJob"},{"location":"reference/SageMaker/v1alpha1/TransformJob/#metadata","text":"Property Value Scope Namespaced Kind TransformJob ListKind TransformJobList Plural transformjobs Singular transformjob A batch transform job. For information about SageMaker batch transform, see Use Batch Transform (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html).","title":"Metadata"},{"location":"reference/SageMaker/v1alpha1/TransformJob/#spec","text":"batchStrategy : string dataProcessing : inputFilter : string joinSource : string outputFilter : string environment : {} experimentConfig : experimentName : string trialComponentDisplayName : string trialName : string maxConcurrentTransforms : integer maxPayloadInMB : integer modelClientConfig : invocationsMaxRetries : integer invocationsTimeoutInSeconds : integer modelName : string tags : - key : string value : string transformInput : compressionType : string contentType : string dataSource : s3DataSource : s3DataType : string s3URI : string splitType : string transformJobName : string transformOutput : accept : string assembleWith : string kmsKeyID : string s3OutputPath : string transformResources : instanceCount : integer instanceType : string volumeKMSKeyID : string Field Description batchStrategy Optional string Specifies the number of records to include in a mini-batch for an HTTP inference request. A record is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. To enable the batch strategy, you must set the SplitType property to Line, RecordIO, or TFRecord. To use only one record when making an HTTP invocation request to a container, set BatchStrategy to SingleRecord and SplitType to Line. To fit as many records in a mini-batch as can fit within the MaxPayloadInMB limit, set BatchStrategy to MultiRecord and SplitType to Line. dataProcessing Optional object The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see Associate Prediction Results with their Corresponding Input Records (https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html). dataProcessing.inputFilter Optional string dataProcessing.joinSource Optional string dataProcessing.outputFilter Optional string environment Optional object The environment variables to set in the Docker container. We support up to 16 key and values entries in the map. experimentConfig Optional object Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: * CreateProcessingJob * CreateTrainingJob * CreateTransformJob experimentConfig.experimentName Optional string experimentConfig.trialComponentDisplayName Optional string experimentConfig.trialName Optional string maxConcurrentTransforms Optional integer The maximum number of parallel requests that can be sent to each instance in a transform job. If MaxConcurrentTransforms is set to 0 or left unset, Amazon SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm. If the execution-parameters endpoint is not enabled, the default value is 1. For more information on execution-parameters, see How Containers Serve Requests (https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-batch-code.html#your-algorithms-batch-code-how-containe-serves-requests). For built-in algorithms, you don't need to set a value for MaxConcurrentTransforms. maxPayloadInMB Optional integer The maximum allowed size of the payload, in MB. A payload is the data portion of a record (without metadata). The value in MaxPayloadInMB must be greater than, or equal to, the size of a single record. To estimate the size of a record in MB, divide the size of your dataset by the number of records. To ensure that the records fit within the maximum payload size, we recommend using a slightly larger value. The default value is 6 MB. For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to 0. This feature works only in supported algorithms. Currently, Amazon SageMaker built-in algorithms do not support HTTP chunked encoding. modelClientConfig Optional object Configures the timeout and maximum number of retries for processing a transform job invocation. modelClientConfig.invocationsMaxRetries Optional integer modelClientConfig.invocationsTimeoutInSeconds Optional integer modelName Required string The name of the model that you want to use for the transform job. ModelName must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account. tags Optional array (Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what) in the AWS Billing and Cost Management User Guide. tags.[] Required object Describes a tag. tags.[].value Optional string transformInput Required object Describes the input source and the way the transform job consumes it. transformInput.compressionType Optional string transformInput.contentType Optional string transformInput.dataSource Optional object Describes the location of the channel data. transformInput.dataSource.s3DataSource Optional object Describes the S3 data source. transformInput.dataSource.s3DataSource.s3DataType Optional string transformInput.dataSource.s3DataSource.s3URI Optional string transformInput.splitType Optional string transformJobName Required string The name of the transform job. The name must be unique within an AWS Region in an AWS account. transformOutput Required object Describes the results of the transform job. transformOutput.accept Optional string transformOutput.assembleWith Optional string transformOutput.kmsKeyID Optional string transformOutput.s3OutputPath Optional string transformResources Required object Describes the resources, including ML instance types and ML instance count, to use for the transform job. transformResources.instanceCount Optional integer transformResources.instanceType Optional string transformResources.volumeKMSKeyID Optional string","title":"Spec"},{"location":"reference/SageMaker/v1alpha1/TransformJob/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string failureReason : string transformJobStatus : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition failureReason Optional string If the transform job failed, FailureReason describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see Log Amazon SageMaker Events with Amazon CloudWatch (https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html). transformJobStatus Optional string The status of the transform job. If the transform job failed, the reason is returned in the FailureReason field.","title":"Status"},{"location":"reference/Step-Functions/v1alpha1/Activity/","text":"Activity \u00b6 sfn.services.k8s.aws/v1alpha1 Type Link GoDoc sfn-controller/apis/v1alpha1#Activity Metadata \u00b6 Property Value Scope Namespaced Kind Activity ListKind ActivityList Plural activities Singular activity Spec \u00b6 name : string tags : - key : string value : string Field Description name Required string tags Optional array tags.[] Required object tags.[].value Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string","title":"Activity"},{"location":"reference/Step-Functions/v1alpha1/Activity/#activity","text":"sfn.services.k8s.aws/v1alpha1 Type Link GoDoc sfn-controller/apis/v1alpha1#Activity","title":"Activity"},{"location":"reference/Step-Functions/v1alpha1/Activity/#metadata","text":"Property Value Scope Namespaced Kind Activity ListKind ActivityList Plural activities Singular activity","title":"Metadata"},{"location":"reference/Step-Functions/v1alpha1/Activity/#spec","text":"name : string tags : - key : string value : string Field Description name Required string tags Optional array tags.[] Required object tags.[].value Optional string","title":"Spec"},{"location":"reference/Step-Functions/v1alpha1/Activity/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string","title":"Status"},{"location":"reference/Step-Functions/v1alpha1/StateMachine/","text":"StateMachine \u00b6 sfn.services.k8s.aws/v1alpha1 Type Link GoDoc sfn-controller/apis/v1alpha1#StateMachine Metadata \u00b6 Property Value Scope Namespaced Kind StateMachine ListKind StateMachineList Plural statemachines Singular statemachine Spec \u00b6 definition : string loggingConfiguration : destinations : cloudWatchLogsLogGroup : logGroupARN : string includeExecutionData : boolean level : string name : string roleARN : string tags : - key : string value : string tracingConfiguration : enabled : boolean type_ : string Field Description definition Required string loggingConfiguration Optional object loggingConfiguration.destinations Optional array loggingConfiguration.destinations.[] Required object loggingConfiguration.destinations.[].cloudWatchLogsLogGroup.logGroupARN Optional string loggingConfiguration.includeExecutionData Optional boolean loggingConfiguration.level Optional string name Required string roleARN Required string tags Optional array tags.[] Required object tags.[].value Optional string tracingConfiguration Optional object tracingConfiguration.enabled Optional boolean type_ Optional string Status \u00b6 ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string","title":"StateMachine"},{"location":"reference/Step-Functions/v1alpha1/StateMachine/#statemachine","text":"sfn.services.k8s.aws/v1alpha1 Type Link GoDoc sfn-controller/apis/v1alpha1#StateMachine","title":"StateMachine"},{"location":"reference/Step-Functions/v1alpha1/StateMachine/#metadata","text":"Property Value Scope Namespaced Kind StateMachine ListKind StateMachineList Plural statemachines Singular statemachine","title":"Metadata"},{"location":"reference/Step-Functions/v1alpha1/StateMachine/#spec","text":"definition : string loggingConfiguration : destinations : cloudWatchLogsLogGroup : logGroupARN : string includeExecutionData : boolean level : string name : string roleARN : string tags : - key : string value : string tracingConfiguration : enabled : boolean type_ : string Field Description definition Required string loggingConfiguration Optional object loggingConfiguration.destinations Optional array loggingConfiguration.destinations.[] Required object loggingConfiguration.destinations.[].cloudWatchLogsLogGroup.logGroupARN Optional string loggingConfiguration.includeExecutionData Optional boolean loggingConfiguration.level Optional string name Required string roleARN Required string tags Optional array tags.[] Required object tags.[].value Optional string tracingConfiguration Optional object tracingConfiguration.enabled Optional boolean type_ Optional string","title":"Spec"},{"location":"reference/Step-Functions/v1alpha1/StateMachine/#status","text":"ackResourceMetadata : arn : string ownerAccountID : string conditions : - lastTransitionTime : string message : string reason : string status : string type : string creationDate : string Field Description ackResourceMetadata Required object All CRs managed by ACK have a common Status.ACKResourceMetadata member that is used to contain resource sync state, account ownership, constructed ARN for the resource ackResourceMetadata.arn Optional string ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270 ackResourceMetadata.ownerAccountID Required string OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource. conditions Required array All CRS managed by ACK have a common Status.Conditions member that contains a collection of ackv1alpha1.Condition objects that describe the various terminal states of the CR and its backend AWS service API resource conditions.[] Required object Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states of the CR and its backend AWS service API resource conditions.[].message Optional string A human readable message indicating details about the transition. conditions.[].reason Optional string The reason for the condition's last transition. conditions.[].status Optional string Status of the condition, one of True, False, Unknown. conditions.[].type Optional string Type is the type of the Condition creationDate Optional string","title":"Status"},{"location":"snippets/reference/","text":"Macro Rendering Error \u00b6 UndefinedError : 'dict object' has no attribute 'resource' Traceback ( most recent call last ): File \"/usr/local/lib/python3.9/site-packages/mkdocs_macros/plugin.py\" , line 443 , in render return md_template . render ( ** page_variables ) File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 1304 , in render self . environment . handle_exception () File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 925 , in handle_exception raise rewrite_traceback_stack ( source = source ) File \"<template>\" , line 1 , in top - level template code File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 474 , in getattr return getattr ( obj , attribute ) jinja2 . exceptions . UndefinedError : 'dict object' has no attribute 'resource'","title":"{{ page.meta.resource.name }}"},{"location":"snippets/reference/#macro-rendering-error","text":"UndefinedError : 'dict object' has no attribute 'resource' Traceback ( most recent call last ): File \"/usr/local/lib/python3.9/site-packages/mkdocs_macros/plugin.py\" , line 443 , in render return md_template . render ( ** page_variables ) File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 1304 , in render self . environment . handle_exception () File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 925 , in handle_exception raise rewrite_traceback_stack ( source = source ) File \"<template>\" , line 1 , in top - level template code File \"/usr/local/lib/python3.9/site-packages/jinja2/environment.py\" , line 474 , in getattr return getattr ( obj , attribute ) jinja2 . exceptions . UndefinedError : 'dict object' has no attribute 'resource'","title":"Macro Rendering Error"},{"location":"snippets/reference_overview/","text":"","title":"Reference overview"},{"location":"user-docs/authorization/","text":"Authorization \u00b6 When we talk about authorization and access control for ACK, we need to discuss two different Role-based Access Control (RBAC) systems. Remember that Kubernetes RBAC governs a Kubernetes user's ability to read or write Kubernetes resources . In the case of ACK, this means that Kubernetes RBAC system controls the ability of a Kubernetes user to read or write different custom resources (CRs) that ACK service controllers use. On the other end of the authorization spectrum, you can use AWS Identity and Access Management (IAM) Policies to governs the ability of an AWS IAM Role to read or write certain AWS resources . IAM is more than RBAC AWS IAM is more than just an RBAC system. It handles authentication/identification and can be used to build Attribute-based Access Control (ABAC) systems. In this document, however, we're focusing on using IAM primitives to establish an RBAC system. These two RBAC systems do not overlap . The Kubernetes user that calls the Kubernetes API via calls to kubectl has no association with an IAM Role . Instead, it is the ServiceAccount running the ACK service controller's Pod that is associated with an IAM Role and is thus governed by the IAM RBAC system. RBAC authorization mode The above diagram assumes you are running Kubernetes API server with the RBAC authorization mode enabled. Configure permissions \u00b6 Because ACK bridges the Kubernetes and AWS APIs, before using ACK service controllers, you will need to do some initial configuration around Kubernetes and AWS Identity and Access Management (IAM) permissions. Configuring Kubernetes RBAC \u00b6 As part of installation, certain Kubernetes Role resources will be created that contain permissions to modify the Kubernetes custom resources (CRs) that the ACK service controller is responsible for. Important All Kubernetes CRs managed by an ACK service controller are Namespaced resources; that is, there are no cluster-scoped ACK-managed CRs. By default, the following Kubernetes Role resources are created when installing an ACK service controller: ack-$SERVICE-writer : a Role used for reading and mutating namespace-scoped custom resources that the service controller manages. ack-$SERVICE-reader : a Role used for reading namespaced-scoped custom resources that the service controller manages. When installing a service controller, if the Role already exists (because an ACK controller for a different AWS service has previously been installed), permissions to manage CRDs and CRs associated with the installed controller's AWS service are added to the existing Role . For example, if you installed the ACK service controller for AWS S3, during that installation process, the ack-s3-writerr Role would have been granted read/write permissions to create CRs with a GroupKind of s3.services.k8s.aws/Bucket within a specific Kubernetes Namespace . Likewise the ack-s3-reader Role would have been granted read permissions to view CRs with a GroupKind of s3.services.k8s.aws/Bucket . If you later installed the ACK service controller for AWS SNS, the installation process would have added permissions to the ack-sns-writer Role to read/write CRs of GroupKind sns.services.k8s.aws/Topic and added permissions to the ack-sns-reader Role to read CRs of GroupKind sns.services.k8s.aws/Topic . If you would like to use a differently-named Kubernetes Role than the defaults, you are welcome to do so by modifying the Kubernetes manifests that are used as part of the installation process. Bind a Kubernetes User to a Kubernetes Role \u00b6 Once the Kubernetes Role resources have been created, you will want to assign a specific Kubernetes User to a particular Role . You do this using standard Kubernetes RoleBinding resource. For example, assume you want to have the Kubernetes User named \"alice\" have the ability to create, read, delete and modify S3 Buckets in the \"testing\" Kubernetes Namespace and the ability to just read SNS Topic CRs in the Kubernetes \"production\" Namespace you would execute the following commands: kubectl create rolebinding alice-ack-s3-writer --role ack-s3-writer --namespace testing --user alice kubectl create rolebinding alice-ack-sns--reader --role ack-sns-reader --namespace production --user alice As always, if you are curious whether a particular Kubernetes user can perform some action on a Kubernetes resource, you can use the kubectl auth can-i command, like this example shows: kubectl auth can-i create buckets --namespace default Configuring AWS IAM \u00b6 Since ACK service controllers bridge the Kubernetes and AWS API worlds, in addition to configuring Kubernetes RBAC permissions, you will need to ensure that all AWS Identity and Access Management (IAM) roles and permissions have been properly created. The IAM Role that your ACK service controller runs as will need a different set of IAM Policies depending on which AWS service API the service controller is managing. For instance, the ACK service controller for S3 will need permissions to read and write S3 Buckets. We include with each service controller a recommended IAM Policy that restricts the ACK service controller to taking only the actions that the IAM Role needs to properly manage resources for that specific AWS service API. Within each service controller's source code repository is a config/iam/recommended-policy-arn document that contains the AWS Resource Name (ARN) of the recommended managed policy for that service and can be applied to the IAM Role for the ACK service controller by calling aws iam attach-role-policy on the contents of that file: SERVICE = s3 BASE_URL = https://github.com/aws-controllers-k8s/ $SERVICE -controller/blob/main POLICY_URL = $BASE_URL /config/iam/recommended-policy-arn POLICY_ARN = \"`wget -qO- $POLICY_URL `\" aws iam attach-role-policy \\ --role-name $IAM_ROLE \\ --policy-arn $POLICY_ARN Note Set the $IAM_ROLE variable above to the ARN of the IAM Role the ACK service controller will run as. Some services may need an additional inline policy, specified in config/iam/additional-policy , in addition to the managed policy from recommended-policy-arn . For example, the service controller may require iam:PassRole permission in order to pass an execution role which will be assumed by the AWS service. With $IAM_ROLE still set, run the script at config/iam/additional-policy if there is one to create the inline policy. Cross-account resource management \u00b6 ACK service controllers can manage resources in different AWS accounts. To enable and start using this feature, as an administrator, you will need to: Configure your AWS accounts, where the resources will be managed. Create a ConfigMap to map AWS accounts with the Role ARNs that needs to be assumed Annotate namespaces with AWS Account IDs For detailed information about how ACK service controllers manage resource in multiple AWS accounts, please refer to the CARM design document. Setting up AWS accounts \u00b6 AWS Account administrators should create/configure IAM roles to allow ACK service controllers to assume Roles in different AWS accounts. For example, to allow account A (000000000000) to create s3 buckets in account B (111111111111) you can use the following commands # Using account B credentials aws iam create-role --role-name s3FullAccess \\ --assume-role-policy-document '{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"arn:aws:iam::000000000000:role/roleA-production\"}, \"Action\": \"sts:AssumeRole\"}]}' aws iam attach-role-policy --role-name s3FullAccess \\ --policy-arn 'arn:aws:iam::aws:policy/service-role/AmazonS3FullAccess' Map AWS Accounts with their associated Role ARNs \u00b6 After you will need to create a ConfigMap to associate each AWS Account ID with the role ARN that needs be assumed, in order to manage resources in that particular account. cat <<EOF | kubectl apply -f - apiVersion: v1 kind: ConfigMap metadata: name: ack-role-account-map namespace: ack-system data: \"111111111111\": arn:aws:iam::111111111111:role/s3FullAccess EOF Bind accounts to namespaces \u00b6 To bind AWS accounts to a specific Namespace you will have to annotate the Namespace with an AWS Account ID. For example: cat <<EOF | kubectl apply -f - apiVersion: v1 kind: Namespace metadata: name: production annotations: services.k8s.aws/owner-account-id: 111111111111 EOF For existing namespaces you can also run: kubectl annotate namespace production services.k8s.aws/owner-account-id = 111111111111 Create resource in different AWS accounts \u00b6 Now to create resources in account B you will have to create your CRs in the associated Namespace . For example to create an s3 bucket in account B you can run the following command: cat <<EOF | kubectl apply -f - apiVersion: s3.services.k8s.aws/v1alpha1 kind: Bucket metadata: name: my-bucket namespace: production spec: name: my-bucket EOF","title":"Authorization and Access Control"},{"location":"user-docs/authorization/#authorization","text":"When we talk about authorization and access control for ACK, we need to discuss two different Role-based Access Control (RBAC) systems. Remember that Kubernetes RBAC governs a Kubernetes user's ability to read or write Kubernetes resources . In the case of ACK, this means that Kubernetes RBAC system controls the ability of a Kubernetes user to read or write different custom resources (CRs) that ACK service controllers use. On the other end of the authorization spectrum, you can use AWS Identity and Access Management (IAM) Policies to governs the ability of an AWS IAM Role to read or write certain AWS resources . IAM is more than RBAC AWS IAM is more than just an RBAC system. It handles authentication/identification and can be used to build Attribute-based Access Control (ABAC) systems. In this document, however, we're focusing on using IAM primitives to establish an RBAC system. These two RBAC systems do not overlap . The Kubernetes user that calls the Kubernetes API via calls to kubectl has no association with an IAM Role . Instead, it is the ServiceAccount running the ACK service controller's Pod that is associated with an IAM Role and is thus governed by the IAM RBAC system. RBAC authorization mode The above diagram assumes you are running Kubernetes API server with the RBAC authorization mode enabled.","title":"Authorization"},{"location":"user-docs/authorization/#configure-permissions","text":"Because ACK bridges the Kubernetes and AWS APIs, before using ACK service controllers, you will need to do some initial configuration around Kubernetes and AWS Identity and Access Management (IAM) permissions.","title":"Configure permissions"},{"location":"user-docs/authorization/#configuring-kubernetes-rbac","text":"As part of installation, certain Kubernetes Role resources will be created that contain permissions to modify the Kubernetes custom resources (CRs) that the ACK service controller is responsible for. Important All Kubernetes CRs managed by an ACK service controller are Namespaced resources; that is, there are no cluster-scoped ACK-managed CRs. By default, the following Kubernetes Role resources are created when installing an ACK service controller: ack-$SERVICE-writer : a Role used for reading and mutating namespace-scoped custom resources that the service controller manages. ack-$SERVICE-reader : a Role used for reading namespaced-scoped custom resources that the service controller manages. When installing a service controller, if the Role already exists (because an ACK controller for a different AWS service has previously been installed), permissions to manage CRDs and CRs associated with the installed controller's AWS service are added to the existing Role . For example, if you installed the ACK service controller for AWS S3, during that installation process, the ack-s3-writerr Role would have been granted read/write permissions to create CRs with a GroupKind of s3.services.k8s.aws/Bucket within a specific Kubernetes Namespace . Likewise the ack-s3-reader Role would have been granted read permissions to view CRs with a GroupKind of s3.services.k8s.aws/Bucket . If you later installed the ACK service controller for AWS SNS, the installation process would have added permissions to the ack-sns-writer Role to read/write CRs of GroupKind sns.services.k8s.aws/Topic and added permissions to the ack-sns-reader Role to read CRs of GroupKind sns.services.k8s.aws/Topic . If you would like to use a differently-named Kubernetes Role than the defaults, you are welcome to do so by modifying the Kubernetes manifests that are used as part of the installation process.","title":"Configuring Kubernetes RBAC"},{"location":"user-docs/authorization/#bind-a-kubernetes-user-to-a-kubernetes-role","text":"Once the Kubernetes Role resources have been created, you will want to assign a specific Kubernetes User to a particular Role . You do this using standard Kubernetes RoleBinding resource. For example, assume you want to have the Kubernetes User named \"alice\" have the ability to create, read, delete and modify S3 Buckets in the \"testing\" Kubernetes Namespace and the ability to just read SNS Topic CRs in the Kubernetes \"production\" Namespace you would execute the following commands: kubectl create rolebinding alice-ack-s3-writer --role ack-s3-writer --namespace testing --user alice kubectl create rolebinding alice-ack-sns--reader --role ack-sns-reader --namespace production --user alice As always, if you are curious whether a particular Kubernetes user can perform some action on a Kubernetes resource, you can use the kubectl auth can-i command, like this example shows: kubectl auth can-i create buckets --namespace default","title":"Bind a Kubernetes User to a Kubernetes Role"},{"location":"user-docs/authorization/#configuring-aws-iam","text":"Since ACK service controllers bridge the Kubernetes and AWS API worlds, in addition to configuring Kubernetes RBAC permissions, you will need to ensure that all AWS Identity and Access Management (IAM) roles and permissions have been properly created. The IAM Role that your ACK service controller runs as will need a different set of IAM Policies depending on which AWS service API the service controller is managing. For instance, the ACK service controller for S3 will need permissions to read and write S3 Buckets. We include with each service controller a recommended IAM Policy that restricts the ACK service controller to taking only the actions that the IAM Role needs to properly manage resources for that specific AWS service API. Within each service controller's source code repository is a config/iam/recommended-policy-arn document that contains the AWS Resource Name (ARN) of the recommended managed policy for that service and can be applied to the IAM Role for the ACK service controller by calling aws iam attach-role-policy on the contents of that file: SERVICE = s3 BASE_URL = https://github.com/aws-controllers-k8s/ $SERVICE -controller/blob/main POLICY_URL = $BASE_URL /config/iam/recommended-policy-arn POLICY_ARN = \"`wget -qO- $POLICY_URL `\" aws iam attach-role-policy \\ --role-name $IAM_ROLE \\ --policy-arn $POLICY_ARN Note Set the $IAM_ROLE variable above to the ARN of the IAM Role the ACK service controller will run as. Some services may need an additional inline policy, specified in config/iam/additional-policy , in addition to the managed policy from recommended-policy-arn . For example, the service controller may require iam:PassRole permission in order to pass an execution role which will be assumed by the AWS service. With $IAM_ROLE still set, run the script at config/iam/additional-policy if there is one to create the inline policy.","title":"Configuring AWS IAM"},{"location":"user-docs/authorization/#cross-account-resource-management","text":"ACK service controllers can manage resources in different AWS accounts. To enable and start using this feature, as an administrator, you will need to: Configure your AWS accounts, where the resources will be managed. Create a ConfigMap to map AWS accounts with the Role ARNs that needs to be assumed Annotate namespaces with AWS Account IDs For detailed information about how ACK service controllers manage resource in multiple AWS accounts, please refer to the CARM design document.","title":"Cross-account resource management"},{"location":"user-docs/authorization/#setting-up-aws-accounts","text":"AWS Account administrators should create/configure IAM roles to allow ACK service controllers to assume Roles in different AWS accounts. For example, to allow account A (000000000000) to create s3 buckets in account B (111111111111) you can use the following commands # Using account B credentials aws iam create-role --role-name s3FullAccess \\ --assume-role-policy-document '{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"arn:aws:iam::000000000000:role/roleA-production\"}, \"Action\": \"sts:AssumeRole\"}]}' aws iam attach-role-policy --role-name s3FullAccess \\ --policy-arn 'arn:aws:iam::aws:policy/service-role/AmazonS3FullAccess'","title":"Setting up AWS accounts"},{"location":"user-docs/authorization/#map-aws-accounts-with-their-associated-role-arns","text":"After you will need to create a ConfigMap to associate each AWS Account ID with the role ARN that needs be assumed, in order to manage resources in that particular account. cat <<EOF | kubectl apply -f - apiVersion: v1 kind: ConfigMap metadata: name: ack-role-account-map namespace: ack-system data: \"111111111111\": arn:aws:iam::111111111111:role/s3FullAccess EOF","title":"Map AWS Accounts with their associated Role ARNs"},{"location":"user-docs/authorization/#bind-accounts-to-namespaces","text":"To bind AWS accounts to a specific Namespace you will have to annotate the Namespace with an AWS Account ID. For example: cat <<EOF | kubectl apply -f - apiVersion: v1 kind: Namespace metadata: name: production annotations: services.k8s.aws/owner-account-id: 111111111111 EOF For existing namespaces you can also run: kubectl annotate namespace production services.k8s.aws/owner-account-id = 111111111111","title":"Bind accounts to namespaces"},{"location":"user-docs/authorization/#create-resource-in-different-aws-accounts","text":"Now to create resources in account B you will have to create your CRs in the associated Namespace . For example to create an s3 bucket in account B you can run the following command: cat <<EOF | kubectl apply -f - apiVersion: s3.services.k8s.aws/v1alpha1 kind: Bucket metadata: name: my-bucket namespace: production spec: name: my-bucket EOF","title":"Create resource in different AWS accounts"},{"location":"user-docs/install/","text":"Install \u00b6 In the following we walk you through installing an ACK service controller. !!! note IMPORTANT Individual ACK service controllers may be in different maintenance phases and follow separate release cadences. Please read our documentation about project stages and maintenance phases fully, including how we release and version our controllers. Controllers in a PREVIEW maintenance phase have at least one container image and Helm chart released to an ECR Public repository. However, be aware that controllers in a PREVIEW maintenance phase may have significant and breaking changes introduced in a future release. Docker images \u00b6 No single ACK Docker image Note that there is no single ACK Docker image. Instead, there are Docker images for each individual ACK service controller that manages resources for a particular AWS API. Each ACK service controller is packaged into a separate container image, published in a public ECR repository that corresponds to that ACK service controller. Controller images can be found in an ECR Public repository following the naming scheme public.ecr.aws/aws-controllers-k8s/{SERVICE}-controller . For example, you can find the Docker images for different releases of the RDS service controller for ACK in the public.ecr.aws/aws-controllers-k8s/rds-controller repository. There is an ECR Public Gallery link for the controller image repository at a similarly-schemed link https://gallery.ecr.aws/aws-controllers-k8s/$SERVICE-controller . For instance, to view the available Docker image releases of the RDS service controller for ACK, visit https://gallery.ecr.aws/aws-controllers-k8s/rds-controller . Individual ACK service controllers are tagged with a Semantic Version release tag, for example v0.5.0 . No 'latest' tag It is not good practice to rely on a :latest default image tag. There are actually no images tagged with a :latest tag in our image repositories. You should always specify a Semantic Version tag when referencing an ACK service controller image. Helm (recommended) \u00b6 The recommended way to install an ACK service controller for Kubernetes is to use Helm 3. Please ensure you have installed Helm 3 to your local environment before running these steps. Each ACK service controller has a separate Helm chart that installs\u2014as a Kubernetes Deployment \u2014the ACK service controller, necessary custom resource definitions (CRDs), Kubernetes RBAC manifests, and other supporting artifacts. There is a separate ECR Public repository that contains the Helm charts for a specific ACK service controller. The ECR Public repository for Helm charts follows the naming scheme public.ecr.aws/aws-controllers-k8s/$SERVICE-chart . For example, you can find the Helm charts for different releases of the RDS service controller for ACK in the public.ecr.aws/aws-controllers-k8s/rds-chart repository. There is an ECR Public Gallery link for the Helm chart repository at a similarly-schemed link https://gallery.ecr.aws/aws-controllers-k8s/$SERVICE-chart . For instance, to view the available Helm charts that install releases of the RDS service controller for ACK, visit https://gallery.ecr.aws/aws-controllers-k8s/rds-chart . Before installing a Helm chart, you must first make the Helm chart available on the deployment host. To do so, use the helm chart pull and helm chart export commands: export HELM_EXPERIMENTAL_OCI = 1 export SERVICE = s3 export RELEASE_VERSION = v0.0.1 export CHART_EXPORT_PATH = /tmp/chart export CHART_REPO = public.ecr.aws/aws-controllers-k8s/ $SERVICE -chart export CHART_REF = $CHART_REPO : $RELEASE_VERSION mkdir -p $CHART_EXPORT_PATH helm chart pull $CHART_REF helm chart export $CHART_REF --destination $CHART_EXPORT_PATH You then install a particular ACK service controller using the helm install CLI command: export ACK_K8S_NAMESPACE = ack-system kubectl create namespace $ACK_K8S_NAMESPACE helm install --namespace $ACK_K8S_NAMESPACE ack- $SERVICE -controller \\ $CHART_EXPORT_PATH /ack- $SERVICE -controller You will see the Helm chart installed: $ helm install --namespace $ACK_K8S_NAMESPACE ack- $SERVICE -controller $CHART_EXPORT_PATH /ack- $SERVICE -controller NAME: ack-s3-controller LAST DEPLOYED: Thu Dec 17 13 :09:17 2020 NAMESPACE: ack-system STATUS: deployed REVISION: 1 TEST SUITE: None You may then verify the Helm chart was installed using the helm list command: helm list --namespace $ACK_K8S_NAMESPACE -o yaml you should see your newly-deployed Helm chart release: $ helm list --namespace $ACK_K8S_NAMESPACE -o yaml - app_version: v0.0.1 chart: s3-controller name: ack-s3-controller namespace: ack-system revision: \"1\" status: deployed updated: 2020 -12-17 13 :09:17.309002201 -0500 EST Static Kubernetes manifests \u00b6 If you prefer not to use Helm, you may install a service controller using static Kubernetes manifests that are included in the source repository for an ACK service controller. Static Kubernetes manifests that install the individual service controller as a Kubernetes Deployment , along with the relevant Kubernetes RBAC resources are available in the config/ directory of the associated ACK service controller's source repository. For example, for the static manifests that will install the RDS service controller for ACK, check out the config/ directory of the RDS controller's source repo . Next Steps \u00b6 Once finished installing an ACK service controller, read about how Authorization and Access Control works.","title":"Install"},{"location":"user-docs/install/#install","text":"In the following we walk you through installing an ACK service controller. !!! note IMPORTANT Individual ACK service controllers may be in different maintenance phases and follow separate release cadences. Please read our documentation about project stages and maintenance phases fully, including how we release and version our controllers. Controllers in a PREVIEW maintenance phase have at least one container image and Helm chart released to an ECR Public repository. However, be aware that controllers in a PREVIEW maintenance phase may have significant and breaking changes introduced in a future release.","title":"Install"},{"location":"user-docs/install/#docker-images","text":"No single ACK Docker image Note that there is no single ACK Docker image. Instead, there are Docker images for each individual ACK service controller that manages resources for a particular AWS API. Each ACK service controller is packaged into a separate container image, published in a public ECR repository that corresponds to that ACK service controller. Controller images can be found in an ECR Public repository following the naming scheme public.ecr.aws/aws-controllers-k8s/{SERVICE}-controller . For example, you can find the Docker images for different releases of the RDS service controller for ACK in the public.ecr.aws/aws-controllers-k8s/rds-controller repository. There is an ECR Public Gallery link for the controller image repository at a similarly-schemed link https://gallery.ecr.aws/aws-controllers-k8s/$SERVICE-controller . For instance, to view the available Docker image releases of the RDS service controller for ACK, visit https://gallery.ecr.aws/aws-controllers-k8s/rds-controller . Individual ACK service controllers are tagged with a Semantic Version release tag, for example v0.5.0 . No 'latest' tag It is not good practice to rely on a :latest default image tag. There are actually no images tagged with a :latest tag in our image repositories. You should always specify a Semantic Version tag when referencing an ACK service controller image.","title":"Docker images"},{"location":"user-docs/install/#helm-recommended","text":"The recommended way to install an ACK service controller for Kubernetes is to use Helm 3. Please ensure you have installed Helm 3 to your local environment before running these steps. Each ACK service controller has a separate Helm chart that installs\u2014as a Kubernetes Deployment \u2014the ACK service controller, necessary custom resource definitions (CRDs), Kubernetes RBAC manifests, and other supporting artifacts. There is a separate ECR Public repository that contains the Helm charts for a specific ACK service controller. The ECR Public repository for Helm charts follows the naming scheme public.ecr.aws/aws-controllers-k8s/$SERVICE-chart . For example, you can find the Helm charts for different releases of the RDS service controller for ACK in the public.ecr.aws/aws-controllers-k8s/rds-chart repository. There is an ECR Public Gallery link for the Helm chart repository at a similarly-schemed link https://gallery.ecr.aws/aws-controllers-k8s/$SERVICE-chart . For instance, to view the available Helm charts that install releases of the RDS service controller for ACK, visit https://gallery.ecr.aws/aws-controllers-k8s/rds-chart . Before installing a Helm chart, you must first make the Helm chart available on the deployment host. To do so, use the helm chart pull and helm chart export commands: export HELM_EXPERIMENTAL_OCI = 1 export SERVICE = s3 export RELEASE_VERSION = v0.0.1 export CHART_EXPORT_PATH = /tmp/chart export CHART_REPO = public.ecr.aws/aws-controllers-k8s/ $SERVICE -chart export CHART_REF = $CHART_REPO : $RELEASE_VERSION mkdir -p $CHART_EXPORT_PATH helm chart pull $CHART_REF helm chart export $CHART_REF --destination $CHART_EXPORT_PATH You then install a particular ACK service controller using the helm install CLI command: export ACK_K8S_NAMESPACE = ack-system kubectl create namespace $ACK_K8S_NAMESPACE helm install --namespace $ACK_K8S_NAMESPACE ack- $SERVICE -controller \\ $CHART_EXPORT_PATH /ack- $SERVICE -controller You will see the Helm chart installed: $ helm install --namespace $ACK_K8S_NAMESPACE ack- $SERVICE -controller $CHART_EXPORT_PATH /ack- $SERVICE -controller NAME: ack-s3-controller LAST DEPLOYED: Thu Dec 17 13 :09:17 2020 NAMESPACE: ack-system STATUS: deployed REVISION: 1 TEST SUITE: None You may then verify the Helm chart was installed using the helm list command: helm list --namespace $ACK_K8S_NAMESPACE -o yaml you should see your newly-deployed Helm chart release: $ helm list --namespace $ACK_K8S_NAMESPACE -o yaml - app_version: v0.0.1 chart: s3-controller name: ack-s3-controller namespace: ack-system revision: \"1\" status: deployed updated: 2020 -12-17 13 :09:17.309002201 -0500 EST","title":"Helm (recommended)"},{"location":"user-docs/install/#static-kubernetes-manifests","text":"If you prefer not to use Helm, you may install a service controller using static Kubernetes manifests that are included in the source repository for an ACK service controller. Static Kubernetes manifests that install the individual service controller as a Kubernetes Deployment , along with the relevant Kubernetes RBAC resources are available in the config/ directory of the associated ACK service controller's source repository. For example, for the static manifests that will install the RDS service controller for ACK, check out the config/ directory of the RDS controller's source repo .","title":"Static Kubernetes manifests"},{"location":"user-docs/install/#next-steps","text":"Once finished installing an ACK service controller, read about how Authorization and Access Control works.","title":"Next Steps"},{"location":"user-docs/irsa/","text":"Setting up ACK with IAM Roles for Service Accounts \u00b6 IAM Roles for Service Accounts , or IRSA, is a system that automates the provisioning and rotation of IAM temporary credentials (called a Web Identity) that a Kubernetes ServiceAccount can use to call AWS APIs. The primary advantage of IRSA is that Kubernetes Pods which use the ServiceAccount associated with an IAM Role can have a reduced IAM permission footprint than the IAM Role in use for the Kubernetes EC2 worker node (known as the EC2 Instance Profile Role). This security concept is known as Least Privilege . For example, assume you have a broadly-scoped IAM Role with permissions to access the Instance Metadata Service (IMDS) from the EC2 worker node. If you do not want Kubernetes Pods running on that EC2 Instance to have access to IMDS, you can create a different IAM Role with a reduced permission set and associate this reduced-scope IAM Role with the Kubernetes ServiceAccount the Pod uses. IRSA will ensure that a special file is injected (and rotated periodically) into the Pod that contains a JSON Web Token (JWT) that encapsulates a request for temporary credentials to assume the IAM Role with reduced permissions. When AWS clients or SDKs connect to an AWS API, they detect the existence of this special token file and call the STS::AssumeRoleWithWebIdentity API to assume the IAM Role with reduced permissions. EKS is not required to use IRSA Note that you do not need to be using the Amazon EKS service in order to use IRSA. There are instructions on the amazon-eks-pod-identity-webhook repository for setting up IRSA on your own Kubernetes installation. IRSA setup on EKS cluster and install ACK controller using Helm \u00b6 Following steps provide example to setup IRSA on EKS cluster to install ACK ElastiCache controller using Helm charts. By modifying the variables values as needed, these steps can be applied for other ACK controllers. The steps include: 1. Create OIDC identity provider for cluster \u00b6 Create OIDC identity provider for cluster using CLI command. Example: EKS_CLUSTER_NAME=<eks cluster name> eksctl utils associate-iam-oidc-provider --cluster $EKS_CLUSTER_NAME --approve For detailed instructions, follow Enabling IAM roles for service accounts on your cluster . 2. Create an IAM role and policy for service account \u00b6 For detailed instructions, follow instructions at Creating an IAM role and policy for your service account . 2(a) - Create IAM role \u00b6 AWS_ACCOUNT_ID =$ ( aws sts get - caller - identity -- query \"Account\" -- output text ) OIDC_PROVIDER =$ ( aws eks describe - cluster -- name $ EKS_CLUSTER_NAME -- query \"cluster.identity.oidc.issuer\" -- output text | sed - e \"s/^https:\\/\\///\" ) ACK_K8S_NAMESPACE = ack - system ACK_K8S_SERVICE_ACCOUNT_NAME = ack - elasticache - controller read - r - d '' TRUST_RELATIONSHIP << EOF { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"Federated\" : \"arn:aws:iam::${AWS_ACCOUNT_ID}:oidc-provider/${OIDC_PROVIDER}\" }, \"Action\" : \"sts:AssumeRoleWithWebIdentity\" , \"Condition\" : { \"StringEquals\" : { \"${OIDC_PROVIDER}:sub\" : \"system:serviceaccount:${ACK_K8S_NAMESPACE}:${ACK_K8S_SERVICE_ACCOUNT_NAME}\" } } } ] } EOF echo \"${TRUST_RELATIONSHIP}\" > trust . json # update variables as needed AWS_SERVICE_NAME = 'elasticache' ACK_CONTROLLER_IAM_ROLE = \"ack-${AWS_SERVICE_NAME}-controller\" ACK_CONTROLLER_IAM_ROLE_DESCRIPTION = 'IRSA role for ACK $AWS_SERVICE_NAME controller deployment on EKS cluster using Helm charts' aws iam create - role -- role - name \"${ACK_CONTROLLER_IAM_ROLE}\" -- assume - role - policy - document file : // trust . json -- description \"${ACK_CONTROLLER_IAM_ROLE_DESCRIPTION}\" 2(b) - Attach IAM policy to role \u00b6 # This example uses pre-existing policy for ElastiCache # Create an IAM policy and use its ARN and update IAM_POLICY_ARN variable as needed IAM_POLICY_ARN = 'arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess' aws iam attach - role - policy \\ -- role - name \"${ACK_CONTROLLER_IAM_ROLE}\" \\ -- policy - arn \"$IAM_POLICY_ARN\" 3. Associate an IAM role to service account \u00b6 For detailed instructions, follow instructions at Associate an IAM role to a service account . 3(a) - If Helm charts available on local file system \u00b6 Update values.yaml and set value for aws.region , serviceAccount.annotations . # update variables as needed ACK_CONTROLLER_HELM_CHARTS_DIR =< directory containing Helm chart for ACK service controller > AWS_SERVICE_NAME = 'elasticache' ACK_K8S_NAMESPACE = ack - system ACK_K8S_RELEASE_NAME = ack -$ AWS_SERVICE_NAME - controller kubectl create namespace \"$ACK_K8S_NAMESPACE\" cd \"$ACK_CONTROLLER_HELM_CHARTS_DIR\" # dry run and view the resultant output helm install -- debug -- dry - run -- namespace \"$ACK_K8S_NAMESPACE\" \"$ACK_K8S_RELEASE_NAME\" . # install on cluster helm install -- namespace \"$ACK_K8S_NAMESPACE\" \"$ACK_K8S_RELEASE_NAME\" . Verify that the service account has been created on cluster and that its annotation include IAM Role (created during Step#2 above) arn: kubectl describe serviceaccount/$ACK_K8S_SERVICE_ACCOUNT_NAME -n $ACK_K8S_NAMESPACE 3(b) - If Helm charts have already been installed on cluster without modifying values.yaml \u00b6 For example, if installation was done as: AWS_SERVICE_NAME='elasticache' ACK_K8S_NAMESPACE=ack-system ACK_K8S_RELEASE_NAME=ack-$AWS_SERVICE_NAME-controller helm install --namespace $ACK_K8S_NAMESPACE ack-$AWS_SERVICE_NAME-controller $ACK_K8S_RELEASE_NAME Then service account would already exist on the cluster; however its association with IAM Role would be pending. Verify it using: kubectl describe serviceaccount/$ACK_K8S_SERVICE_ACCOUNT_NAME -n $ACK_K8S_NAMESPACE Observe that the arn of IAM Role (created during Step#2 above) is not set as annotation for the service account. To associate an IAM role to service account: # annotate service account with service role arn. ISRA_ROLE_ARN=<role arn> kubectl annotate serviceaccount -n $ACK_K8S_NAMESPACE $ACK_K8S_SERVICE_ACCOUNT_NAME $ISRA_ROLE_ARN Update aws region to use in the controller, if not done already: # update desired AWS region . example: us - east - 1 AWS_REGION =< aws region id > kubectl - n $ACK_K8S_NAMESPACE set env deployment / $ACK_K8S_RELEASE_NAME \\ AWS_REGION = \"$AWS_ACCOUNT_ID\" Verify \u00b6 Describe one of the pods and verify that the AWS_WEB_IDENTITY_TOKEN_FILE and AWS_ROLE_ARN environment variables exist. kubectl get pods - A kubectl exec - n kube - system aws - node -< 9 rgzw > env | grep AWS verify the output, example: AWS_VPC_K8S_CNI_LOGLEVEL = DEBUG AWS_ROLE_ARN = arn : aws : iam :: < AWS_ACCOUNT_ID > : role /< IAM_ROLE_NAME > AWS_WEB_IDENTITY_TOKEN_FILE =/ var / run / secrets / eks . amazonaws . com / serviceaccount / token \u00b6","title":"IAM Roles for Service Accounts"},{"location":"user-docs/irsa/#setting-up-ack-with-iam-roles-for-service-accounts","text":"IAM Roles for Service Accounts , or IRSA, is a system that automates the provisioning and rotation of IAM temporary credentials (called a Web Identity) that a Kubernetes ServiceAccount can use to call AWS APIs. The primary advantage of IRSA is that Kubernetes Pods which use the ServiceAccount associated with an IAM Role can have a reduced IAM permission footprint than the IAM Role in use for the Kubernetes EC2 worker node (known as the EC2 Instance Profile Role). This security concept is known as Least Privilege . For example, assume you have a broadly-scoped IAM Role with permissions to access the Instance Metadata Service (IMDS) from the EC2 worker node. If you do not want Kubernetes Pods running on that EC2 Instance to have access to IMDS, you can create a different IAM Role with a reduced permission set and associate this reduced-scope IAM Role with the Kubernetes ServiceAccount the Pod uses. IRSA will ensure that a special file is injected (and rotated periodically) into the Pod that contains a JSON Web Token (JWT) that encapsulates a request for temporary credentials to assume the IAM Role with reduced permissions. When AWS clients or SDKs connect to an AWS API, they detect the existence of this special token file and call the STS::AssumeRoleWithWebIdentity API to assume the IAM Role with reduced permissions. EKS is not required to use IRSA Note that you do not need to be using the Amazon EKS service in order to use IRSA. There are instructions on the amazon-eks-pod-identity-webhook repository for setting up IRSA on your own Kubernetes installation.","title":"Setting up ACK with IAM Roles for Service Accounts"},{"location":"user-docs/irsa/#irsa-setup-on-eks-cluster-and-install-ack-controller-using-helm","text":"Following steps provide example to setup IRSA on EKS cluster to install ACK ElastiCache controller using Helm charts. By modifying the variables values as needed, these steps can be applied for other ACK controllers. The steps include:","title":"IRSA setup on EKS cluster and install ACK controller using Helm"},{"location":"user-docs/irsa/#1-create-oidc-identity-provider-for-cluster","text":"Create OIDC identity provider for cluster using CLI command. Example: EKS_CLUSTER_NAME=<eks cluster name> eksctl utils associate-iam-oidc-provider --cluster $EKS_CLUSTER_NAME --approve For detailed instructions, follow Enabling IAM roles for service accounts on your cluster .","title":"1. Create OIDC identity provider for cluster"},{"location":"user-docs/irsa/#2-create-an-iam-role-and-policy-for-service-account","text":"For detailed instructions, follow instructions at Creating an IAM role and policy for your service account .","title":"2. Create an IAM role and policy for service account"},{"location":"user-docs/irsa/#2a-create-iam-role","text":"AWS_ACCOUNT_ID =$ ( aws sts get - caller - identity -- query \"Account\" -- output text ) OIDC_PROVIDER =$ ( aws eks describe - cluster -- name $ EKS_CLUSTER_NAME -- query \"cluster.identity.oidc.issuer\" -- output text | sed - e \"s/^https:\\/\\///\" ) ACK_K8S_NAMESPACE = ack - system ACK_K8S_SERVICE_ACCOUNT_NAME = ack - elasticache - controller read - r - d '' TRUST_RELATIONSHIP << EOF { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Principal\" : { \"Federated\" : \"arn:aws:iam::${AWS_ACCOUNT_ID}:oidc-provider/${OIDC_PROVIDER}\" }, \"Action\" : \"sts:AssumeRoleWithWebIdentity\" , \"Condition\" : { \"StringEquals\" : { \"${OIDC_PROVIDER}:sub\" : \"system:serviceaccount:${ACK_K8S_NAMESPACE}:${ACK_K8S_SERVICE_ACCOUNT_NAME}\" } } } ] } EOF echo \"${TRUST_RELATIONSHIP}\" > trust . json # update variables as needed AWS_SERVICE_NAME = 'elasticache' ACK_CONTROLLER_IAM_ROLE = \"ack-${AWS_SERVICE_NAME}-controller\" ACK_CONTROLLER_IAM_ROLE_DESCRIPTION = 'IRSA role for ACK $AWS_SERVICE_NAME controller deployment on EKS cluster using Helm charts' aws iam create - role -- role - name \"${ACK_CONTROLLER_IAM_ROLE}\" -- assume - role - policy - document file : // trust . json -- description \"${ACK_CONTROLLER_IAM_ROLE_DESCRIPTION}\"","title":"2(a) - Create IAM role"},{"location":"user-docs/irsa/#2b-attach-iam-policy-to-role","text":"# This example uses pre-existing policy for ElastiCache # Create an IAM policy and use its ARN and update IAM_POLICY_ARN variable as needed IAM_POLICY_ARN = 'arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess' aws iam attach - role - policy \\ -- role - name \"${ACK_CONTROLLER_IAM_ROLE}\" \\ -- policy - arn \"$IAM_POLICY_ARN\"","title":"2(b) - Attach IAM policy to role"},{"location":"user-docs/irsa/#3-associate-an-iam-role-to-service-account","text":"For detailed instructions, follow instructions at Associate an IAM role to a service account .","title":"3. Associate an IAM role to service account"},{"location":"user-docs/irsa/#3a-if-helm-charts-available-on-local-file-system","text":"Update values.yaml and set value for aws.region , serviceAccount.annotations . # update variables as needed ACK_CONTROLLER_HELM_CHARTS_DIR =< directory containing Helm chart for ACK service controller > AWS_SERVICE_NAME = 'elasticache' ACK_K8S_NAMESPACE = ack - system ACK_K8S_RELEASE_NAME = ack -$ AWS_SERVICE_NAME - controller kubectl create namespace \"$ACK_K8S_NAMESPACE\" cd \"$ACK_CONTROLLER_HELM_CHARTS_DIR\" # dry run and view the resultant output helm install -- debug -- dry - run -- namespace \"$ACK_K8S_NAMESPACE\" \"$ACK_K8S_RELEASE_NAME\" . # install on cluster helm install -- namespace \"$ACK_K8S_NAMESPACE\" \"$ACK_K8S_RELEASE_NAME\" . Verify that the service account has been created on cluster and that its annotation include IAM Role (created during Step#2 above) arn: kubectl describe serviceaccount/$ACK_K8S_SERVICE_ACCOUNT_NAME -n $ACK_K8S_NAMESPACE","title":"3(a) - If Helm charts available on local file system"},{"location":"user-docs/irsa/#3b-if-helm-charts-have-already-been-installed-on-cluster-without-modifying-valuesyaml","text":"For example, if installation was done as: AWS_SERVICE_NAME='elasticache' ACK_K8S_NAMESPACE=ack-system ACK_K8S_RELEASE_NAME=ack-$AWS_SERVICE_NAME-controller helm install --namespace $ACK_K8S_NAMESPACE ack-$AWS_SERVICE_NAME-controller $ACK_K8S_RELEASE_NAME Then service account would already exist on the cluster; however its association with IAM Role would be pending. Verify it using: kubectl describe serviceaccount/$ACK_K8S_SERVICE_ACCOUNT_NAME -n $ACK_K8S_NAMESPACE Observe that the arn of IAM Role (created during Step#2 above) is not set as annotation for the service account. To associate an IAM role to service account: # annotate service account with service role arn. ISRA_ROLE_ARN=<role arn> kubectl annotate serviceaccount -n $ACK_K8S_NAMESPACE $ACK_K8S_SERVICE_ACCOUNT_NAME $ISRA_ROLE_ARN Update aws region to use in the controller, if not done already: # update desired AWS region . example: us - east - 1 AWS_REGION =< aws region id > kubectl - n $ACK_K8S_NAMESPACE set env deployment / $ACK_K8S_RELEASE_NAME \\ AWS_REGION = \"$AWS_ACCOUNT_ID\"","title":"3(b) - If Helm charts have already been installed on cluster without modifying values.yaml"},{"location":"user-docs/irsa/#verify","text":"Describe one of the pods and verify that the AWS_WEB_IDENTITY_TOKEN_FILE and AWS_ROLE_ARN environment variables exist. kubectl get pods - A kubectl exec - n kube - system aws - node -< 9 rgzw > env | grep AWS verify the output, example: AWS_VPC_K8S_CNI_LOGLEVEL = DEBUG AWS_ROLE_ARN = arn : aws : iam :: < AWS_ACCOUNT_ID > : role /< IAM_ROLE_NAME > AWS_WEB_IDENTITY_TOKEN_FILE =/ var / run / secrets / eks . amazonaws . com / serviceaccount / token","title":"Verify"},{"location":"user-docs/irsa/#_1","text":"","title":""},{"location":"user-docs/usage/","text":"Usage \u00b6 In this section we discuss how to use AWS Controllers for Kubernetes. Prerequisites \u00b6 Before using AWS Controllers for Kubernetes, make sure to: install one or more ACK service controllers. configure permissions of Kubernetes and AWS Identity and Access Management Roles. Creating an AWS resource via the Kubernetes API \u00b6 TODO Viewing AWS resource information via the Kubernetes API \u00b6 TODO Deleting an AWS resource via the Kubernetes API \u00b6 TODO Modifying an AWS resource via the Kubernetes API \u00b6 TODO","title":"Usage"},{"location":"user-docs/usage/#usage","text":"In this section we discuss how to use AWS Controllers for Kubernetes.","title":"Usage"},{"location":"user-docs/usage/#prerequisites","text":"Before using AWS Controllers for Kubernetes, make sure to: install one or more ACK service controllers. configure permissions of Kubernetes and AWS Identity and Access Management Roles.","title":"Prerequisites"},{"location":"user-docs/usage/#creating-an-aws-resource-via-the-kubernetes-api","text":"TODO","title":"Creating an AWS resource via the Kubernetes API"},{"location":"user-docs/usage/#viewing-aws-resource-information-via-the-kubernetes-api","text":"TODO","title":"Viewing AWS resource information via the Kubernetes API"},{"location":"user-docs/usage/#deleting-an-aws-resource-via-the-kubernetes-api","text":"TODO","title":"Deleting an AWS resource via the Kubernetes API"},{"location":"user-docs/usage/#modifying-an-aws-resource-via-the-kubernetes-api","text":"TODO","title":"Modifying an AWS resource via the Kubernetes API"},{"location":"user-docs/wip/","text":"Work in progress ... \u00b6 ... check back later for end-user facing install and usage of ACK. Tip Use the developer preview and let us know via the issue tracker if something doesn't work as described there.","title":"Work in progress ..."},{"location":"user-docs/wip/#work-in-progress","text":"... check back later for end-user facing install and usage of ACK. Tip Use the developer preview and let us know via the issue tracker if something doesn't work as described there.","title":"Work in progress ..."}]}